//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppForBackGroundTasks.APIConfigServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="APIConfigServiceReference.IAPIConfigService")]
    public interface IAPIConfigService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIConfigService/GetAPIConfigData", ReplyAction="http://tempuri.org/IAPIConfigService/GetAPIConfigDataResponse")]
        string GetAPIConfigData(int ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAPIConfigService/GetAPIConfigData", ReplyAction="http://tempuri.org/IAPIConfigService/GetAPIConfigDataResponse")]
        System.IAsyncResult BeginGetAPIConfigData(int ID, System.AsyncCallback callback, object asyncState);
        
        string EndGetAPIConfigData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIConfigService/UpdateSession", ReplyAction="http://tempuri.org/IAPIConfigService/UpdateSessionResponse")]
        void UpdateSession(string session, int ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAPIConfigService/UpdateSession", ReplyAction="http://tempuri.org/IAPIConfigService/UpdateSessionResponse")]
        System.IAsyncResult BeginUpdateSession(string session, int ID, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateSession(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIConfigService/GetPoundRate", ReplyAction="http://tempuri.org/IAPIConfigService/GetPoundRateResponse")]
        string GetPoundRate();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAPIConfigService/GetPoundRate", ReplyAction="http://tempuri.org/IAPIConfigService/GetPoundRateResponse")]
        System.IAsyncResult BeginGetPoundRate(System.AsyncCallback callback, object asyncState);
        
        string EndGetPoundRate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAPIConfigService/SetPoundRate", ReplyAction="http://tempuri.org/IAPIConfigService/SetPoundRateResponse")]
        void SetPoundRate(string Poundrate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAPIConfigService/SetPoundRate", ReplyAction="http://tempuri.org/IAPIConfigService/SetPoundRateResponse")]
        System.IAsyncResult BeginSetPoundRate(string Poundrate, System.AsyncCallback callback, object asyncState);
        
        void EndSetPoundRate(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAPIConfigServiceChannel : AppForBackGroundTasks.APIConfigServiceReference.IAPIConfigService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAPIConfigDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAPIConfigDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPoundRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPoundRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class APIConfigServiceClient : System.ServiceModel.ClientBase<AppForBackGroundTasks.APIConfigServiceReference.IAPIConfigService>, AppForBackGroundTasks.APIConfigServiceReference.IAPIConfigService {
        
        private BeginOperationDelegate onBeginGetAPIConfigDataDelegate;
        
        private EndOperationDelegate onEndGetAPIConfigDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetAPIConfigDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSessionDelegate;
        
        private EndOperationDelegate onEndUpdateSessionDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSessionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPoundRateDelegate;
        
        private EndOperationDelegate onEndGetPoundRateDelegate;
        
        private System.Threading.SendOrPostCallback onGetPoundRateCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPoundRateDelegate;
        
        private EndOperationDelegate onEndSetPoundRateDelegate;
        
        private System.Threading.SendOrPostCallback onSetPoundRateCompletedDelegate;
        
        public APIConfigServiceClient() {
        }
        
        public APIConfigServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public APIConfigServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public APIConfigServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public APIConfigServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetAPIConfigDataCompletedEventArgs> GetAPIConfigDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateSessionCompleted;
        
        public event System.EventHandler<GetPoundRateCompletedEventArgs> GetPoundRateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetPoundRateCompleted;
        
        public string GetAPIConfigData(int ID) {
            return base.Channel.GetAPIConfigData(ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAPIConfigData(int ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAPIConfigData(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetAPIConfigData(System.IAsyncResult result) {
            return base.Channel.EndGetAPIConfigData(result);
        }
        
        private System.IAsyncResult OnBeginGetAPIConfigData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ID = ((int)(inValues[0]));
            return this.BeginGetAPIConfigData(ID, callback, asyncState);
        }
        
        private object[] OnEndGetAPIConfigData(System.IAsyncResult result) {
            string retVal = this.EndGetAPIConfigData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAPIConfigDataCompleted(object state) {
            if ((this.GetAPIConfigDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAPIConfigDataCompleted(this, new GetAPIConfigDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAPIConfigDataAsync(int ID) {
            this.GetAPIConfigDataAsync(ID, null);
        }
        
        public void GetAPIConfigDataAsync(int ID, object userState) {
            if ((this.onBeginGetAPIConfigDataDelegate == null)) {
                this.onBeginGetAPIConfigDataDelegate = new BeginOperationDelegate(this.OnBeginGetAPIConfigData);
            }
            if ((this.onEndGetAPIConfigDataDelegate == null)) {
                this.onEndGetAPIConfigDataDelegate = new EndOperationDelegate(this.OnEndGetAPIConfigData);
            }
            if ((this.onGetAPIConfigDataCompletedDelegate == null)) {
                this.onGetAPIConfigDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAPIConfigDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetAPIConfigDataDelegate, new object[] {
                        ID}, this.onEndGetAPIConfigDataDelegate, this.onGetAPIConfigDataCompletedDelegate, userState);
        }
        
        public void UpdateSession(string session, int ID) {
            base.Channel.UpdateSession(session, ID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateSession(string session, int ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSession(session, ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateSession(System.IAsyncResult result) {
            base.Channel.EndUpdateSession(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSession(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string session = ((string)(inValues[0]));
            int ID = ((int)(inValues[1]));
            return this.BeginUpdateSession(session, ID, callback, asyncState);
        }
        
        private object[] OnEndUpdateSession(System.IAsyncResult result) {
            this.EndUpdateSession(result);
            return null;
        }
        
        private void OnUpdateSessionCompleted(object state) {
            if ((this.UpdateSessionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSessionAsync(string session, int ID) {
            this.UpdateSessionAsync(session, ID, null);
        }
        
        public void UpdateSessionAsync(string session, int ID, object userState) {
            if ((this.onBeginUpdateSessionDelegate == null)) {
                this.onBeginUpdateSessionDelegate = new BeginOperationDelegate(this.OnBeginUpdateSession);
            }
            if ((this.onEndUpdateSessionDelegate == null)) {
                this.onEndUpdateSessionDelegate = new EndOperationDelegate(this.OnEndUpdateSession);
            }
            if ((this.onUpdateSessionCompletedDelegate == null)) {
                this.onUpdateSessionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSessionCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSessionDelegate, new object[] {
                        session,
                        ID}, this.onEndUpdateSessionDelegate, this.onUpdateSessionCompletedDelegate, userState);
        }
        
        public string GetPoundRate() {
            return base.Channel.GetPoundRate();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPoundRate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPoundRate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetPoundRate(System.IAsyncResult result) {
            return base.Channel.EndGetPoundRate(result);
        }
        
        private System.IAsyncResult OnBeginGetPoundRate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPoundRate(callback, asyncState);
        }
        
        private object[] OnEndGetPoundRate(System.IAsyncResult result) {
            string retVal = this.EndGetPoundRate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPoundRateCompleted(object state) {
            if ((this.GetPoundRateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPoundRateCompleted(this, new GetPoundRateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPoundRateAsync() {
            this.GetPoundRateAsync(null);
        }
        
        public void GetPoundRateAsync(object userState) {
            if ((this.onBeginGetPoundRateDelegate == null)) {
                this.onBeginGetPoundRateDelegate = new BeginOperationDelegate(this.OnBeginGetPoundRate);
            }
            if ((this.onEndGetPoundRateDelegate == null)) {
                this.onEndGetPoundRateDelegate = new EndOperationDelegate(this.OnEndGetPoundRate);
            }
            if ((this.onGetPoundRateCompletedDelegate == null)) {
                this.onGetPoundRateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPoundRateCompleted);
            }
            base.InvokeAsync(this.onBeginGetPoundRateDelegate, null, this.onEndGetPoundRateDelegate, this.onGetPoundRateCompletedDelegate, userState);
        }
        
        public void SetPoundRate(string Poundrate) {
            base.Channel.SetPoundRate(Poundrate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetPoundRate(string Poundrate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPoundRate(Poundrate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetPoundRate(System.IAsyncResult result) {
            base.Channel.EndSetPoundRate(result);
        }
        
        private System.IAsyncResult OnBeginSetPoundRate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Poundrate = ((string)(inValues[0]));
            return this.BeginSetPoundRate(Poundrate, callback, asyncState);
        }
        
        private object[] OnEndSetPoundRate(System.IAsyncResult result) {
            this.EndSetPoundRate(result);
            return null;
        }
        
        private void OnSetPoundRateCompleted(object state) {
            if ((this.SetPoundRateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPoundRateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPoundRateAsync(string Poundrate) {
            this.SetPoundRateAsync(Poundrate, null);
        }
        
        public void SetPoundRateAsync(string Poundrate, object userState) {
            if ((this.onBeginSetPoundRateDelegate == null)) {
                this.onBeginSetPoundRateDelegate = new BeginOperationDelegate(this.OnBeginSetPoundRate);
            }
            if ((this.onEndSetPoundRateDelegate == null)) {
                this.onEndSetPoundRateDelegate = new EndOperationDelegate(this.OnEndSetPoundRate);
            }
            if ((this.onSetPoundRateCompletedDelegate == null)) {
                this.onSetPoundRateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPoundRateCompleted);
            }
            base.InvokeAsync(this.onBeginSetPoundRateDelegate, new object[] {
                        Poundrate}, this.onEndSetPoundRateDelegate, this.onSetPoundRateCompletedDelegate, userState);
        }
    }
}
