//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace bfnexchange.Services.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IBettingServiceRest")]
    public interface IBettingServiceRest {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetMarketDatabyIDJsonString", ReplyAction="http://tempuri.org/IBettingServiceRest/GetMarketDatabyIDJsonStringResponse")]
        string GetMarketDatabyIDJsonString(string sheetname, string MainSportsCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetUserbetsForAdmin", ReplyAction="http://tempuri.org/IBettingServiceRest/GetUserbetsForAdminResponse")]
        string GetUserbetsForAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetUserBetsbyAgentIDwithZeroReferer", ReplyAction="http://tempuri.org/IBettingServiceRest/GetUserBetsbyAgentIDwithZeroRefererRespons" +
            "e")]
        string GetUserBetsbyAgentIDwithZeroReferer(int AgentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetAllMarketsBP", ReplyAction="http://tempuri.org/IBettingServiceRest/GetAllMarketsBPResponse")]
        string GetAllMarketsBP(string marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetAllMarketsBPFancy", ReplyAction="http://tempuri.org/IBettingServiceRest/GetAllMarketsBPFancyResponse")]
        string GetAllMarketsBPFancy(string marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetAllMarketsOthers", ReplyAction="http://tempuri.org/IBettingServiceRest/GetAllMarketsOthersResponse")]
        ExternalAPI.TO.MarketBookString[] GetAllMarketsOthers(string marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetAllMarketsOthersFancy", ReplyAction="http://tempuri.org/IBettingServiceRest/GetAllMarketsOthersFancyResponse")]
        ExternalAPI.TO.MarketBookString[] GetAllMarketsOthersFancy(string marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetAllMarkets", ReplyAction="http://tempuri.org/IBettingServiceRest/GetAllMarketsResponse")]
        ExternalAPI.TO.MarketBook[] GetAllMarkets(string marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetAllMarketsFancy", ReplyAction="http://tempuri.org/IBettingServiceRest/GetAllMarketsFancyResponse")]
        ExternalAPI.TO.MarketBook[] GetAllMarketsFancy(string marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetScoresbyEventIDandDate", ReplyAction="http://tempuri.org/IBettingServiceRest/GetScoresbyEventIDandDateResponse")]
        string GetScoresbyEventIDandDate(string EventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetAllMarketsFancyString", ReplyAction="http://tempuri.org/IBettingServiceRest/GetAllMarketsFancyStringResponse")]
        string GetAllMarketsFancyString(string marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetAllMarketsString", ReplyAction="http://tempuri.org/IBettingServiceRest/GetAllMarketsStringResponse")]
        string GetAllMarketsString(string marketID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetUserBetsbyAgentIDNew", ReplyAction="http://tempuri.org/IBettingServiceRest/GetUserBetsbyAgentIDNewResponse")]
        string GetUserBetsbyAgentIDNew(int AgentID, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBettingServiceRest/GetUserbetsbyUserID", ReplyAction="http://tempuri.org/IBettingServiceRest/GetUserbetsbyUserIDResponse")]
        string GetUserbetsbyUserID(int UserID, string Password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBettingServiceRestChannel : bfnexchange.Services.ServiceReference1.IBettingServiceRest, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BettingServiceRestClient : System.ServiceModel.ClientBase<bfnexchange.Services.ServiceReference1.IBettingServiceRest>, bfnexchange.Services.ServiceReference1.IBettingServiceRest {
        
        public BettingServiceRestClient() {
        }
        
        public BettingServiceRestClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BettingServiceRestClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BettingServiceRestClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BettingServiceRestClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetMarketDatabyIDJsonString(string sheetname, string MainSportsCategory) {
            return base.Channel.GetMarketDatabyIDJsonString(sheetname, MainSportsCategory);
        }
        
        public string GetUserbetsForAdmin() {
            return base.Channel.GetUserbetsForAdmin();
        }
        
        public string GetUserBetsbyAgentIDwithZeroReferer(int AgentID) {
            return base.Channel.GetUserBetsbyAgentIDwithZeroReferer(AgentID);
        }
        
        public string GetAllMarketsBP(string marketID) {
            return base.Channel.GetAllMarketsBP(marketID);
        }
        
        public string GetAllMarketsBPFancy(string marketID) {
            return base.Channel.GetAllMarketsBPFancy(marketID);
        }
        
        public ExternalAPI.TO.MarketBookString[] GetAllMarketsOthers(string marketID) {
            return base.Channel.GetAllMarketsOthers(marketID);
        }
        
        public ExternalAPI.TO.MarketBookString[] GetAllMarketsOthersFancy(string marketID) {
            return base.Channel.GetAllMarketsOthersFancy(marketID);
        }
        
        public ExternalAPI.TO.MarketBook[] GetAllMarkets(string marketID) {
            return base.Channel.GetAllMarkets(marketID);
        }
        
        public ExternalAPI.TO.MarketBook[] GetAllMarketsFancy(string marketID) {
            return base.Channel.GetAllMarketsFancy(marketID);
        }
        
        public string GetScoresbyEventIDandDate(string EventId) {
            return base.Channel.GetScoresbyEventIDandDate(EventId);
        }
        
        public string GetAllMarketsFancyString(string marketID) {
            return base.Channel.GetAllMarketsFancyString(marketID);
        }
        
        public string GetAllMarketsString(string marketID) {
            return base.Channel.GetAllMarketsString(marketID);
        }
        
        public string GetUserBetsbyAgentIDNew(int AgentID, string Password) {
            return base.Channel.GetUserBetsbyAgentIDNew(AgentID, Password);
        }
        
        public string GetUserbetsbyUserID(int UserID, string Password) {
            return base.Channel.GetUserbetsbyUserID(UserID, Password);
        }
    }
}
