@model IEnumerable<bfnexchange.Models.UserBets>

@{
    List<bfnexchange.Models.UserBets> lstMatchedBets = Model.Where(a => a.isMatched == true).ToList();

    List<bfnexchange.Models.UserBets> lstUnMatchedBets = Model.Where(a => a.isMatched == false).ToList();


    <div class="user-bets-wrapper">
        <h4>Bets</h4>

        @*@{string totamount = lstMatchedBets.Sum(item1 => Convert.ToDecimal(item1.Liabality)).ToString("F2");*@
        <input type="hidden" id="lbltotLiabality" value="@ViewData["liabality"]">
        <input type="hidden" id="lblallLiabality" value="@ViewBag.totliabality">
        <div class="unmatched-bets">
            <div class="matched-unmatched-heading">

                <label>@lstUnMatchedBets.Count Un-Matched Bets</label>
                <input type="button" id="btncancelUnmatchedBets" value="Cancel All" class="btn-default" />
            </div>
            @if (lstUnMatchedBets.Count > 0)
            {
                <div class="bets-header">
                    <div class="selection">
                        <label>Selection</label>
                    </div>
                    <div class="Odd">
                        <label>Odd</label>
                    </div>
                    <div class="Amount">
                        <label>Amount</label>
                    </div>
                    <div class="Editcancel">
                        <label>Edit</label>
                    </div>
                </div>
                foreach (var item in lstUnMatchedBets)
                {
                    if (item.BetType == "back")
                    {
                        <div class="bets-items back" data-id="@item.ID" data-bettype="@item.BetType" data-selectionid="@item.SelectionID" data-odd="@item.UserOdd" data-amount="@item.Amount" data-betsize="@item.BetSize" data-location="@item.location" data-pendingamount="@item.PendingAmount" data-parentID="@item.ParentID" data-marketbookname="@item.MarketBookname" data-marketbookID="@item.MarketBookID" data-selectionname="@item.SelectionName"  >
                            <div class="selection">
                                <label>@item.SelectionName</label>
                            </div>
                            <div class="Odd">
                                <label>@item.UserOdd</label>
                            </div>
                            <div class="Amount">
                                <label id="lblbetamount@(item.ID)">@item.Amount</label>
                            </div>
                            <div class="Editcancel">
                                <label class="cancelbetbutton" onclick="deleteuserbet(@item.ID)"></label>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="bets-items lay" data-id="@item.ID" data-bettype="@item.BetType" data-selectionid="@item.SelectionID" data-odd="@item.UserOdd" data-amount="@item.Amount" data-betsize="@item.BetSize" data-location="@item.location" data-pendingamount="@item.PendingAmount" data-parentID="@item.ParentID"  data-marketbookname="@item.MarketBookname" data-marketbookID="@item.MarketBookID" data-selectionname="@item.SelectionName">
                            <div class="selection">
                                <label>@item.SelectionName</label>
                            </div>
                            <div class="Odd">
                                <label>@item.UserOdd</label>
                            </div>
                            <div class="Amount">
                                <label id="lblbetamount@(item.ID)">@item.Amount</label>
                            </div>
                            <div class="Editcancel">
                                <a href="#">
                                    <span class="glyphicon glyphicon-edit" onclick="showbetslip('@item.SelectionID','@item.BetType',' @item.UserOdd','@item.Amount','@item.ID','@item.MarketBookID','@item.MarketBookname','@item.BetSize','0','@item.ParentID')"></span>
                                </a>
                                <a href="#">
                                    <span class="glyphicon glyphicon-remove-circle" onclick="deleteuserbet(@item.ID)"></span>
                                </a>
                              
                            </div>
                        </div>
                    }
                }
            }

        </div>

        <div class="matched-bets">
            <div class="matched-unmatched-heading">
                <label>@lstMatchedBets.Count Matched Bets</label>
            </div>
            @if (lstMatchedBets.Count > 0)
            {


                <div class="bets-header">
                    <div class="selection">
                        <label>Selection</label>
                    </div>
                    <div class="Odd">
                        <label>Odd</label>
                    </div>
                    <div class="Amount">
                        <label>Amount</label>
                    </div>
                </div>
                foreach (var item in lstMatchedBets)
                {
                   
                    if (item.BetType == "back")
                    {
                        <div class="bets-items back" data-id="@item.ID" data-bettype="@item.BetType" data-selectionid="@item.SelectionID" data-odd="@item.UserOdd" data-amount="@item.Amount" data-betsize="@item.BetSize" data-location="@item.location" data-pendingamount="@item.PendingAmount" data-parentID="@item.ParentID">
                            <div class="selection">
                                <label>@item.SelectionName</label>
                            </div>
                            <div class="Odd">
                                <label>@item.UserOdd</label>
                            </div>
                            <div class="Amount">
                                <label id="lblbetamount@(item.ID)">@item.Amount</label>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="bets-items lay" data-id="@item.ID" data-bettype="@item.BetType" data-selectionid="@item.SelectionID" data-odd="@item.UserOdd" data-amount="@item.Amount" data-betsize="@item.BetSize" data-location="@item.location" data-pendingamount="@item.PendingAmount" data-parentID="@item.ParentID">
                            <div class="selection">
                                <label>@item.SelectionName</label>
                            </div>
                            <div class="Odd">
                                <label>@item.UserOdd</label>
                            </div>
                            <div class="Amount">
                                <label id="lblbetamount@(item.ID)">@item.Amount</label>
                            </div>
                        </div>
                    }

                }
            }

        </div>




    </div>
    
    <script type="text/javascript">
        $(document).ready(function () {
           
            $("#btncancelUnmatchedBets").click(function () {
                setTimeout(function(){
                    var userbetsIDs = [];
                    $(".unmatched-bets .bets-items").each(function () {
                        var ID = $(this).attr("data-id");
                        userbetsIDs.push(ID);
                    })
                    if (userbetsIDs.length > 0) {
                        dataurl = '/Market/UpdateUnMatchedStatustoComplete';
                        $.ajax({
                            url: dataurl,

                            type: 'POST',
                         
                            data: { 'userbetsIDs': userbetsIDs },

                            complete: function () {

                            },
                            success: function (data) {
                           
                            }
                        });
                    }
                });
            },4000);
            if($("#AccountBalanceShow").val() != undefined && $("#lbltotLiabality").val() !==""){
                var currentliablity = "Current Liabality: " + $("#lbltotLiabality").val();
                var Totliablity = "Total Liabality: " + $("#lblallLiabality").val();
           
                var currentbalance = $("#AccountBalanceShow").val().trim().split(":");
                var newbalance = parseInt(currentbalance[1]) + parseInt($("#lblallLiabality").val());
                $("#CurrentUserBalance").html("Balance: " + newbalance.toString());

                // var currentliablity = "Current Liabality: " 
                $("#CurrentUserLiabality").html(currentliablity);
                $("#TotalLiabality").html(Totliablity);
            }
           
            
          
        });
    </script>
}