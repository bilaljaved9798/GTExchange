@model bfnexchange.HelperClasses.DefaultPageModel
<div class="defaultpage">


    <div class="col-md-12 no-padding">
        <div class="col-md-12 no-padding welcomemsgouter">
            <div id="welcomemessagediv">
                <h3>
                    <strong>
                        <a href="">@Model.WelcomeHeading</a>
                    </strong>
                </h3>
                <p>
                    <h4 style="color:red">@Model.Rule</h4>
                    All bets apply to Full Time according to the match officials, plus any stoppage time. Extra - time / penalty shoot - outs are not included.If this market is re - opened for In - Play betting, unmatched bets will be cancelled at kick off and the market turned in play.The market will be suspended if it appears that a goal has been scored, a penalty will be given, or a red card will be shown.With the exception of bets for which the 'keep' option has been selected, unmatched bets will be cancelled in the event of a confirmed goal or sending off.Please note that should our data feeds fail we may be unable to manage this game in-play.Customers should be aware   that:Transmissions described as â€œliveâ€ by some broadcasters may actually be delayed.The extent of any such delay may vary, depending on the set-up through which they are receiving pictures or data.If this market is scheduled to go in-play, but due to unforeseen circumstances we are unable to offer the market in-play, then this market will be re-opened for the half-time interval and suspended again an hour after the scheduled kick-off time."
                   
                    @*@Model.WelcomeMessage*@
                </p>
            </div>
        </div>
    </div>
    <div class="col-md-12 inplayhorserace no-padding">
        <div class="headingdiv">
            <span class="headingcaption">
                <strong>Today's horse racing</strong>
            </span>
        </div>
        <div class="bodydata">

			<div class="row " style="margin-left: 21px">
				<section class="center" style="width:80vw;">

											@foreach (var item in Model.TodayHorseRacing)
											{

												var marketnameandtype = item.RaceName.Split(' ');
												
											<div class="chk11" style="text-align:center; margin:2px;">
													<a onclick="lastLevelBreadcrumb('@item.MarketBookID.ToString()')" style="color:white; width:auto;">
														<b class="chkmobile">
															<span class="slidedate market-time">
															</span>
															<span class="d-none utctime" data-format="h:mm A" >
																@marketnameandtype[0].ToString()
																@marketnameandtype[1].ToString()   
															</span>
															<br>
															<span class='slidename'>
																@marketnameandtype[2].ToString()
																@marketnameandtype[3].ToString()
															</span>
														</b>
													</a>
													</div>
										}

             </section>
        </div>
			

        </div>
    </div>
	
	 <div class="col-md-12 inplayhorserace no-padding">
        <div class="headingdiv">
            <span class="headingcaption">
                <strong>Today's Greyhound </strong>
            </span>
        </div>
		<div class="bodydata">

			<div class="row " style="margin-left: 21px">
				<section class="center" style="width:80vw;">

					@foreach (var item in Model.TodayGreyRacing)
					{
						var marketnameandtype = item.RaceName.Split(' ');

						<div class="chk11" style="text-align:center; margin:2px;">
							<a onclick="lastLevelBreadcrumb('@item.MarketBookID.ToString()')" style="color:white; width:auto;">
								<b class="chkmobile">
									<span class="slidedate market-time">
									</span>
									<span class="d-none utctime" data-format="h:mm A">
										@marketnameandtype[0].ToString()
										@marketnameandtype[1].ToString()
									</span>
									<br>
									<span class='slidename'>
										@marketnameandtype[2].ToString()
										@marketnameandtype[3].ToString()
									</span>
								</b>
							</a>
						</div>
					}
				</section>
			</div>

		</div>
		</div>



	
	
    <div class="col-md-12 no-padding">
        <div class="col-md-12 no-padding">
            <div class="headingdiv">
                <span class="headingcaption">
                    <strong>Sport Highlights</strong>
                </span>
            </div>
            <div class="sporthighlightsuldiv">
                <ul class="inplaymatchheading">
                    @{

                        List<string> eventtypes = Model.AllMarkets.Select(x => x.CategoryName).Distinct().ToList();
                        foreach (var item in eventtypes)
                        {
                            <li role="presentation">
								@if(item=="Cricket")
								{
                                  
								<a onclick="setactiveinplaycategory('@(item.Trim())')" class="inplaymatchheadinglink" id="inplaymatchheading@(item.Trim())" style="color:black; font-weight:bold">
									<i ><img  src="~/Content/Images/cricket.png" /></i>
									@item
								</a>
								}			
								@if (item == "Soccer")
								{
									<a onclick="setactiveinplaycategory('@(item.Trim())')" class="inplaymatchheadinglink" id="inplaymatchheading@(item.Trim())" style="color:black;font-weight:bold">
										<i ><img style="height:20px; width:20px" src="~/Content/Images/soccer.png" /></i>
										
										@item
									</a>
								}
								@if(item=="Tennis")
								{
									 <a onclick="setactiveinplaycategory('@(item.Trim())')" class="inplaymatchheadinglink" id="inplaymatchheading@(item.Trim())" style="color:black;font-weight:bold">
<i ><img  src="~/Content/Images/tennis.png" /></i>                                  

								  @item
                                </a>
								}

                               
                            </li>
                        }
                    }
                </ul>
                <div class="col-md-12 no-padding">

                    @{


                        foreach (var item in eventtypes)
                        {
                            <div class="inplaydatabycategory" id="inplaydatafor@(item.Trim())" style="display:none">

                              

                                   
                              
                                @{
                                    List<string> lstcompetitions = Model.AllMarkets.Where(x => x.CategoryName == item).Select(x => x.CompetitionName).Distinct().ToList();
                                    foreach (var competition in lstcompetitions)
                                    {
                                        <div class="inplaydatarow">
                                            <div class="inplaycompetition">
                                                @competition
                                            </div>
                                        </div>
                                        List<bfnexchange.HelperClasses.AllMarketsInPlay> lstMatchesbytype = Model.AllMarkets.Where(x => x.CompetitionName == competition).ToList();
                                        foreach (var matchitem in lstMatchesbytype)
                                        {
                                            <div class="inplaydatarow">
												<div>
													<span class="inplaydash">
														@matchitem.MarketStatus
													</span>

												</div>
                                                <div class="inplaymatchname">
                                                     <a onclick="lastLevelBreadcrumb('@matchitem.MarketBookID.ToString()')">@matchitem.Runner1 v @matchitem.Runner2<br></a>
                                                
												</div>
												
												
												<div class="inplaytime"> @matchitem.MarketStartTime
												
												</div>
												
												

                                                <div class="inplaymatchbackandlay">
                                                    <div class="inplayrunner1">
                                                        <div class="inplayback">
                                                            @matchitem.Runner1Back
                                                        </div>
                                                        <div class="inplaylay">
                                                            @matchitem.Runner1Lay
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="inplaymatchbackandlay1">
                                                    <div class="inplayrunner1">
                                                        <div class="inplayback">
                                                            @matchitem.Runner3Back
                                                        </div>
                                                        <div class="inplaylay">
                                                            @matchitem.Runner3Lay
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="inplaymatchbackandlay2">
                                                    <div class="inplayrunner1">
                                                        <div class="inplayback">
                                                            @matchitem.Runner2Back
                                                        </div>
                                                        <div class="inplaylay">
                                                            @matchitem.Runner2Lay
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        }

                                    }

                                }

                            </div>
                                    }
                    }


                </div>
            </div>


        </div>


    </div>
</div>
<div id='myModalTerms' class='modal'>
    <div class="modal-dialog">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">Terms & Conditions Agreement</h4>
        </div>
        <div id="termscontent" class="modal-content">
            <p>
                All Global Trader users are advised to read following ‘Terms and Condition’, Any user who will place bet in Global Trader is understood to be agreeing and accepting following:
            </p>
            <ul>
                @foreach (var item in Model.ModalContent)
                {
                    <li>
                        <a>@item</a>
                    </li>
                }
            </ul>

        </div>
        <div class="modal-footer">
            <div class="checkbox pull-left">
                <label>
                    <input type="checkbox">
                    <span class="text">Don't show me again</span>
                </label>
            </div>
            <button type="button" class="btn btn-success" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true"><i class="fa fa-check-square-o fa-1x"></i> I agree with all the terms &amp; conditions</span>
            </button>

        </div>
    </div>
</div>

<script type="text/javascript">
    function setactiveinplaycategory(category) {
        $(".inplaymatchheadinglink").removeClass('activelink');
        $(".inplaydatabycategory").hide();
        $("#inplaydatafor" + category).show();
        $("#inplaymatchheading" + category).addClass('activelink');
    }


    $(document).ready(function () {
    	setactiveinplaycategory('Cricket');

    	$(".center").slick({
    		infinite: false,
    		slidesToShow: 8,
    		slidesToScroll: 3,
    		responsive: [
				{
					breakpoint: 1024,
					settings: {
						slidesToShow: 3,
						slidesToScroll: 3
					}
				},
				{
					breakpoint: 600,
					settings: {
						slidesToShow: 2,
						slidesToScroll: 2
					}
				},
				{
					breakpoint: 480,
					settings: {
						slidesToShow: 3,
						slidesToScroll: 2
					}
				}

    		]
    	});
    });
</script>


