@model IEnumerable<ExternalAPI.TO.MarketBook>


<ul class="nav nav-tabs marketbooksul">


    @foreach (var item in Model)
    {
    <li id="marketbook@(item.MarketId.ToString().Replace(".", ""))li" data-value="@item.MarketId">

        <a href="#marketbook@(item.MarketId.ToString().Replace(".", ""))" data-toggle="tab">@item.MarketBookName </a>
        <span class="close" onclick="deletetab('@(item.MarketId.ToString())')">x</span>
        <input type="hidden" id="selectedrunners@(item.MarketId.ToString().Replace(".", ""))" value="" />
		        <input type="hidden" id="selectedrunnersforavg@(item.MarketId.ToString().Replace(".", ""))" value="" />
        <input type="hidden" id="selectedrunnersclothnumber@(item.MarketId.ToString().Replace(".", ""))" value="" />
        <input type="hidden" id="marketbookCategory@(item.MarketId.ToString().Replace(".", ""))" value="@item.MainSportsname" />
        <input type="hidden" id="marketbookorignalopendate@(item.MarketId.ToString().Replace(".", ""))" value="@item.OrignalOpenDate" />
        <input type="hidden" id="marketbookname@(item.MarketId.ToString().Replace(".", ""))" value="@item.MarketBookName" />
        <input type="hidden" id="marketbookrunners@(item.MarketId.ToString().Replace(".", ""))" value="@item.Runners.Count.ToString()" />
        <input type="hidden" id="marketbookAllowedBetting@(item.MarketId.ToString().Replace(".", ""))" value="@Convert.ToInt32(item.BettingAllowed).ToString()" />
        <input type="hidden" id="marketbookAllowedBettingOverAll@(item.MarketId.ToString().Replace(".", ""))" value="@Convert.ToInt32(item.BettingAllowedOverAll).ToString()" />
        <input type="hidden" id="marketbookTotalMatched@(item.MarketId.ToString().Replace(".", ""))" value="@item.TotalMatched.ToString()" />
        <input type="hidden" id="currentteamforSelection@(item.MarketId.ToString().Replace(".", ""))" value="A" />
        <input type="hidden" id="currentview@(item.MarketId.ToString().Replace(".", ""))" value="0" />
		
        <input type="hidden" id="eventidfor@(item.MarketId.ToString().Replace(".", ""))" value="@item.EventID" />
        
    </li>
    }
</ul>

<div class="marketbookwintthetoss">

    @{
        foreach (var item in Model)
        {
            int valueid = 0;
	<div id="marketbook@(item.MarketId.ToString().Replace(".", ""))" data-marketid="@item.MarketId">
		<input type="hidden" id="totalmarketsopened@(item.MarketId.ToString().Replace(".", ""))" value="@item.marketsopened" />
		<input type="hidden" id="marketbooksheet@(item.MarketId.ToString().Replace(".", ""))" value="@item.SheetName" />



		<div class="marketnamehead">
			<label class="marketnameheadlabel">To Win the Toss</label>
		</div>
		<div id="marketbookdataforshow">



			<div class="col-md-12 col-sm-12 pull-left no-padding runnerswrapper runnerwrapperhead">
				<div class="col-md-2 col-sm-8 no-padding runnernamediv ">
					<label class="runnersname">

					</label>



				</div>


				<div class="col-md-7 col-sm-4 no-padding  runnerbackandlaydiv">
					<div class="col-md-12 col-sm-12 no-padding">
						<div class="col-md-6 col-sm-12 no-padding backhead">
							<div class="col-md-12 col-sm-12 no-padding">
								<div class="col-md-4 col-sm-4 no-padding">

								</div>
								<div class="col-md-4 no-padding">

								</div>
								<div class="col-md-12 col-sm-12 no-padding">

								</div>

							</div>

						</div>
						<div class="col-md-6 col-sm-12 no-padding layhead">
							<div class="col-md-12 col-sm-12 no-padding">
								<div class="col-md-12 col-sm-12 no-padding">

								</div>
								<div class="col-md-4 no-padding">

								</div>
								<div class="col-md-4 no-padding">

								</div>
							</div>
						</div>
					</div>
				</div>

			</div>


			<div class="backgroundimageforSuspended">


			</div>
			@foreach (var runner in item.Runners)
			{
				<div id="selection@(runner.SelectionId.Replace(" ",""))" class="col-md-12 pull-left col-sm-12 no-padding runnerswrapper">

					<div id="runnernamediv@(runner.SelectionId)" class="col-md-2 col-sm-8 no-padding runnernamediv">
						<label style="display:none">
							@runner.SelectionId
						</label>
						@if (item.MainSportsname == "Horse Racing" && runner.JockeyName != "Not")
						{<input type="checkbox" id="chkselection@(runner.SelectionId)" class="checkboxrunnername" onchange="AddRunnersformultiplebets('@runner.SelectionId')" />
							<div class="clothnumstalldrawimg" id="clothnumstalldrawimg@(runner.SelectionId)" onclick="triggerchangemethod('@runner.SelectionId','@item.MarketId.Replace(".", "")')">


								<label data-value="@runner.SelectionId" class="runners runnersclothnumber" id="lblSelectionClothnumber@(runner.SelectionId)" title="Cloth number">
									@runner.Clothnumber
								</label>
								<label data-value="@runner.StallDraw" class="runners runnersStallDraw" id="lblSelectionStallDraw@(runner.SelectionId)" title="Stall Draw">
									(@runner.StallDraw)
								</label>
								@{
									runner.WearingURL = runner.WearingURL.ToString().Replace(".betfair.com", ".cdnbf.net");
								}
								<div class="wearingdiv"> <img class="runnerwearing" src="@runner.WearingURL" title="@runner.WearingDesc" onerror="this.onerror = null; this.src = '../Content/images/not-found.png';" /></div>
							</div>

							<label for="chkselection@(runner.SelectionId)" data-value="@runner.SelectionId" class="runners runnersnameHorse" id="lblSelectionName@(runner.SelectionId)">
								@runner.RunnerName
							</label>

							<label id="lbljockey@(runner.SelectionId)" class="jockeyname" title="Jockey name">@runner.JockeyName</label>
							<div class="no-padding runnerprofitandlossdivMobile">
								@if (runner.ProfitandLoss >= 0)
								{
									<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossgreen">
										@runner.ProfitandLoss
									</label>


								}
								else
								{
									<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossred">
										@runner.ProfitandLoss
									</label>

								}
								@if (item.MarketBookName.Contains("To Be Placed"))
								{
									if (runner.Loss >= 0)
									{
										<label id="lblloss@(runner.SelectionId)" class="runnersprofitlossgreen">
											@runner.Loss
										</label>
									}
									else
									{
										<label id="lblloss@(runner.SelectionId)" class="runnersprofitlossred">
											@runner.Loss
										</label>
									}
								}


							</div>
						}
						else
						{
							if (item.MainSportsname.Contains("Racing"))
							{
								<input type="checkbox" id="chkselection@(runner.SelectionId)" class="checkboxrunnername" onchange="AddRunnersformultiplebets('@runner.SelectionId')" />
								<div class="clothnumstalldrawimgempty" id="clothnumstalldrawimg@(runner.SelectionId)" onclick="triggerchangemethod('@runner.SelectionId','@item.MarketId.Replace(".","")')"></div>
								<label for="chkselection@(runner.SelectionId)" data-value="@runner.SelectionId" class="runners runnersname" id="lblSelectionName@(runner.SelectionId)">
									@runner.RunnerName
								</label>
								<div class="no-padding runnerprofitandlossdivMobile">
									@if (runner.ProfitandLoss >= 0)
									{
										<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossgreen">
											@runner.ProfitandLoss
										</label>
									}
									else
									{
										<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossred">
											@runner.ProfitandLoss
										</label>
									}
									@if (item.MarketBookName.Contains("To Be Placed"))
									{
										if (runner.Loss >= 0)
										{
											<label id="lblloss@(runner.SelectionId)" class="runnersprofitlossgreen">
												@runner.Loss
											</label>
										}
										else
										{
											<label id="lblloss@(runner.SelectionId)" class="runnersprofitlossred">
												@runner.Loss
											</label>
										}
									}


								</div>
							}
							else
							{
								if (item.MainSportsname == "Cricket")
								{
									<input type="checkbox" id="chkselectionforaverage@(runner.SelectionId)" class="checkboxrunnernameavgTWT" onchange="AddRunnersforaveragecalTWT('@runner.SelectionId')" data-value="@runner.SelectionId" />
								}
								<input type="checkbox" id="chkselection@(runner.SelectionId)" class="checkboxrunnername" onchange="AddRunnersformultiplebets('@runner.SelectionId')" />
								<div class="clothnumstalldrawimgemptynotshow" id="clothnumstalldrawimg@(runner.SelectionId)" onclick="triggerchangemethod('@runner.SelectionId','@item.MarketId.Replace(".","")')"></div>
								<label for="chkselection@(runner.SelectionId)" data-value="@runner.SelectionId" class="runners runnersnamenotrace" id="lblSelectionName@(runner.SelectionId)">
									@runner.RunnerName
								</label>
								<div class="no-padding runnerprofitandlossdivMobile">
									@if (runner.ProfitandLoss >= 0)
									{
										<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossgreen">
											@runner.ProfitandLoss
										</label>
										<label id="lblaverage@(runner.SelectionId)" class="runnersaveragegreen">
											@runner.Average
										</label>
									}
									else
									{
										<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossred">
											@runner.ProfitandLoss
										</label>
										<label id="lblaverage@(runner.SelectionId)" class="runnersaveragered">
											@runner.Average
										</label>
									}
									@if (item.MarketBookName.Contains("To Be Placed"))
									{
										if (runner.Loss >= 0)
										{
											<label id="lblloss@(runner.SelectionId)" class="runnersprofitlossgreen">
												@runner.Loss
											</label>
										}
										else
										{
											<label id="lblloss@(runner.SelectionId)" class="runnersprofitlossred">
												@runner.Loss
											</label>
										}
									}


								</div>
							}

						}


					</div>
					<div class="col-md-1 no-padding col-sm-1 runnerlastpricediv">
						<label id="lblrunnerlastprice@(runner.SelectionId)" class="runnerslastprice">
							@runner.LastPriceTraded
						</label>

					</div>

					<div id="backandlaydivMain" class="no-padding priceandsize matchcolors runnerbackandlaydiv">
						<div id="backandlaydivsecond" class="no-padding">
							<div id="backandlaydivthird" class="no-padding">


								@for (int i = 2; i >= 0; i--)
								{
								if (runner.ExchangePrices.AvailableToBack.Count - 1 >= i && runner.ExchangePrices.AvailableToBack.Count > 0 && runner.ExchangePrices.AvailableToBack[i].Price > 0)
								{



								<div id="backitemval" class="no-padding backitem">



									<label style="font-size:22px;font-weight:bolder !important;font-family:'Times New Roman', Times, serif;" id="lblbackprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ", " "))" class="selectionprice" onclick="showbetslip('@runner.SelectionId.Replace(" ", " ")','back',' @runner.ExchangePrices.AvailableToBack[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToBack[i].Size','@i','0')">
										@runner.ExchangePrices.AvailableToBack[i].Price
									</label>
									<label style="font-size:13px" id="lblbacksize@(i.ToString() + runner.SelectionId.ToString().Replace(" ", " "))" class="selectionsize" onclick="showbetslip('@runner.SelectionId.Replace(" ", " ")','back',' @runner.ExchangePrices.AvailableToBack[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToBack[i].Size','@i','0')">
										@runner.ExchangePrices.AvailableToBack[i].Size
									</label>

								</div>
								}
								else
								{
								<div id="backitemvalelse" class="no-padding backitem">



									<label style="font-size:22px;font-weight:bolder !important;font-family:'Times New Roman', Times, serif;" id="lblbackprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ", " "))" class="selectionprice">
									</label>
									<label style="font-size:13px" id="lblbacksize@(i.ToString() + runner.SelectionId.ToString().Replace(" ", " "))" class="selectionsize">

									</label>
								</div>
								}
								}

							</div>




							<div id="ExchangePricesmain" class="no-padding">
								@for (int i = 0; i < 3; i++)
								{
								if (runner.ExchangePrices.AvailableToLay.Count > i && runner.ExchangePrices.AvailableToLay.Count > 0 && runner.ExchangePrices.AvailableToLay[i].Price > 0)
								{
								<div id="layitemmain" class="no-padding layitem">

									<label style="font-size:22px;font-weight:bolder !important;font-family:'Times New Roman', Times, serif;" id="lbllayprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ", " "))" class="selectionprice" onclick="showbetslip('@runner.SelectionId.Replace(" ", " ")','lay',' @runner.ExchangePrices.AvailableToLay[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToLay[i].Size','@i','0')">
										@runner.ExchangePrices.AvailableToLay[i].Price
									</label>
									<label style="font-size:13px" id="lbllaysize@(i.ToString() + runner.SelectionId.ToString().Replace(" ", " "))" class="selectionsize" onclick="showbetslip('@runner.SelectionId.Replace(" ", " ")','lay',' @runner.ExchangePrices.AvailableToLay[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToLay[i].Size','@i','0')">
										@runner.ExchangePrices.AvailableToLay[i].Size
									</label>


								</div>
								}
								else
								{
								<div id="layitemelse" class="no-padding layitem">
									<label style="font-size:22px;font-weight:bolder !important;font-family:'Times New Roman', Times, serif;" id="lbllayprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ", " "))" class="selectionprice">

									</label>
									<label style="font-size:13px" id="lbllaysize@(i.ToString() + runner.SelectionId.ToString().Replace(" ", " "))" class="selectionsize">

									</label>
								</div>
								}

								}
							</div>

						</div>
							</div>

					


				</div>
			
					valueid = valueid + 1;
			}



		</div>

            </div>



                                        }

    }
</div>



<script type="text/javascript">

    $(document).ready(function () {

        //$.ajax({
        //    url: '/DashBoard/CuttingUsers',
        //    async: false,
        //    type: 'POST',


        //    complete: function () {
        //        $('.selectpicker').selectpicker();


        //        HideLoader();
        //    },
        //    success: function (data) {

        //        $("#allusersCuttingUsers").html(data);

        //        //// $form.html(data);
        //        // $form.removeData('validator');
        //        // $form.removeData('unobtrusiveValidation');
        //        // $.validator.unobtrusive.parse($form);
        //    }
        //});
        $(".runners").each(function () {

            var id = $(this).attr("data-value");
            //LoadRunnername(id);

            if ($("#openedbetslipid").val() == id) {

                SetBackandlayonbetslip(id);
            }

        });

    });

</script>
