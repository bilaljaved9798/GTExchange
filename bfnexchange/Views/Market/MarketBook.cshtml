@model IEnumerable<ExternalAPI.TO.MarketBook>
@if (Model.Count() > 0)
{
    <input type="hidden" id="totalmarketsopened" value="@Model.FirstOrDefault().marketsopened" />
}
else
{
    <input type="hidden" id="totalmarketsopened" value="0" />
}
<input type="hidden" id="lblallLiabalityNew" value="@ViewBag.totliabalityNew">
<ul class="nav nav-tabs marketbooksul">


    @foreach (var item in Model)
    {
        <li id="marketbook@(item.MarketId.ToString().Replace(".", ""))li" onclick="SetLastLoadedMarket('@item.MarketId')" data-value="@item.MarketId">

            <a href="#marketbook@(item.MarketId.ToString().Replace(".", ""))" data-toggle="tab">@item.MarketBookName </a>
            <span class="close" onclick="deletetab('@(item.MarketId.ToString())')">x</span>
            <input type="hidden" id="selectedrunners@(item.MarketId.ToString().Replace(".", ""))" value="" />
            <input type="hidden" id="selectedrunnersforavg@(item.MarketId.ToString().Replace(".", ""))" value="" />
            <input type="hidden" id="selectedrunnersclothnumber@(item.MarketId.ToString().Replace(".", ""))" value="" />
            <input type="hidden" id="marketbookCategory@(item.MarketId.ToString().Replace(".", ""))" value="@item.MainSportsname" />
            <input type="hidden" id="marketbookorignalopendate@(item.MarketId.ToString().Replace(".", ""))" value="@item.OrignalOpenDate" />
            <input type="hidden" id="marketbookname@(item.MarketId.ToString().Replace(".", ""))" value="@item.MarketBookName" />
            <input type="hidden" id="marketbookrunners@(item.MarketId.ToString().Replace(".", ""))" value="@item.Runners.Count.ToString()" />
            <input type="hidden" id="marketbookAllowedBetting@(item.MarketId.ToString().Replace(".", ""))" value="@Convert.ToInt32(item.BettingAllowed).ToString()" />
            <input type="hidden" id="marketbookAllowedBettingOverAll@(item.MarketId.ToString().Replace(".", ""))" value="@Convert.ToInt32(item.BettingAllowedOverAll).ToString()" />
            <input type="hidden" id="marketbookTotalMatched@(item.MarketId.ToString().Replace(".", ""))" value="@item.TotalMatched.ToString()" />
            <input type="hidden" id="currentteamforSelection@(item.MarketId.ToString().Replace(".", ""))" value="A" />
            <input type="hidden" id="currentview@(item.MarketId.ToString().Replace(".", ""))" value="0" />
            <input type="hidden" id="getmatchupdatesfrom@(item.MarketId.ToString().Replace(".", ""))" value="@item.GetMatchUpdatesFrom" />
            <input type="hidden" id="eventidfor@(item.MarketId.ToString().Replace(".", ""))" value="@item.EventID" />
            @if (item.LineVMarkets != null)
            {


                <input type="hidden" id="marketbookFancyIDs@(item.MarketId.ToString().Replace(".", ""))" value="true" />
                @*<input type="hidden" id="marketbookFancyMarket@(item.MarketId.ToString().Replace(".", ""))" value="@LoggedinUserDetail.ConverttoJSONString(@item.LineVMarkets)" />*@
            }
            else
            {
                <input type="hidden" id="marketbookFancyIDs@(item.MarketId.ToString().Replace(".", ""))" value="false" />
            }

            <input type="hidden" id="marketbookFancyShown@(item.MarketId.ToString().Replace(".", ""))" value="true" />
            @if (item.MainSportsname == "Cricket" && item.MarketBookName.Contains("Match Odds"))
            {
                <input type="hidden" id="marketbookgetscores@(item.MarketId.ToString().Replace(".", ""))" value="true" />
                <input type="hidden" id="marketbookcricketkey@(item.MarketId.ToString().Replace(".", ""))" value="@item.CricketMatchKey" />
            }
            else
            {
                <input type="hidden" id="marketbookgetscores@(item.MarketId.ToString().Replace(".", ""))" value="false" />
            }
        </li>
    }
</ul>

    <div class="tab-content">

        @{
            foreach (var item in Model)
            {
                int valueid = 0;
                <div id="marketbook@(item.MarketId.ToString().Replace(".", ""))" class="tab-pane" data-marketid="@item.MarketId">
                    <input type="hidden" id="totalmarketsopened@(item.MarketId.ToString().Replace(".", ""))" value="@item.marketsopened" />
                    <input type="hidden" id="marketbooksheet@(item.MarketId.ToString().Replace(".", ""))" value="@item.SheetName" />

					<div class="col-md-12 no-padding marketinfo">
						<div>

							@{
								var marketnameandtype = item.MarketBookName.Split('/');
								string marketname = marketnameandtype[0];
								string marketname1 = marketnameandtype[1];
							<div class="marketname" style="background-color:@ViewBag.backgrod;color:@ViewBag.color">
								<span class="Maintime" id="lblStartTime@(item.MarketId.ToString().Replace(".", ""))">




									@item.OrignalOpenDate.Value.AddHours(5).ToString("hh:mm")

									<span class="Maintime" id="lblStartTime@(item.MarketId.ToString().Replace(".", ""))">@item.OrignalOpenDate.Value.AddHours(5).ToString("ddd, dd MMM")</span>

								</span>

								<label class="markettime" id="lbltimer@(item.MarketId.ToString().Replace(".", ""))">
									@item.OpenDate

							</label>

						<label title="Rules" class="rule active1" onclick="showmarketrules('@item.MainSportsname','@item.MarketBookName','@item.Runners.Count.ToString()')"><i class="fa fa-info-circle" /> </label>



							<br>

							<span class="namestyle">
								@if (item.MainSportsname == "Cricket")
								{
									<img class="timrimg" src="~/Content/Images/ws4.png" style="height:35px" />
								}
								@if (item.MainSportsname == "Horse Racing")
								{
									<img class="timrimg" src="~/Content/Images/ws7.png" style="height:35px" />
								}
								@if (item.MainSportsname == "Greyhound Racing")
								{
									<img class="timrimg" src="~/Content/Images/ws4339.png" style="height:35px" />
								}
								@if (item.MainSportsname == "Tennis")
								{
									<img class="timrimg" src="~/Content/Images/ws2.png" style="height:35px" />
								}

								@if (item.MainSportsname == "Soccer")
								{
									<img class="timrimg" src="~/Content/Images/ws1.png" style="height:35px" />
								}

								@marketname
							</span>






							</div>

							}

						</div>
						@if (item.MainSportsname == "Cricket" || item.MainSportsname == "Soccer" || item.MainSportsname == "Tennis")
						{

							<div id="matchscores">

							</div>

						}
						

					</div>

                    <div id="favoriteselectionfixed@(item.MarketId.ToString().Replace(".", ""))" class="favoriteselection">

                        <div class="favoriteselectionname">
                            @if (item.FavoriteSelectionName != "")
                            {
                                <label id="lblfavoritename@(item.MarketId.ToString().Replace(".", ""))">@item.FavoriteSelectionName</label>
                            }
                            else
                            {
                                <label id="lblfavoritename@(item.MarketId.ToString().Replace(".", ""))"></label>
                            }
                            @{
                                try
                                {
                                    string favID = item.FavoriteID;
                                    <label id="lblfavoriteselection@(item.MarketId.ToString().Replace(".", ""))" style="display:none">@favID</label>
                                }
                                catch (System.Exception ex)
                                {
                                    var err = ex.Message;
                                }


                            }

                        </div>

                        <div class="favoritepricebackandlay matchcolors">
                            <div class="favoritebackprice">
                                <label id="lblfavoritebackprice@(item.MarketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','back',' @(Convert.ToDecimal(item.FavoriteBack) + 1)','4000','0','@item.MarketId','@item.MarketBookName','@item.FavoriteBackSize','0')">@item.FavoriteBack</label>
                            </div>
                            <div class="favoritelayprice">
                                <label id="lblfavoritelayprice@(item.MarketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','lay',' @(Convert.ToDecimal(item.FavoriteLay) + 1)','4000','0','@item.MarketId','@item.MarketBookName','@item.FavoriteLaySize','0')">@item.FavoriteLay</label>
                            </div>
                        </div>
                        <div class="favoritesizebackandlay">
                            <div class="favoritebacksize">
                                <label id="lblfavoritebacksize@(item.MarketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','back',' @(Convert.ToDecimal(item.FavoriteBack) + 1)','4000','0','@item.MarketId','@item.MarketBookName','@item.FavoriteBackSize','0')">@item.FavoriteBackSize</label>
                            </div>
                            <div class="favoritelaysize">
                                <label id="lblfavoritelaysize@(item.MarketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','lay',' @(Convert.ToDecimal(item.FavoriteLay) + 1)','4000','0','@item.MarketId','@item.MarketBookName','@item.FavoriteLaySize','0')">@item.FavoriteLaySize</label>
                            </div>
                        </div>

                    </div>
                    <div id="marketbookdataforshow">										
						<div>
							@if (item.MarketBookName.ToString().Contains("To Be Placed"))
							{



							}

							@if (LoggedinUserDetail.GetUserTypeID() == 3)
							{
								if (item.BettingAllowed == false || item.BettingAllowedOverAll == false)
								{
									<label id="marketbookbettingaloowed@(item.MarketId.ToString().Replace(".", ""))" class="marketbettingallowed" style="display:none">Betting Not Allowed</label>
								}

							}

									<label class="rule1 active1 s23e" style="float: left;">@marketname1  || 1 Winner  </label>
							

							@if (item.MarketStatusstr == "In Play")
							{
								<label id="marketbookstatus@(item.MarketId.ToString().Replace(".", ""))" class="marketstatusG s23e inplay">IN-PLAY</label>
							}
							else
							{
								if (item.MarketStatusstr == "Suspended")
								{

									<label id="marketbookstatus@(item.MarketId.ToString().Replace(".", ""))" class="marketstatusS s23e" style="color:Orange;">SUSPENDED</label>

								}
								else
								{
									if (item.MarketStatusstr == "Closed")
									{

										<label id="marketbookstatus@(item.MarketId.ToString().Replace(".", ""))" class="marketstatusC s23e" style="color:red;">MARKET CLOSED</label>

									}
									else
									{
										<label id="marketbookstatus@(item.MarketId.ToString().Replace(".", ""))" class="marketstatusG s23e">GOING LIVE</label>
									}

								}
							}

							<div class="marketstatusrulesandmarkettype">




							</div>

						</div>
						
						

                        <div class="table-responsive" id="mainhight">
                           <div id="TotalMatchedBackandlay" class="col-md-12 col-sm-12 pull-left no-padding runnerswrapper runnerwrapperhead">
									<div class="col-md-2 col-sm-8 no-padding runnernamediv ">
										<label class="markettotalmatched" id="lblmarketbookTotalMatched@(item.MarketId.ToString().Replace(".", ""))">
											Total Matched:0
										</label>
									</div>

									<div id="lastpricediv" class="col-md-1 col-sm-1 no-padding runnerlastpricediv">
										
										<label class="runnerstotalmatched" style="font-size:9px; font-weight:600">
											Total Match
										</label>
									</div>


									<div class="col-md-7 col-sm-4 no-padding  runnerbackandlaydiv backandlaydivsecond1122">
										<div class="col-md-12 col-sm-12 no-padding">
											<div class="col-md-6 col-sm-12 no-padding backhead">
												<div id="BackDiv" class="col-md-12 col-sm-12 no-padding">
													<div class="col-md-4 col-sm-4 no-padding">
														<label></label>
													</div>
													<div class="col-md-4 no-padding">
														<label></label>
													</div>
													<div class="col-md-4 col-sm-12 no-padding">
														<label style="font-weight:700 !important">BACK</label>
														<i class="backcircle fa fa-arrow-circle-down"></i>
													</div>

												</div>

											</div>
											<div class="col-md-6 col-sm-12 no-padding layhead">
												<div id="LayDiv" class="col-md-12 col-sm-12 no-padding">
													<div class="col-md-4 col-sm-12 no-padding">
														<label style="font-weight:700 !important" >LAY</label>
														<i class="laycircle fa fa-arrow-circle-down"></i>
													</div>
													<div class="col-md-4 no-padding">
														<label></label>
													</div>
													<div class="col-md-4 no-padding">
														<label></label>
													</div>
												</div>
											</div>
										</div>
									</div>



								</div>



                              <div class="backgroundimageforSuspended" id="hh1">


                              </div>
                              @foreach (var runner in item.Runners)
                               {
                               
								  <div id="selection@(runner.SelectionId.Replace(" ",""))" class="col-md-12 pull-left col-sm-12 no-padding runnerswrapper" style="
    border-top: 1px black solid";>

									  

                                    <div id="nameProfitandlossdiv">
										<div id="runnernamediv@(runner.SelectionId)" class="no-padding runnernamediv runnerswrapper">
											<label style="display:none">
												@runner.SelectionId
											</label>
											@if (item.MainSportsname == "Horse Racing" && runner.JockeyName != "Not")
											{
												<input type="checkbox" id="chkselection@(runner.SelectionId)" class="checkboxrunnername" onchange="AddRunnersformultiplebets('@runner.SelectionId')" />

												<i class="fa fa-bar-chart graph"></i>


												<div class="clothnumstalldrawimg" id="clothnumstalldrawimg@(runner.SelectionId)" onclick="triggerchangemethod('@runner.SelectionId','@item.MarketId.Replace(".", "")')">

													@{
														runner.WearingURL = runner.WearingURL.ToString().Replace(".betfair.com", ".cdnbf.net");
													}
													<div class="wearingdiv"> <img class="runnerwearing" src="@runner.WearingURL" title="@runner.WearingDesc" onerror="this.onerror = null; this.src = '../Content/images/not-found.png';" /></div>

													<div class="clothnumandstallnum">

														</div>
												</div>
												<div class="runnerinfo ">


													<label for="chkselection@(runner.SelectionId)" data-value="@runner.SelectionId" class="  runners runnersnameHorse new112233" id="lblSelectionName@(runner.SelectionId)">
														@runner.Clothnumber.       @runner.RunnerName
													</label>

													<label id="lbljockey@(runner.SelectionId)" class=" tooltip jockeyname jockey new112234" style="font-size:14px; font-weight:200 ">
														(@runner.StallDraw)	@runner.JockeyName
														<span class="tooltiptext">@runner.RunnerName <br />  @runner.JockeyName</span>
													</label>

												</div>

												<div>
													@*@if (runner.ProfitandLoss >= 0)
		{
			<label id="lblprofitandloss@(runner.SelectionId)" class="jockeynamepl">
				@runner.ProfitandLoss
			</label>
		}
		else
		{
			<label id="lblprofitandloss@(runner.SelectionId)" class="jockeynamepl">
				@runner.ProfitandLoss
			</label>

		}*@
													@if (runner.ProfitandLoss >= 0)
													{
														<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossgreen1">
															@runner.ProfitandLoss
														</label>
													}
													else
													{
														<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossred1">
															@runner.ProfitandLoss
														</label>
													}
													@if (item.MarketBookName.Contains("To Be Placed"))
													{
														if (runner.Loss >= 0)
														{
															<label id="lblloss@(runner.SelectionId)" class="jockeynameplGreen">
																@runner.Loss
															</label>
														}
														else
														{
															<label id="lblloss@(runner.SelectionId)" class="jockeynameplRed">
																@runner.Loss
															</label>

														}
													}


												</div>
											}
											else
											{
												if (item.MainSportsname.Contains("Racing"))
												{
													<input type="checkbox" id="chkselection@(runner.SelectionId)" class="checkboxrunnername " onchange="AddRunnersformultiplebets('@runner.SelectionId')" />
													<div class="clothnumstalldrawimgempty" id="clothnumstalldrawimg@(runner.SelectionId)" onclick="triggerchangemethod('@runner.SelectionId','@item.MarketId.Replace(".", "")')"></div>
													<i class="fa fa-bar-chart graph"></i>
													<label for="chkselection@(runner.SelectionId)" data-value="@runner.SelectionId" class="runners runnersname" id="lblSelectionName@(runner.SelectionId)">
														@runner.RunnerName
													</label>
													<div>
														@if (runner.ProfitandLoss >= 0)
														{
															<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossgreen">
																@runner.ProfitandLoss
															</label>
														}
														else
														{
															<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossred">
																@runner.ProfitandLoss
															</label>
														}
														@if (item.MarketBookName.Contains("To Be Placed"))
														{
															if (runner.Loss >= 0)
															{
																<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossgreen">
																	@runner.Loss
																</label>
															}
															else
															{
																<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossred">
																	@runner.Loss
																</label>
															}

														}


													</div>
												}
												else
												{
													if (item.MainSportsname == "Cricket" && item.MarketBookName.Contains("Match Odds") || item.MainSportsname == "Soccer" || item.MainSportsname == "Tennis")
													{
														@* <input type="checkbox" id="chkselectionforaverage@(runner.SelectionId)" class="checkboxrunnernameavg" onchange="AddRunnersforaveragecal('@runner.SelectionId')" data-value="@runner.SelectionId" />
														*@
														<input type="checkbox" id="chkselection@(runner.SelectionId)" class="checkboxrunnername" onchange="AddRunnersformultiplebets('@runner.SelectionId')" />
														<div class="clothnumstalldrawimgemptynotshow" id="clothnumstalldrawimg@(runner.SelectionId)" onclick="triggerchangemethod('@runner.SelectionId','@item.MarketId.Replace(".", "")')"></div>
														<div class="clothnumandstallnum">
															<a>
																<i class="fa fa-bar-chart graph"></i>
																<i class="fas fa-caret-right"></i>

															</a>
														</div>
														<div>
															<label for="chkselection@(runner.SelectionId)" data-value="@runner.SelectionId" class="runners runnersnamenotrace" id="lblSelectionName@(runner.SelectionId)">
																@runner.RunnerName
															</label>


															@if (runner.ProfitandLoss >= 0)
															{
																<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossgreen">
																	@runner.ProfitandLoss
																</label>
										
															}
															else
															{
																<label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossred">
																	@runner.ProfitandLoss
																</label>
															
															}
															@if (item.MarketBookName.Contains("To Be Placed"))
															{
																if (runner.Loss >= 0)
																{
																	<label id="lblloss@(runner.SelectionId)" class="runnersprofitlossgreen">
																		@runner.Loss
																	</label>
																}
																else
																{
																	<label id="lblloss@(runner.SelectionId)" class="runnersprofitlossred">
																		@runner.Loss
																	</label>
																}
															}


														</div>

													}
												}
											}


										</div>
										
                                       
                                     </div>

									<div id="lastpricebackandlaydiv">
										<div id="lastpricedivval" class="no-padding runnerlastpricediv">
											<label style="font-size:22px;font-weight:bolder !important;" id="lblrunnerlastprice@(runner.SelectionId)" class="runnerslastprice">
												@runner.LastPriceTraded
											</label>
											<label style="font-size:13px; font-weight:100 !important;" id="lblrunnertotalmatched@(runner.SelectionId)" class="runnertotalmatch">
												@runner.TotalMatched
											</label>

										</div>

										@if (@runner.StatusStr == "REMOVED" )
										{
											<div id="backandlaydivMain" class="no-padding priceandsize matchcolors runnerbackandlaydiv" style="height: 44px;border-bottom: 1px solid black;border-left:1px solid">
												<label id="lblsuspend@(runner.SelectionId)" class="suspended" style="margin-top: 15px;">@runner.StatusStr</label>		
											</div>
										}

										else

										{

											<div id="backandlaydivMain" class="no-padding priceandsize matchcolors runnerbackandlaydiv backandlaydivsecond12">
												<div id="backandlaydivsecond " class="no-padding">
													<div id="backandlaydivthird" class="no-padding">
														@for (int i = 2; i >= 0; i--)
														{
															if (runner.ExchangePrices.AvailableToBack.Count - 1 >= i && runner.ExchangePrices.AvailableToBack.Count > 0 && runner.ExchangePrices.AvailableToBack[i].Price > 0)
															{
																<div id="backitemval" class="no-padding backitem">
																	<label class="labelup" id="lblbackprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ", ""))" class="selectionprice" onclick="showbetslip('@runner.SelectionId.Replace(" ", "")','back',' @runner.ExchangePrices.AvailableToBack[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToBack[i].Size','@i','0')">
																		@runner.ExchangePrices.AvailableToBack[i].Price
																	</label>
																	<label class="labeldown"  id="lblbacksize@(i.ToString() + runner.SelectionId.ToString().Replace(" ", ""))" class="selectionsize" onclick="showbetslip('@runner.SelectionId.Replace(" ", "")','back',' @runner.ExchangePrices.AvailableToBack[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToBack[i].Size','@i','0')">
																		@runner.ExchangePrices.AvailableToBack[i].Size
																	</label>
																</div>
															}
															else
															{
																<div id="backitemvalelse" class="no-padding backitem">
																	<label class="labelup" id="lblbackprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ", ""))" class="selectionprice">
																	</label>
																	<label class="labeldown"  id="lblbacksize@(i.ToString() + runner.SelectionId.ToString().Replace(" ", ""))" class="selectionsize">
																	</label>
																</div>
															}
														}

													</div>




													<div id="ExchangePricesmain" class="no-padding">
														@for (int i = 0; i < 3; i++)
														{
															if (runner.ExchangePrices.AvailableToLay.Count > i && runner.ExchangePrices.AvailableToLay.Count > 0 && runner.ExchangePrices.AvailableToLay[i].Price > 0)
															{
																<div id="layitemmain" class="no-padding layitem">

																	<label class="labelup" id="lbllayprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ", ""))" class="selectionprice" onclick="showbetslip('@runner.SelectionId.Replace(" ", "")','lay',' @runner.ExchangePrices.AvailableToLay[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToLay[i].Size','@i','0')">
																		@runner.ExchangePrices.AvailableToLay[i].Price
																	</label>
																	<label class="labeldown"  id="lbllaysize@(i.ToString() + runner.SelectionId.ToString().Replace(" ", ""))" class="selectionsize" onclick="showbetslip('@runner.SelectionId.Replace(" ", "")','lay',' @runner.ExchangePrices.AvailableToLay[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToLay[i].Size','@i','0')">
																		@runner.ExchangePrices.AvailableToLay[i].Size
																	</label>


																</div>
															}
															else
															{
																<div id="layitemelse" class="no-padding layitem">
																	<label class="labelup" id="lbllayprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ", ""))" class="selectionprice">

																	</label>
																	<label class="labeldown"  id="lbllaysize@(i.ToString() + runner.SelectionId.ToString().Replace(" ", ""))" class="selectionsize">

																	</label>
																</div>
															}

														}
													</div>

												</div>
											</div>

										}


									</div>
                                    </div>
                                                    valueid = valueid + 1;
                                                }




                        </div>
                        </div>

                </div>



                                            }

        }
    </div>

    <script type="text/javascript">

        $(document).ready(function () {
    
            //$.ajax({
            //    url: '/DashBoard/CuttingUsers',
            //    async: false,
            //    type: 'POST',


            //    complete: function () {
            //        $('.selectpicker').selectpicker();


            //        HideLoader();
            //    },
            //    success: function (data) {

            //        $("#allusersCuttingUsers").html(data);

            //        //// $form.html(data);
            //        // $form.removeData('validator');
            //        // $form.removeData('unobtrusiveValidation');
            //        // $.validator.unobtrusive.parse($form);
            //    }
            //});
            $(".runners").each(function () {

                var id = $(this).attr("data-value");
                //LoadRunnername(id);

                if ($("#openedbetslipid").val() == id) {

                    SetBackandlayonbetslip(id);
                }

            });

		});
		

    </script>
