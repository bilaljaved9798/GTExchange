@model IEnumerable<bfnexchange.Models.EventType>

<div id="sidebar" style="background-color:@ViewBag.backgrod;color:@ViewBag.color" >

	<ul class="list-unstyled components">

		@*<li>
			<a href="#" id="sportsitem2" aria-expanded="false" data-toggle="collapse" onclick="ShowAllMatches()">
				<i> <img src="~/Content/Images/home.png" width="30" height="30" />  Sports </i>
			</a>
			<ul id="allsportsul" class="collapse list-unstyled"></ul>
		</li>*@

		@*<li>
			<a href="#" id="sportsitem2" aria-expanded="false" data-toggle="collapse" onclick="ShowAllMatches()">
				<i> <img src="~/Content/Images/Inplay1.gif" width="30" height="30" /> In-Play Events</i>
			</a>
			<ul id="inplayul" class="collapse list-unstyled"></ul>
		</li>*@
		<li>
			<a href="#" id="sportsitem2" aria-expanded="false" data-toggle="collapse" onclick="ShowInPlayC()">
				<i> <img src="~/Content/Images/Crick.gif" width="40" height="40" /> Cricket</i>

			</a>
			<ul id="inplayulC" class="collapse list-unstyled"></ul>
		</li>
		<li>
			<a href="#" id="sportsitem2" aria-expanded="false" data-toggle="collapse" onclick="ShowInPlayF()">
				<i> <img src="~/Content/Images/futbal.gif" width="40" height="30" /> Soccer </i>

			</a>
			<ul id="inplayulF" class="collapse list-unstyled"></ul>
		</li>
		<li>
			<a href="#" id="sportsitem2" aria-expanded="false" data-toggle="collapse" onclick="ShowInPlayT()">
				<i> <img src="~/Content/Images/tenis.gif" width="40" height="40" />    Tennis  </i>

			</a>
			<ul id="inplayulT" class="collapse list-unstyled"></ul>
		</li>
		@if (LoggedinUserDetail.isAllowedHorseRacing() == true)
		{
			<li>
				<a href="#" id="sportsitem3" aria-expanded="false" data-toggle="collapse" onclick="ShowTodayHorseRace()">
					<i>
						<img src="~/Content/Images/horse.gif" width="45" height="40" style=" -webkit-transform: scaleX(-1);" />Horse Race
					</i>

				</a>
				<ul id="todayhorseraceui" class="collapse list-unstyled"></ul>
			</li>
		}
		@if (LoggedinUserDetail.isAllowedGrayHoundRacing() == true)
		{
			<li>

				<a href="#" id="sportsitem4" onclick="ShowTodayGrayhoundRace()">
					<i> <img src="~/Content/Images/grey.gif" width="40" height="40" /> Greyhound</i>

				</a>
				<ul id="todaygrayhoundraceui" class="collapse list-unstyled"></ul>
			</li>
		}

		<li>
			<a href="#" id="sportsitem4" onclick="Toggleliabalitiesbymarkets1()">
				<i> <img src="~/Content/Images/png-clipart-rotation-computer-icons-clockwise-arrow-trademark-logo-text-monochrome-removebg-preview.png" width="40" height="40" /> Liability</i>
			</a>
			<ul id="libalitybymarket1" style="height:100%"></ul>
		</li>


		<li>

			<a href="/Accounts/pl" target="_blank" value="View Ledger" id="sportsitem4" onclick="Toggleliabalitiesbymarkets1()">
				<i> <img src="~/Content/Images/file-png-icon-1-Transparent-Images.png" width="40" height="40" /> Reports</i>


			</a>
			<ul></ul>
		</li>




	</ul>

</div>
<div class="marqueediv col-lg-12 col-md-12 col-sm-12 no-padding" style="background:linear-gradient(to btoom, #0e0e39 56%, #02020e 85%)">
	<ul class="marqueeui">
		<li>
			<i class="fa fa-comments"></i>
		</li>
		<li class="marquee">
			<span id="welcomemsg">Welcome to Global Tradar.</span>
		</li>
	</ul>


</div>
@* <div class="upperlinks col-lg-12 col-md-12 col-sm-12">
		<a href="/DashBoard/Index"><i class="fa fa-home" style="font-size:17px;"></i></a>
		<a onclick="LoadDefaultPageInPlay('Inplay')">IN-PLAY</a>
		<a onclick="LoadDefaultPageInPlay('Cricket')">CRICKET</a>
		<a onclick="LoadDefaultPageInPlay('Soccer')">FOOTBALL</a>
		<a onclick="LoadDefaultPageInPlay('Tennis')">TENNIS</a>
	</div>

*@



<div id="otherdata"></div>
<div class="col-md-12 no-padding col-sm-12 col-lg-12" id="marketdataall" style="display:none">
	<div class="col-md-8 no-padding col-lg-8  col-sm-12" style="height:700px;overflow:scroll" >
		<div class="col-md-12 col-sm-12 col-lg-12 no-padding">

			<div id="marketbook">


			</div>
			<div id="marketbookTWT">

			</div>
			<div id="marketbooksoccer">

			</div>
		</div>
		<div class="col-md-12 col-sm-12 col-lg-12 no-padding">
			<div id="fancymarketbook">


			</div>
		</div>

		<div class="col-md-12 col-sm-12 col-lg-12 no-padding">

			<div id="Indianfancymarketbook1">

			</div>
			<div id="KJfancymarketbook">


			</div>

			<div id="Figurefancymarketbook">

			</div>


		</div>

		@*<div class="col-md-12 col-sm-12 col-lg-12 no-padding">


			<div id="SFigfancymarketbook">


			</div>
		</div>*@

		
	</div>



	@*<button id="btnclose" class="liveS " style="display:none; background:red; margin-top:-4px; height:28px;">Close</button>*@


	<div class="col-md-4 col-sm-12 col-lg-4 no-padding">
		@if (LoggedinUserDetail.GetUserTypeID() == 3)
		{

			<div id="myModalBetslip">

				<div id="BetSlipSection" style="background:#405550">
					<div class="widget-header bordered-bottom bordered-sky">
						<span class="widget-caption">Bet Slip </span>

						<div class="widget-buttons">

						</div>
					</div>
					<div class="widget-body" style="padding: 0px; ">
						<div class="tabbable">
							<ul class="nav nav-tabs tabs-flat nav-justified" id="myTab9">
								<li class="active" id="aSimpleBet">
									<a data-toggle="tab" href="#simpleBet">
										Single Bet
									</a>
								</li>


								<li class="tab-red" id="aJoriBet" style="display: none;">
									<a data-toggle="tab" href="#joriBet">
										Jori Bet
									</a>
								</li>

							</ul>
							<div class="tab-content tabs-flat" style="padding: 3px;">
								<div id="simpleBet" class="tab-pane">
									<div id="BetSlipMain" class="betslip-wrapper hide" style="position: relative">
										<a href="~/Accounts/Stack" class="btn btn-blue btn-xs pull-right" style="margin-bottom: 3px">Customize Stake Buttons <i class="fa fa-edit"></i></a>
										<br>
										<table cellspacing="0" width="100%">
											<thead>
												<tr>
													<th width="40%" colspan="2" class="runner">(Bet For)</th>
													<th width="30%" class="oddsH">Odds</th>
													<th width="15%" class="stake">Stake</th>
													<th width="15%" class="profit">Profit or Liability</th>
												</tr>
											</thead>
											<tbody id="betslipcontent">
												<tr id="b-349" data-handicap="0.000000" data-slip="b">
													<td class="delete">
														<a onclick="tremove(this); return false;" href="#">
															<i class="fa fa-trash-o"></i>
														</a>
													</td>
													<td>
														<span class="runnername">
															<label id="betslipselection"></label>
														</span>
													</td>
													<td class="oddsH">
														<span>
															<div class="oddWrapper">
																<div class="odd-left">
																	<button id="bdown-349" onclick="decrement(); return false;"><span class="fa fa-minus"></span></button>

																	<input tabindex="1" type="text" id="betslipodd" max="1000">
																	<button id="bup-349" onclick="increment(); return false;" style="margin-left:-2px !important"><span class="fa fa-plus"></span></button>
																</div>
															</div>
														</span>
													</td>
													<td class="stake">
														<span class="stake"><input id="betslipamount" type="number" onmouseup="calculateamountss()" min="500" max="5000000000" step="1" class="text stake numeric" maxlength="7" onkeyup="calculateamountss()"> </span>
													</td>
													<td class="profit">

														<div class="wrapper">
															<span style="color:green; font-weight: 600;" class="profit-value"><label id="betslipamountlabel"></label></span>

														</div>
													</td>
												</tr>
												<tr data-parent="b-349" id="btn-b-349 btnBetSlip btn-smBetSlip btn-defaultBetSlip">

													<td colspan="5" width="100px">

														<center>
															<div class="amountbutton" style="float: none">
																<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@(LoggedinUserDetail.objBetSlipKeys.SimpleBtn1.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn1.Replace("+", "")" style=" background:#075E54; color:white" ;>
																<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@(LoggedinUserDetail.objBetSlipKeys.SimpleBtn2.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn2.Replace("+", "")" style=" background:#075E54; color:white" ;>
																<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@( LoggedinUserDetail.objBetSlipKeys.SimpleBtn3.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn3.Replace("+", "")" style=" background:#075E54; color:white" ;>
																<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@(LoggedinUserDetail.objBetSlipKeys.SimpleBtn4.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn4.Replace("+", "")" style=" background:#075E54; color:white" ;>


																<br />

																<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@( LoggedinUserDetail.objBetSlipKeys.SimpleBtn5.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn5.Replace("+", "")" style=" background:#075E54; color:white" ;>
																<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@( LoggedinUserDetail.objBetSlipKeys.SimpleBtn6.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn6.Replace("+", "")" style=" background:#075E54; color:white" ;>
																<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@( LoggedinUserDetail.objBetSlipKeys.SimpleBtn7.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn7.Replace("+", "")" style=" background:#075E54; color:white" ;>
																<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@(LoggedinUserDetail.objBetSlipKeys.SimpleBtn8.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn8.Replace("+", "")" style=" background:#075E54; color:white" ;>
															</div>
														</center>

													</td>
												</tr>
											<tfoot>

												<tr>
													<td colspan="3">
														<button id="cancelAll" style="background:linear-gradient(to bottom, #FF0000 56%, #FF0000 85%); color:white; height:27px;  width:97px; font-size:16px"> Clear All   </button>
													</td>
													<td colspan="3" align="right">
														<input type="button" value="Submit" id="btnBetslipsubmit" style="background:#008000; color:white; height:27px; width:90px; font-size:16px" />
													</td>
												</tr>
											</tfoot>
										</table>
										<div class="clear-fix"></div>
										<div id="pendding" class="pendding bslipl" >
											;
											<img src="~/Content/Images/ajax-loader-bigger.gif" alt="loading..." />

										</div>
									</div>
								</div>

								<div id="joriBet" class="tab-pane bg-whitesmoke">

									<div id="BetSlipJori" class="betslip-wrapper hide" style="position: relative">

										<a href="~/Accounts/Stack" class="btn btn-blue btn-xs pull-right" style="margin-bottom: 3px">Customize Stake Buttons <i class="fa fa-edit"></i></a>
										<br>
										<table cellspacing="0" width="90%">
											<thead>
												<tr>
													<th width="40%" colspan="2" class="runner">(Bet For)</th>
													<th width="25%" class="oddsH">Odds</th>
													<th width="15%" class="stake">Stake</th>
													<th width="20%" class="profit">Profit/Liability</th>
												</tr>
											</thead>
											<tbody id="betslipcontentmultiple">
												<tr id="b-jBackBtn" data-handicap="0.0" data-slip="b">
													<td class="delete"></td>
													<td>

														<span class="runnername jrunnerSlip" style="font-weight:bold">
															<div id="betslipmultiplerunners" class="col-md-12 no-padding">

															</div>

														</span>
													</td>
													<td class="oddsH text-align-center">
														<span>
															<div class="oddWrapper">
																<label id="betslipbackmultiplejori" style="font-weight:bold;"></label>
																<label id="betsliplaymultiplejori" style="font-weight:bold;"></label>
															</div>
														</span>
													</td>
													<td class="amounts">
														<span class="amounts">

															<input id="betslipamountmultiple" min="1000" max="9999999" class="text stake numeric" maxlength="7" type="text">
														</span>
													</td>
													<td class="">
														<div class="wrapper">
															<span style="color:green; font-weight: 600;" class="profit-value">
																<label id="betslipoddlabelmultiple" class="profit-value"></label>
															</span>
															<span style="color: red; font-weight: 600;" class="profit-value">
																<label id="betslipamountlabelmultiple" class="profit-value"></label>
															</span>
														</div>
													</td>
												</tr>

												<tr data-parent="b-jBackBtn" id="btn-b-jBackBtn">
													<td colspan="5" width="100px">

														<center>
															<div class="amountbuttonmultiple">
																<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@( LoggedinUserDetail.objBetSlipKeys.MutipleBtn1.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn1.Replace("+", "")" style=" background:#075E54; color:white" ; />
																<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@( LoggedinUserDetail.objBetSlipKeys.MutipleBtn2.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn2.Replace("+", "")" style=" background:#075E54; color:white" ; />
																<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.objBetSlipKeys.MutipleBtn3.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn3.Replace("+", "")" style=" background:#075E54; color:white" ; />
																<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@( LoggedinUserDetail.objBetSlipKeys.MutipleBtn4.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn4.Replace("+", "")" style=" background:#075E54; color:white" ; />
																<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.objBetSlipKeys.MutipleBtn5.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn5.Replace("+", "")" style=" background:#075E54; color:white" ; />
																<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@( LoggedinUserDetail.objBetSlipKeys.MutipleBtn6.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn6.Replace("+", "")" style=" background:#075E54; color:white" ; />
																<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.objBetSlipKeys.MutipleBtn7.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn7.Replace("+", "")" style=" background:#075E54; color:white" ; />
																<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.objBetSlipKeys.MutipleBtn8.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn8.Replace("+", "")" style=" background:#075E54; color:white" ; />
																<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@( LoggedinUserDetail.objBetSlipKeys.MutipleBtn9.Replace("+", ""))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn9.Replace("+", "")" style=" background:#075E54; color:white" ; />
															</div>

														</center>
													</td>
												</tr>
											</tbody>

											<tfoot>
												<tr>
													<td colspan="5" style=" text-align center;
												font-size: 12px;
												font-weight: bold;
												padding-top: 5px;
												">
														<span id="JoribetTimer"></span>
													</td>
												</tr>


												<tr>
													<td colspan="2">
														<button id="cancelAllJori" style="background:linear-gradient(to bottom, #FF0000 56%, #FF0000 85%); color:white">Clear</button>
													</td>
													<td colspan="3" align="right">
														<input type="button" class="btn btn-xs btn-info" value="Submit" id="btnBetslipsubmitmultiple" style="background:#008000; color:white" />
													</td>
												</tr>
											</tfoot>
										</table>
										<div class="clear-fix"></div>

										<div id="pendding" class="pendding" style="margin-left:25px; width:350px; height:180px">
											;
											<img src="~/Content/Images/ajax-loader-bigger.gif" alt="loading..." />

										</div>

									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		}


		<div id="myModalBetslipmob" class='modal'>

			<div id="BetSlipSection" class="modal-dialog" style="background:transparent;margin-top:21px">
				<div class="widget-header bordered-bottom bordered-sky">
					<span class="widget-caption">Bet Slip </span>
					<button type="button" id="btnslipclose" class="close" data-dismiss="modal">&times;</button>
					<div class="widget-buttons">

					</div>
				</div>
				<div class="widget-body" style="padding: 0px; ">
					<div class="tabbable">
						<ul class="nav nav-tabs tabs-flat nav-justified" id="myTab9">
							<li class="active" id="aSimpleBetmob">
								<a data-toggle="tab" href="#simpleBetmob">
									Single Bet
								</a>
							</li>


							<li class="tab-red" id="aJoriBetmob" style="display: none;">
								<a data-toggle="tab" href="#joriBetmob">
									Jori Bet
								</a>
							</li>

						</ul>
						<div class="modal-content tabs-flat" style="padding: 3px;">
							<div id="simpleBet" class="tab-pane">
								<div id="BetSlipMainmob" class="betslip-wrapper hide" style="position: relative">
									<a href="~/Accounts/Stack" class="btn btn-blue btn-xs pull-right" style="margin-bottom: 3px">Customize Stake Buttons <i class="fa fa-edit"></i></a>
									<br>
									<table cellspacing="0" width="100%">
										<thead>
											<tr>
												<th width="40%" colspan="2" class="runner">(Bet For)</th>
												<th width="30%" class="oddsH">Odds</th>
												<th width="15%" class="stake">Stake</th>
												<th width="15%" class="profit">Profit or Liability</th>
											</tr>
										</thead>
										<tbody id="betslipcontentmob">
											<tr id="b-349" data-handicap="0.000000" data-slip="b">
												<td class="delete">
													<a onclick="tremove(this); return false;" href="#">
														<i class="fa fa-trash-o"></i>
													</a>
												</td>
												<td>
													<span class="runnername">
														<label id="betslipselectionmob"></label>
													</span>
												</td>
												<td class="oddsH">
													<span>
														<div class="oddWrapper">
															<div class="odd-left">
																<button id="bdown-349" onclick="decrement(); return false;"><span class="fa fa-minus"></span></button>

																<input tabindex="1" type="text" id="betslipoddmob" max="1000">
																<button id="bup-349" onclick="increment(); return false;" style="margin-left:-2px !important"><span class="fa fa-plus"></span></button>
															</div>
														</div>
													</span>
												</td>
												<td class="stake">
													<span class="stake"><input id="betslipamountmob" type="number" onmouseup="calculateamountsmob()" min="500" max="5000000000" step="1" class="text stake numeric" maxlength="7" onkeyup="calculateamountsmob()"> </span>
												</td>
												<td class="profit">

													<div class="wrapper">
														<span style="color:green; font-weight: 600;" class="profit-value"><label id="betslipamountlabelmob"></label></span>

													</div>
												</td>
											</tr>
											<tr data-parent="b-349" id="btn-b-349 btnBetSlip btn-smBetSlip btn-defaultBetSlip">

												<td colspan="5" width="100px">

													<center>
														<div class="amountbutton" style="float: none">
															<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@( LoggedinUserDetail.objBetSlipKeys.SimpleBtn1.Replace("+",""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn1.Replace("+","")" style=" background:#075E54; color:white" ;>
															<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@(LoggedinUserDetail.objBetSlipKeys.SimpleBtn2.Replace("+",""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn2.Replace("+","")" style=" background:#075E54; color:white" ;>
															<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@(LoggedinUserDetail.objBetSlipKeys.SimpleBtn3.Replace("+",""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn3.Replace("+","")" style=" background:#075E54; color:white" ;>
															<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@( LoggedinUserDetail.objBetSlipKeys.SimpleBtn4.Replace("+",""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn4.Replace("+","")" style=" background:#075E54; color:white" ;>

															<br />

															<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@(LoggedinUserDetail.objBetSlipKeys.SimpleBtn5.Replace("+",""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn5.Replace("+","")" style=" background:#075E54; color:white" ;>
															<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@(LoggedinUserDetail.objBetSlipKeys.SimpleBtn6.Replace("+",""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn6.Replace("+","")" style=" background:#075E54; color:white" ;>
															<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@(LoggedinUserDetail.objBetSlipKeys.SimpleBtn7.Replace("+",""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn7.Replace("+","")" style=" background:#075E54; color:white" ;>
															<input class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" type="button" value="@(LoggedinUserDetail.objBetSlipKeys.SimpleBtn8.Replace("+",""))" data-value="@LoggedinUserDetail.objBetSlipKeys.SimpleBtn8.Replace("+","")" style=" background:#075E54; color:white" ;>
														</div>
													</center>

												</td>
											</tr>
										<tfoot style="height: 40px;">

											<tr>
												<td colspan="3">
													<button id="cancelAll" style="background:linear-gradient(to bottom, #FF0000 56%, #FF0000 85%); color:white; font-size:20px"> Clear All   </button>
												</td>
												<td colspan="3" align="right">
													<input type="button" value="Submit" id="btnBetslipsubmitmob" style="background:#008000; color:white; font-size:20px" />
												</td>
											</tr>
										</tfoot>
									</table>
									<div class="clear-fix"></div>
									<div id="pendding" class="pendding" style="margin-left:50px; width:350px; height:180px">
										;
										<img src="~/Content/Images/ajax-loader-bigger.gif" alt="loading..." />

									</div>
								</div>
							</div>

							<div id="joriBet" class="tab-pane bg-whitesmoke">
								<div id="BetSlipJorimob" class="betslip-wrapper hide" style="position: relative">

									<a href="~/Accounts/Stack" class="btn btn-blue btn-xs pull-right" style="margin-bottom: 3px">Customize Stake Buttons <i class="fa fa-edit"></i></a>
									<br>
									<table cellspacing="0" width="100%">
										<thead>
											<tr>
												<th width="40%" colspan="2" class="runner">(Bet For)</th>
												<th width="25%" class="oddsH">Odds</th>
												<th width="15%" class="stake">Stake</th>
												<th width="20%" class="profit">Profit/Liability</th>
											</tr>
										</thead>
										<tbody id="betslipcontentmultiple">
											<tr id="b-jBackBtn" data-handicap="0.0" data-slip="b">
												<td class="delete"></td>
												<td>

													<span class="runnername jrunnerSlip" style="font-weight:bold">
														<div id="betslipmultiplerunners" class="col-md-12 no-padding">

														</div>

													</span>
												</td>
												<td class="oddsH text-align-center">
													<span>
														<div class="oddWrapper">
															<label id="betslipbackmultiplejori" style="font-weight:bold;"></label>
															<label id="betsliplaymultiplejori" style="font-weight:bold;"></label>
														</div>
													</span>
												</td>
												<td class="amounts">
													<span class="amounts">

														<input id="betslipamountmultipless" min="1000" max="9999999" class="text stake numeric" maxlength="7" type="text">
													</span>
												</td>
												<td class="">
													<div class="wrapper">
														<span style="color:green; font-weight: 600;" class="profit-value">
															<label id="betslipoddlabelmultiple" class="profit-value"></label>
														</span>
														<span style="color: red; font-weight: 600;" class="profit-value">
															<label id="betslipamountlabelmultiple" class="profit-value"></label>
														</span>
													</div>
												</td>
											</tr>

											<tr data-parent="b-jBackBtn" id="btn-b-jBackBtn">
												<td colspan="5" width="100px">

													<center>
														<div class="amountbuttonmultiple">
															<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn1.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn1.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
															<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn2.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn2.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
															<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn3.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn3.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
															<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn4.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn4.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
															<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn5.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn5.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
															<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn6.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn6.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
															<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn7.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn7.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
															<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn8.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn8.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
															<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn9.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn9.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
														</div>

													</center>
												</td>
											</tr>
										</tbody>

										<tfoot>
											<tr>
												<td colspan="5" style=" text-align center;
												font-size 12px;
												font-weight bold;
												padding-top 5px;">
													<span id="JoribetTimer"></span>
												</td>
											</tr>


											<tr>
												<td colspan="2">
													<button id="cancelAllJori" style="background:linear-gradient(to bottom, #FF0000 56%, #FF0000 85%); color:white">Clear</button>
												</td>
												<td colspan="3" align="right">
													<input type="button" class="btn btn-xs btn-info" value="Submit" id="btnBetslipsubmitmultiple" style="background:#008000; color:white" />
												</td>
											</tr>
										</tfoot>
									</table>
									<div class="clear-fix"></div>

									<div id="pendding" class="pendding" style="margin-left:50px; width:350px; height:180px">
										;
										<img src="~/Content/Images/ajax-loader-bigger.gif" alt="loading..." />

									</div>

								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>


		<div id='myModalBetslipmultiple' class='modal'>
			<div class="modal-dialog">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 id="betslipheadingmultiple" class="modal-title">You are going to place </h4>
				</div>
				<div id="betslipcontentmultiplemb" class="modal-content">
					<div id="betslipmultiple">
						<div class="col-md-12 no-padding betslipselectionsmb">
							<div class="col-md-6 no-padding">

								<div class="col-md-12 no-padding">
									<div class="col-md-6  betslipselectionnamemb">
										<label>Selection</label>

									</div>
									<div class="col-md-3   betslipoddmb">
										<label>Back</label>
									</div>
									<div class="col-md-3   betslipoddmb">
										<label>Lay</label>

									</div>
								</div>
								<div id="betslipmultiplerunnersmb" class="col-md-12 no-padding">

								</div>
							</div>
							<div class="col-md-6 no-padding">
								<div class="col-md-12 no-padding amountareamb">
									<div class="col-md-12 no-padding">
										<div class="amountbuttonmultiple">
											<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn1.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn1.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
											<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn2.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn2.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
											<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn3.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn3.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
											<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn4.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn4.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
											<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn5.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn5.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
											<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn6.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn6.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
											<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn7.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn7.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
											<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn8.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn8.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
											<input type="button" class="btnBetSlip btn-smBetSlip btn-defaultBetSlip" value="@(LoggedinUserDetail.FormatNumber(Convert.ToUInt32( LoggedinUserDetail.objBetSlipKeys.MutipleBtn9.Replace("+",""))))" data-value="@LoggedinUserDetail.objBetSlipKeys.MutipleBtn9.Replace("+","")" style=" background:linear-gradient(to bottom, #0e0e39 56%, #02020e 85%); color:white" ; />
										</div>
									</div>
									<div class="col-md-12 no-padding ">
										<div class="col-md-12 no-padding">
											<div class="amountsmb" style="margin-top:10px">

												<label id="betslipbackmultiplemb"></label>
												<label id="betsliplaymultiplemb"></label>

											</div>

											<div class="amountsmb">
												<label>Amount</label>
												<input type="number" onmouseup="calculateamountsmultiple()" min="2000" max="5000000000" step="1" id="betslipamountmultiplemb" onkeyup="calculateamountsmultiple()" />

											</div>
											<div class="amountsmb">
												<label id="betslipoddlabelmultiplemb"></label>
												<label id="betslipamountlabelmultiplemb"></label>
											</div>
											<div class="amountsmb">

												<input type="button" class="btn btn-default" data-dismiss="modal" value="Close" id="btnBetslipClosemultiple" />
												<input type="button" class="btn btn-default" value="Reset" onclick="resetamountmultiple()" id="btnBetslipResetmultiple" />
												<input type="button" class="btn btn-default" value="Submit" id="btnBetslipsubmitmultiplemb" />
											</div>
										</div>
										<div class="col-md-12 loadingimg no-padding">
											<label>Please wait....</label>
										</div>

									</div>
								</div>
							</div>
						</div>
					</div>
				</div>

			</div>

		</div>





		<div class="modal" id="myModalposition">
			<div class="modal-dialog ">
				<div class="modal-content" style="width:100%">
					<div class="modal-header ">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
						<h4 class="modal-title">New Room</h4>
						@*<input type="text" width="50%" />*@
						<div id="allusers">

						</div>
					</div>
					<div class="modal-body" id="roomModalBody">
						<div id="allusers">

						</div>
					</div>
				</div>
			</div>
		</div>





		<div id="mainuserbetdiv" class="col-md-12 no-padding">
			<div id="betslipkeyssections">

			</div>
			<div id="userbets">

			</div>
		</div>

		<div class="col-md-12 no-padding">
			<button id="btnPlay" class="col-sm-6 pull-left tvmbl" style="background: #075E54;color: white;">Live Video</button>
			<button id="btnscorecard " class="col-sm-6 pull-left tvmbl" style="background: #075E54;color: white;border-right: 1px white solid;">Score Card</button>
		</div>

		<div class="col-md-12 no-padding">
			<iframe style="width:100%; height: 300px ;display:none" id="video" frameborder="0" allowfullscreen></iframe>
			<iframe style="width:100%; height: 492px; display:none" id="scorecaed" frameborder="0" allowfullscreen></iframe>
		</div>


		<div id="relatedevent" class="col-md-12 no-padding"   >

		</div>

	</div>





	<div id='myModalFancy' class='modal'>
		<div class="modal-dialog">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal">&times;</button>
				<h4 class="modal-title">Market Rules</h4>
			</div>
			<div id="rulescontent" class="modal-content">

			</div>
		</div>
	</div>
	<div id="cdialog" title="Confirmation Required">
		Are you sure about this?
	</div>


	<input type="hidden" id="openedbetslipid" value="" />
	<input type="hidden" id="lastsavedhtml" value="" />
	<input type="hidden" id="lastsavedhtmlTWT" value="" />
	<input type="hidden" id="betsliptype" value="" />
	<input type="hidden" id="isBetSlipEdit" value="0" />
	<input type="hidden" id="lastloadedmarket" value="" />
	<input type="hidden" id="lastloadedmarketTWT" value="" />
	<input type="hidden" id="loadedmarketbook" value="" />
	<input type="hidden" id="loadedmarketbookname" value="" />
	<input type="hidden" id="loadedbetlocation" value="" />
	<input type="hidden" id="clickedodd" value="" />
	<input type="hidden" id="clickedlocation" value="" />
	<input type="hidden" id="clickedbetsize" value="" />
	<input type="hidden" id="clickedID" value="0" />
	<input type="hidden" id="activesheetname" value="" />
</div>
		<script type="text/javascript">


			$("#cancelAll").click(function () {
				$("#BetSlipMain").hide();
				$("#simpleBet").hide();
				$("#betslipcontent").hide();
			});

			$("#cancelAllJori").click(function () {
				$("#BetSlipJori").hide();
				$("#joriBet").hide();
				$("#betslipcontentmultiple").hide();
			});


			$("#aJoriBet").click(function () {
				$("#aJoriBet").addClass("active");
				$("#aSimpleBet").removeClass("active");
				$("#joriBet").addClass("active");
				$("#simpleBet").removeClass("active");
				$("#aSimpleBet").attr("aria-expanded", false);
				$("#aJoriBet").attr("aria-expanded", true);
				$("#BetSlipMain").hide();
				$('#simpleBet').hide();
				$('#betslipcontent').hide();
				$('#betslipcontentmultiple').show();
				$("#BetSlipJori").show();
				$('#joriBet').show();

			});

			$("#aSimpleBet").click(function () {
				$("#aSimpleBet").addClass("active");
				$("#aJoriBet").removeClass("active");
				$("#simpleBet").addClass("active");
				$("#joriBet").removeClass("active");
				$("#aSimpleBet").attr("aria-expanded", true);
				$("#aJoriBet").attr("aria-expanded", false);
				$("#BetSlipMain").show();
				$('#joriBet').hide();
				$('#betslipcontentmultiple').hide();
				$('#betslipcontent').show();
				$('#simpleBet').show();
		    });

		//$(document).click(function () {
		//	$(".dropdown").trigger('click')
		//});





		$(window).on('scroll', function (event) {

			if (window.matchMedia('(max-width: 767px)').matches) {
				$('#sidebar').hide();
			}
		});
			$(document).ready(function () {
				if(window.matchMedia('(max-width: 767px)').matches) {
					$('#sidebar').hide();
				}
				else
				{
					$('#sidebar').show();
				}


				$(".delete").on("click", function () {
					$("#BetSlipMain").hide();
					$("#simpleBet").hide();
					$("#betslipcontent").hide();
					//var tr = $(this).closest('tr');
					//tr.remove();
				});

				//$.ajax({
				//	url: '/DashBoard/AllUsers',
				//	async: true,
				//	type: 'POST',


				//	complete: function () {	},
				//	success: function (data) {
				//		$("#allusers").html(data);}
				//});
			});


			function  showmarketrules(category,marketbookname,runnerscount) {

				dataurl = '/DashBoard/GetRulesbyMarketnameandCategory';

				$.ajax({
					url: dataurl,

					type: 'GET',
					async:false,
					data: { 'categoryname': category,'marketbookname': marketbookname,'Runnerscount':runnerscount },

					complete: function () {

					},
					success: function (data) {
						$("#rulescontent").html(data);
						$('#myModalFancy').modal('show');
					}
				});
		}


			function  showposition() {

				//dataurl = '/DashBoard/GetRulesbyMarketnameandCategory';

				//$.ajax({
				//	url: dataurl,

				//	type: 'GET',
				//	async:false,
				//	data: { 'categoryname': category,'marketbookname': marketbookname,'Runnerscount':runnerscount },

				//	complete: function () {

				//	},
				//	success: function (data) {
				//		$("#rulescontent").html(data);
				$('#myModalposition').modal('show');
				//	}
				//});
			}


			function LoadVideo(){

				$("#showvideo").click(function () {
					$("#video1").attr("src", "https://livemediasystem.com/bf/c2.html");
				});
			}
			function refreshliabalityandbalance(){
				dataurl = '/UserBet/GetTotalLiabality';

				$.ajax({
					url: dataurl,

					type: 'GET',
					async:false,
					complete: function () {

					},
					success: function (data) {
						//debugger;
						var dataarr=data.split("|");
						var currentliablity = "";
						var Totliablity = "" + dataarr[2];

						var currentbalance = dataarr[0];
						var newbalance = parseInt(currentbalance) + parseInt(dataarr[2]);
						$("#CurrentUserBalance").html("Balance: " + newbalance.toString());
						$("#CurrentUserLiabality").html(currentliablity);
						$("#TotalLiabality").html(Totliablity);
					}
				});
			}
			function togglemainsportsmenu(num,fromclick){

				$("#otherdata").hide();
				$("#marketdataall").show();

				$("#BetSlipMain").hide();
				$("#simpleBet").hide();
				$("#betslipcontent").hide();

				$("#BetSlipJori").hide();
				$("#joriBet").hide();
				$("#betslipcontentmultiple").hide();
				//debugger;
				fromclicklocation=fromclick;
				if(num==1){
					$(".usernameandliablity").toggle();

					refreshliabalityandbalance();
				}
				if(num==2){
					$("#libalitybymarket").hide();
					if($(".maincategory-sports").length==0 && fromclick=="footer"){
						LoadMarketView('MarketView');
					}
					if(fromclick=="footer"){
						{
							$(".maincategory-sports").show();
							$(".usernameandliablity").hide();
							$("#partialviews").hide();

						}

					}

				}
				if(num==3){

					if($(".maincategory-sports").length==0 && fromclick=="footer"){
						LoadMarketView('MarketView');
					}
					$("#partialviews").show();
					if($(window).width()<=480){
						$(".maincategory-sports").hide();
					}

					$(".usernameandliablity").hide();
					$(".fullscorecard").hide();
					$("#marketbookdataforshow").show();
					$("#mainuserbetdiv").show();
					$("#libalitybymarket").hide();

				}
				if(num==4){
					$(".fullscorecard").show();
					$("#marketbookdataforshow").hide();
					$("#mainuserbetdiv").hide();
					$("#libalitybymarket").hide();
					$("#partialviews").show();
				}
				if(num==5){
					$("#libalitybymarket").show();
					$(".usernameandliablity").hide();
					$("#partialviews").hide();
					$(".maincategory-sports").hide();
					Loadliabalitiesbymarkets();
				}

			}
			function increment(){
				var input = document.getElementById('betslipodd');

				if(parseFloat(input.value) >1 && parseFloat(input.value)<=1000){

					if(parseFloat(input.value)>1 && parseFloat(input.value)<2){
						input.value = parseFloat(input.value) + 0.01;
					}
					if(parseFloat(input.value)>=2 && parseFloat(input.value)<3){
						input.value = parseFloat(input.value) + 0.02;
					}
					if(parseFloat(input.value)>=3 && parseFloat(input.value)<4){
						input.value = parseFloat(input.value) + 0.05;
					}
					if(parseFloat(input.value)>=4 && parseFloat(input.value)<5){
						input.value = parseFloat(input.value) + 0.10;
					}
					if(parseFloat(input.value)>=5 && parseFloat(input.value)<6){
						input.value = parseFloat(input.value) + 0.20;
					}
					if(parseFloat(input.value)>=6 && parseFloat(input.value)<10){
						input.value = parseFloat(input.value) + 0.20;
					}
					if(parseFloat(input.value)>=10 && parseFloat(input.value)<20){
						input.value = parseFloat(input.value) + 0.50;
					}
					if(parseFloat(input.value)>=20 && parseFloat(input.value)<30){
						input.value = parseFloat(input.value) + 1;
					}
					if(parseFloat(input.value)>=30 && parseFloat(input.value)<50){
						input.value = parseFloat(input.value) + 2;
					}
					if(parseFloat(input.value)>=50 && parseFloat(input.value)<100){
						input.value = parseFloat(input.value) + 5;
					}
					if(parseFloat(input.value)>=100 && parseFloat(input.value)<=1000){
						input.value = parseFloat(input.value) + 10;
					}
					input.value = parseFloat(input.value).toFixed(2);
				}
				calculateamounts();

			}

			function decrement(){
				var input = document.getElementById('betslipodd');
				if(parseFloat(input.value) >1 && parseFloat(input.value)<=1000){


					if(parseFloat(input.value)>1 && parseFloat(input.value)<2){
						input.value = parseFloat(input.value) - 0.01;
					}
					if(parseFloat(input.value)>=2 && parseFloat(input.value)<3){
						input.value = parseFloat(input.value) - 0.02;
					}
					if(parseFloat(input.value)>=3 && parseFloat(input.value)<4){
						input.value = parseFloat(input.value)- 0.05;
					}
					if(parseFloat(input.value)>=4 && parseFloat(input.value)<5){
						input.value = parseFloat(input.value) - 0.10;
					}
					if(parseFloat(input.value)>=5 && parseFloat(input.value)<6){
						input.value = parseFloat(input.value) - 0.20;
					}
					if(parseFloat(input.value)>=6 && parseFloat(input.value)<10){
						input.value = parseFloat(input.value) - 0.20;
					}
					if(parseFloat(input.value)>=10 && parseFloat(input.value)<20){
						input.value = parseFloat(input.value) - 0.50;
					}
					if(parseFloat(input.value)>=20 && parseFloat(input.value)<30){
						input.value = parseFloat(input.value) - 1;
					}
					if(parseFloat(input.value)>=30 && parseFloat(input.value)<50){
						input.value = parseFloat(input.value) - 2;
					}
					if(parseFloat(input.value)>=50 && parseFloat(input.value)<100){
						input.value = parseFloat(input.value) - 5;
					}
					if(parseFloat(input.value)>=100 && parseFloat(input.value)<=1000){
						input.value = parseFloat(input.value) - 10;
					}
					input.value = parseFloat(input.value).toFixed(2);
				}
				calculateamounts();
			}

			var parentID = "0";

			//function Toggleliabalitiesbymarkets() {
			//    if($("#libalitybymarket").css("display")=="none"){
			//        $("#libalitybymarket").show();
			//        Loadliabalitiesbymarkets();
			//    }
			//    else{
			//        $("#libalitybymarket").hide();
			//    }
			//}

			function Toggleliabalitiesbymarkets(){
				$("#libalitybymarket").hide();
				$("#libalitybymarket").show();
				if($("#libalitybymarket").css("display")=="none"){
					ShowLoader();
					$.ajax({
						type: "GET",
						async:true,
						url: "/Liabality/LoadLiabalitybyMarket",
						success: function (result) {
							HideLoader();
							$("#libalitybymarket").show();
							// Loadliabalitiesbymarkets();
							$("#libalitybymarket").html(result);


						},
						complete:function(){


						}

					});

				}
				else {
					$("#libalitybymarket").hide();
				}
			}
function ShowInPlayC() {
				$("#todayhorseraceui").hide();
				$("#libalitybymarket").hide();
				$("#todaygrayhoundraceui").hide();
				$("#allsportsul").hide();

				if ($("#inplayulC").css("display") == "none") {
					ShowLoader();
					dataurl = '/Market/InPlayMatchesC';
					$.ajax({
						url: dataurl,

						type: 'GET',

						complete: function () {

						},
						success: function (data) {
							HideLoader();
							$("#inplayulC").html(data);
							$("#inplayulC").show();
							$(".eventtypes").hide();

						}
					});
				}
				else {
					$("#inplayulC").hide();
				}
			}
			function ShowInPlayF() {
				$("#todayhorseraceui").hide();
				$("#libalitybymarket").hide();
				$("#todaygrayhoundraceui").hide();
				$("#allsportsul").hide();

				if ($("#inplayulF").css("display") == "none") {
					ShowLoader();
					dataurl = '/Market/InPlayMatchesF';
					$.ajax({
						url: dataurl,

						type: 'GET',

						complete: function () {

						},
						success: function (data) {
							HideLoader();
							$("#inplayulF").html(data);
							$("#inplayulF").show();
							$(".eventtypes").hide();

						}
					});
				}
				else {
					$("#inplayulF").hide();
				}
			}
			function ShowInPlayT() {
				$("#todayhorseraceui").hide();
				$("#libalitybymarket").hide();
				$("#todaygrayhoundraceui").hide();
				$("#allsportsul").hide();

				if ($("#inplayulT").css("display") == "none") {
					ShowLoader();
					dataurl = '/Market/InPlayMatchesT';
					$.ajax({
						url: dataurl,

						type: 'GET',

						complete: function () {

						},
						success: function (data) {
							HideLoader();
							$("#inplayulT").html(data);
							$("#inplayulT").show();
							$(".eventtypes").hide();

						}
					});
				}
				else {
					$("#inplayulT").hide();
				}
			}


			function ShowInPlay() {
				$("#todayhorseraceui").hide();
				$("#libalitybymarket").hide();
				$("#todaygrayhoundraceui").hide();
				$("#allsportsul").hide();

				if ($("#inplayul").css("display") == "none") {
					ShowLoader();
					dataurl = '/Market/InPlayMatches';
					$.ajax({
						url: dataurl,

						type: 'GET',

						complete: function () {

						},
						success: function (data) {
							HideLoader();
							$("#inplayul").html(data);
							$("#inplayul").show();
							$(".eventtypes").hide();

						}
					});
				}
				else {
					$("#inplayul").hide();
				}
			}
			function ShowAllMatches() {
				$("#todayhorseraceui").hide();
				$("#libalitybymarket").hide();
				$("#todaygrayhoundraceui").hide();
				$("#inplayul").show();

				if ($("#allsportsul").css("display") == "none") {
					ShowLoader();
					dataurl = '/Market/AllMatches';
					$.ajax({
						url: dataurl,

						type: 'GET',



						complete: function () {

						},
						success: function (data) {
							HideLoader();
							$("#allsportsul").html(data);
							$("#allsportsul").show();
							$(".eventtypes").show();

						}
					});
				}
				else {
					$("#allsportsul").show();
				}
			}
			function ShowTodayHorseRace() {
				$("#libalitybymarket").hide();
				$("#inplayul").hide();
				$("#todaygrayhoundraceui").hide();
				$("#allsportsul").hide();
				if ($("#todayhorseraceui").css("display") == "none") {
					ShowLoader();
					dataurl = '/Market/TodayHorseRacing';
					$.ajax({
						url: dataurl,

						type: 'GET',



						complete: function () {

						},
						success: function (data) {
							HideLoader();
							$("#todayhorseraceui").html(data);
							$("#todayhorseraceui").show();


						}
					});
				}
				else {
					$("#todayhorseraceui").hide();
				}
			}
			function Toggleliabalitiesbymarkets1() {
				$("#todayhorseraceui").hide();
				$("#inplayul").hide();

				$("#allsportsul").hide();
				if ($("#libalitybymarket1").css("display") == "none") {
					ShowLoader();
					dataurl = '/Market/LoadLiabalitybyMarket';
					$.ajax({
						url: dataurl,
						type: 'GET',
						complete: function () {
						},
						success: function (data) {

							HideLoader();
							$("#libalitybymarket1").html(data);
							$("#libalitybymarket1").show();
							//$("#todayhorseraceui").hide();
						}
					});
				}

				else {
					$("#libalitybymarket1").hide();
				}
			}
			function ShowTodayGrayhoundRace() {
				$("#todayhorseraceui").hide();
				$("#inplayul").hide();
				$("#libalitybymarket").hide();
				$("#allsportsul").hide();
				if ($("#todaygrayhoundraceui").css("display") == "none") {
					ShowLoader();
					dataurl = '/Market/TodayGreyHoundRacing';
					$.ajax({
						url: dataurl,

						type: 'GET',



						complete: function () {

						},
						success: function (data) {
							HideLoader();
							$("#todaygrayhoundraceui").html(data);
							$("#todaygrayhoundraceui").show();
							$("#todayhorseraceui").hide();


						}
					});
				}
				else {
					$("#todaygrayhoundraceui").hide();
				}
			}
			function deleteuserbet(ID) {
				var categoryname=$("#marketbookCategory"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				if (categoryname.indexOf("Cricket")>=0 )
				{
					setTimeout(function(){
						var userbetsIDs = [];
						userbetsIDs.push(ID);
						dataurl = '/UserBet/UpdateUnMatchedStatustoComplete';

						$.ajax({
							url: dataurl,

							type: 'POST',
							async:false,
							data: { 'userbetsIDs': userbetsIDs },

							complete: function () {

							},
							success: function (data) {
								//   LoadUserBets();
							}
						});

					},@LoggedinUserDetail.BetPlaceWaitandInterval.CancelBetTime.Value);

				}
				else{
					setTimeout(function(){
						var userbetsIDs = [];
						userbetsIDs.push(ID);
						dataurl = '/UserBet/UpdateUnMatchedStatustoComplete';

						$.ajax({
							url: dataurl,
							type: 'POST',
							async:false,
							data: { 'userbetsIDs': userbetsIDs },
							complete: function () {
							},
							success: function (data) {
								//   LoadUserBets();
							}
						});

					},200);
				}
			}
			function SetFirstItemActive(id) {

				$(".marketbooksul li").removeClass("active");
				$(".tab-content .tab-pane").removeClass("active");
				if (id == "") {
					$(".nav-tabs li:first").addClass("active");
					$(".tab-content .tab-pane:first").addClass("active");

				}
				else {
					var old = id.toString();
					var newid = old.replace('.', '');
					setTimeout(function () {
						$("#marketbook" + newid + "li").addClass("active");
						$("#marketbook" + newid).addClass("active");
					}, 100);

					$("#activesheetname").val($("#marketbooksheet"+ newid).val());
				}

			}
			function deletetab(id) {

				var old = id.toString();
				var newid = old.replace('.', '');
				$("#marketbook" + newid + "li").remove();
				$("#marketbook" + newid).remove();
				$("#fancymarketbook").html("");
				$.ajax({
					url: '/Market/SetMarketClosedbyUser',
					data: { 'marketbookID': id },
					async: false,
					success: function (data) {

						if($(".nav-tabs li").length==0){
							$("#lastloadedmarket").val("");
						}
						else{
							$("#lastloadedmarket").val($(".nav-tabs li:last").attr("data-value"));
						}


						//SetFirstItemActive($(".nav-tabs li:last").attr("data-value"));
						//$(".nav-tabs li:last").addClass("active");
						//$(".tab-content .tab-pane:last").addClass("active");



					}
				});

			}
			function LoadUserBetsforAgent() {
				$.ajax({
					url: '/UserBet/UserBets',
					type: 'GET',

					async: true,
					complete: function () {
						LoadUserBetsforAgent();


					},
					success: function (data) {
						$("#userbets").html(data);



					}
				});
			}
			function LoadUserBets() {
				$.ajax({
					url: '/UserBet/UserBets',
					type: 'GET',
					async: true,
					complete: function () {
						//  LoadActiveMarket();

						//   LoadUserBets();
						// Loadliabalitiesbymarkets();
						@*if(@LoggedinUserDetail.GetUserTypeID()!=3){
                }*@

						@*if(@LoggedinUserDetail.GetUserTypeID()!=3){
                    LoadActiveMarket();
                }
                else{
                    LoadMarketType("");
                }*@


					},
					error:function(){
						LoadUserBets();
					},
					success: function (data) {

						$("#userbets").html(data);
						setTimeout(function () {
							LoadUserBets();

						},500);

					}
				});

			}
			function ShowAverageSection(){
				if (@LoggedinUserDetail.GetUserTypeID()==1){
					$(".averagecalculations").html($("#averagecalculationDynamic"+$("#lastloadedmarket").val().toString().replace(".","")).html());
					//  $("#ddlRunners1"+$("#lastloadedmarket").val().toString().replace(".","") + " option").first().prop('selected', 'selected');;
					GetSelectedRunnersforDropdowns();
					//$("#HowYouKnow option").filter(function(index) { return $(this).text() === "GOOGLE"; }).attr('selected', 'selected');
					//
					CalculateAverageRate();
				}
			}
			function SetSelectedRunnersforDropdowns(){

				$("#averagerunner1").val( $("#ddlRunners1"+$("#lastloadedmarket").val().toString().replace(".","")).find('option:selected').text());
				$("#averagerunner2").val( $("#ddlRunners2"+$("#lastloadedmarket").val().toString().replace(".","")).find('option:selected').text());
			}
			function GetSelectedRunnersforDropdowns(){

				$("#ddlRunners1"+$("#lastloadedmarket").val().toString().replace(".","") + " option").filter(function(index) { return $(this).text() === $("#averagerunner1").val(); }).attr('selected', 'selected');
				$("#ddlRunners2"+$("#lastloadedmarket").val().toString().replace(".","") + " option").filter(function(index) { return $(this).text() === $("#averagerunner2").val(); }).attr('selected', 'selected');

			}
			function HideFancyMarket(){
				$("#marketbookFancyShown"+$("#lastloadedmarket").val().toString().replace(".","")).val("false");
			}
			function GetActiveMarketFancy(){

				var marketbbokFancyIDs=$("#marketbookFancyIDs"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				var showfancypanel=  $("#marketbookFancyShown"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				if(marketbbokFancyIDs =="true" && showfancypanel=="true"){
					var marketbbokFancyIDmarkets=$("#marketbookFancyMarket"+$("#lastloadedmarket").val().toString().replace(".","")).val();

			    	var marketbookstatus=$("#marketbookstatus"+$("#lastloadedmarket").val().toString().replace(".","")).val();
					var orignalopendate=$("#marketbookorignalopendate"+$("#lastloadedmarket").val().toString().replace(".","")).val();
					var orignalopendate=$("#marketbookorignalopendate"+$("#lastloadedmarket").val().toString().replace(".","")).val();
					$.ajax({
						url: '/Fancy/GetFancyMarket/',

						type: 'GET',
						async: true,
						data: { 'MarketBookID': $("#lastloadedmarket").val(),'EventOpendate': orignalopendate},
						complete: function () {
						},
						success: function (data) {

							if(data !=""){

								$("#fancymarketbook").html(data);
							}
							LoadActiveMarketFancy();
						}
					});
				}
				else{
					$("#fancymarketbook").html("");
					$.ajax({
						url: '/Fancy/SetLinevMarketsNull/',

						type: 'GET',
						async: true,
						complete: function () {

						},
						success: function (data) {
						}

					});
				}
				$(".fancybackandlaydiv").hide();

			}



	var bool = false;

		function GetActiveMarketKJ() {
			debugger;
		var eventID = $("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
		var orignalopendate = $("#marketbookorignalopendate" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
		$.ajax({
			url: '/KJ/GetFancyMarketKJ/',
			type: 'GET',
			async: true,
			data: { 'EventID': eventID, 'Bool': bool },
			complete: function () {

			},
			error: function () {
				LoadActiveMarketKJ();
			},
			success: function (data) {
				bool = true;
					$("#KJfancymarketbook").html(data);
				LoadActiveMarketKJ();
				//GetActiveMarketSFIg();
			}
		});

		$(".fancybackandlaydiv").hide();
	}
			function LoadActiveMarketKJ(){

				var eventID=$("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
				var orignalopendate = $("#marketbookorignalopendate" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
				$.ajax({
					url: '/KJ/LoadMarketKJ/',
					type: 'GET',
					async: false,
					data: { 'EventID': eventID},
					complete: function () {
					},
					error:function(){

					},
					success: function (data) {

						setTimeout(function () {
							LoadActiveMarketKJ();
						},4500);
						if(data !=""){
							AssignDatatoMarketBookKJ(data);
						}
						else{
							$("#KJfancymarketbook").html("");
						}
					}

				});
			}
	          var bools = false;
			function GetActiveMarketSFIg()
			{

				var eventID=$("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();

				$.ajax({
					url: '/SmallFig/GetFancyMarketSFig/',
					type: 'GET',
					async: true,
					data: { 'eventID': eventID,'Bools':bools},
					complete: function () {
					},
					error:function(){
						LoadActiveMarketSFIg();
					},
					success: function (data) {
						bools = true;
						$("#SFigfancymarketbook").html(data);
						LoadActiveMarketSFIg();
				}

				});

				$(".fancybackandlaydiv").hide();

			}

	function LoadActiveMarketSFIg() {

				var eventID=$("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();

				$.ajax({
					url: '/SmallFig/LoadMarketSFig/',
					type: 'GET',
					async: false,
					data: {'EventID':eventID},
					complete: function () {
					},
					error:function(){

					},
					success: function (data) {

						setTimeout(function () {
							LoadActiveMarketSFIg();
						},4000);
						if(data !=""){
							AssignDatatoMarketBookSFIg(data);
						}
						else{
							$("#SFigfancymarketbook").html("");
						}
					}

				});
			}
	var boolf = false;
		function GetMarketFigure() {
			var categoryname = $("#marketbookCategory" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
			var eventID = $("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();

			$.ajax({
				url: '/Figure/GetMarketFigure/',
				type: 'GET',
				async: true,
				data: { 'EventID': eventID, 'Boolf': boolf },
				complete: function () {
				},
				success: function (data) {
					setTimeout(function () {
						GetMarketFigure();
					}, 5000);
					boolf = true;
					$("#Figurefancymarketbook").html(data);
					//LoadActiveMarketFigure();
				}

			});

			$(".fancybackandlaydiv").hide();

		}

				function LoadActiveMarketFigure(){

					var categoryname=$("#marketbookCategory"+$("#lastloadedmarket").val().toString().replace(".","")).val();
					var eventID=$("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();

						$.ajax({
							url: '/Figure/LoadMarketFig/',
							type: 'GET',
							async: false,
							data: {'EventID':eventID},
							complete: function () {
							},
							error:function(){
								LoadActiveMarketFigure();
							},
							success: function (data) {

								setTimeout(function () {
									LoadActiveMarketFigure();
								},5000);
								if(data !=""){
									AssignDatatoMarketBookFigure(data);
								}
								else{
									$("#Figurefancymarketbook").html("");
								}
							}

						});
					}




        function LoadActiveMarketFancyIN()
				{

				var eventID=$("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
					// orignalopendate=datearr2[0]+"/"+datearr2[1]+"/"+datearr2[2]+" "+datearr[1];
					$.ajax({
						url: '/FancyStatus/LoadFancyMarketIN/',

						type: 'GET',
						async: false,
						data: {'EventID':eventID ,'MarketBookID': $("#lastloadedmarket").val()},
						complete: function () {
						},
						error:function(){
							LoadActiveMarketFancyIN();
						},
						success: function (data) {
							setTimeout(function () {
								LoadActiveMarketFancyIN();
							},2000);
							if(data !=""){
							AssignDatatoMarketBookFancyIN(data);
							//AssignDatatoMarketBookFancy2(data);
							}
						}

					});
				}

		function GetActiveMarketINFancy() {

			var marketbookstatus = $("#marketbookstatus" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
			var eventID = $("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();

			$.ajax({
				url: '/IndianF/GetInFancyMarket/',

				type: 'GET',
				async: true,
				data: { 'EventID': eventID, 'MarketBookID': $("#lastloadedmarket").val() },

				complete: function () {
				}, error: function () {
					GetActiveMarketINFancy();
				},
				success: function (data) {

					if (data != "") {

						$("#Indianfancymarketbook1").html(data);
						//LoadActiveMarketFancyIN();
						setTimeout(function () {
							GetActiveMarketINFancy();
							//LoadActiveMarketFancyIN();
						}, 1000);

					}
					else
					{
						$("#Indianfancymarketbook1").hide()
					}
				}

			});

			$(".fancybackandlaydiv").show();

		}

			function LoadActiveMarketFancy(){

				var marketbbokFancyIDs=$("#marketbookFancyIDs"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				var showfancypanel=  $("#marketbookFancyShown"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				if(marketbbokFancyIDs =="true"  && showfancypanel=="true"){
					var marketbbokFancyIDmarkets=$("#marketbookFancyMarket"+$("#lastloadedmarket").val().toString().replace(".","")).val();

					var marketbookstatus=$("#marketbookstatus"+$("#lastloadedmarket").val().toString().replace(".","")).val();
					var orignalopendate=$("#marketbookorignalopendate"+$("#lastloadedmarket").val().toString().replace(".","")).val();
					var orignalopendate=$("#marketbookorignalopendate"+$("#lastloadedmarket").val().toString().replace(".","")).val();
					var datearr=orignalopendate.split(" ");
					var datearr2=datearr[0].split("/");

					orignalopendate=datearr2[1]+"/"+datearr2[0]+"/"+datearr2[2]+" "+datearr[1] ;
					// orignalopendate=datearr2[0]+"/"+datearr2[1]+"/"+datearr2[2]+" "+datearr[1];
					$.ajax({
						url: '/Fancy/LoadFancyMarket/',

						type: 'GET',
						async: true,
						data: { 'EventID': eventID, 'MarketBookID': $("#lastloadedmarket").val()},

						complete: function () {

						},
						error:function(){
							LoadActiveMarketFancy();
						},
						success: function (data) {

							setTimeout(function () {
								LoadActiveMarketFancy();

							},500);
							if (data != "") {
								debugger;
								//  $("#fancymarketbook").html(data);
								//comparemarketbook();
								AssignDatatoMarketBookFancy(data);
							}
						}

					});
				}
				else{
					$("#fancymarketbook").html("");


				}

	}

			function showcurrentteam(team) {

				$("#currentteamforSelection"+$("#lastloadedmarket").val().toString().replace(".","")).val(team);
				if(team=="A"){
					$("#teamaname").addClass("teamnamebtnactive");
					$("#teamaname").removeClass("teamnamebtnsimple");
					$("#teambname").addClass("teamnamebtnsimple");
					$("#teambname").removeClass("teamnamebtnactive");
				}
				else{
					$("#teambname").addClass("teamnamebtnactive");
					$("#teambname").removeClass("teamnamebtnsimple");
					$("#teamaname").addClass("teamnamebtnsimple");
					$("#teamaname").removeClass("teamnamebtnactive");
				}


	}
	    var display = false;

	$('#btnPlay').click(function (ev) {
		$("#scorecaed").hide();

		if (display == false) {
			var eventID = $("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
			$("#video")[0].src = "https://orangeexch999.com/jmp/nm3/all.php?eventId= " + eventID + " ";
			$("#video").show();
			display = true;
			}

		else {
			display = false;
			$("#video").hide();
		}

	})

	var Carddisplay = false;

	$('#btnscorecard').click(function (ev) {
		$("#video").hide();
		if (display == false) {
			var eventID = $("#lastloadedmarket").val()
			$("#video").hide();
			$("#scorecaed")[0].src = "https://betproexch.com/Common/LiveScoreCard?id=" + eventID + "";
			$("#scorecaed").show();
			display = true;
		}
		else {
			display = false;
			$("#scorecaed").hide();
		}
	})

			$('#tv3').click(function (ev){
				$('#ftv1').hide();
				$('#ftv2').hide();
				$('#ftv3').show();
			})
			$('#btnclose').click(function (ev){
				$('#ftv1').hide();
				$('#ftv2').hide();
				$('#ftv3').hide();
			})



			function showcurrentviewsquadorscorecard(num){
				$("#currentview"+$("#lastloadedmarket").val().toString().replace(".","")).val(num);

				if(num=="0"){
					$("#teamASquadbtn").addClass("teamnamebtnactive");
					$("#teamASquadbtn").removeClass("teamnamebtnsimple");
					$("#teamAScoreCardbtn").addClass("teamnamebtnsimple");
					$("#teamAScoreCardbtn").removeClass("teamnamebtnactive");
				}
				else{
					$("#teamAScoreCardbtn").addClass("teamnamebtnactive");
					$("#teamAScoreCardbtn").removeClass("teamnamebtnsimple");
					$("#teamASquadbtn").addClass("teamnamebtnsimple");
					$("#teamASquadbtn").removeClass("teamnamebtnactive");
				}
			}
			function showfullscorecard(){
				$(".fullscorecard").show();

			}




		function AssignDataToScoreCard(matchstr) {


			if (matchstr == "") {
				$("#matchscores").hide();
				return;
			}
			var scorecard = JSON.parse(matchstr);

			if ( scorecard.cs != null) {

				$("#matchscores").show();

				var status;
				if (scorecard.cs.msg == "WD") {
					status = 'WIDE';
				}
				else {
					if (scorecard.cs.msg == "B") {
						status = 'Ball';
					}
					else {
						if (scorecard.cs.msg == "OC") {
							status = 'Over';
						}
						else {
							if (scorecard.cs.msg == "BS") {
								status = "Bowler Stop";
							}

							if  (scorecard.cs.msg == "BR") {
								status = "Innings Break";
							}

							else {
								if (scorecard.cs.msg == "DB") {
									status = "Drinks Break";
								}
								else {

									if (scorecard.cs.msg == "1") {
										status = "Single";
									}

									else {
										if (scorecard.cs.msg == "0") {
											status = "Zero Run";
										}
										else {
											if (scorecard.cs.msg == "2") {
												status = "Double";
											}
											else {
												if (scorecard.cs.msg == "3") {
													status = "Three Runs";
												}
												else {
													if (scorecard.cs.msg == "4") {
														status = "Four Runs";
													}
													else {

														if (scorecard.cs.msg == "5") {
															status = "Five Runs";
														}
														else {
															if (scorecard.cs.msg == "NB+1") {
																status = "No Ball + 1";
															}
															else {
																if (scorecard.cs.msg == "WK") {
																	status = "Wicket";
																}
																else {
																	if (scorecard.cs.msg == "6") {
																		status = "Sixer";
																	}
																	else {

																		if (scorecard.cs.msg == "WD+1") {
																			status = "wide + 1 run";
																		}
																		else {
																			if (scorecard.cs.msg == "C") {
																				status = "Confirming";
																			}

																			else {
																				if (scorecard.cs.msg == "NB") {
																					status = "NO Ball";
																				}

																				else {
																					if (scorecard.cs.msg == "FH") {
																						status = "Free Hit";
																					}
																					else {
																						if (scorecard.cs.msg == "NO") {
																							status = "Nor OUt";
																						}

																						else {

																							if (scorecard.cs.msg == "3U") {
																								status = "3rd Umpire";
																							}

																							else {
																								if (scorecard.cs.msg == "SB") {
																									status = "Spin Bowler";
																								}

																								else {
																									if (scorecard.cs.msg == "FB") {
																										status = "Fast Bowler";
																									}
																									else {

																										if (scorecard.cs.msg == "BS") {
																											status = "Bowler Stop";
																										}

																										else {
																										status = scorecard.cs.msg;
																										}}

																								}

																							}

																						}

																					}
																				}

																			}
																		}

																	}
																}

															}
														}

													}



												}

											}

										}


									}
								}

							}
						}

					}
				}




				$("#lbllastball").text(status);
				if (scorecard.i2.tr == 0) {
					$("#lblteamA").text(scorecard.t1.n);
					$("#lblteamAscore").text(scorecard.i1.sc);
					$("#lblwkt").text(scorecard.i1.wk);
					$("#lblov").text(scorecard.i1.ov);

					var over = scorecard.i1.ov.toString();
					var fields = over.split('.');
					var ovf = fields[0] * 6;
					var ovs = 0;
					if (fields.length > 1) {
						ovs = fields[1];
					}
					var tball = ovf + parseInt(ovs);
					var CR = (scorecard.i1.sc / tball) * 6;
					$("#lblCRR").text(CR.toFixed(2));
					//$("#lblRR").text(scorecard.data.spnreqrate1);
					$("#lblteamB").text(scorecard.t2.n);
					$("#lblteamBscore").text(scorecard.i2.tr);

				}
				else {

					$("#lblteamA").text(scorecard.t2.n);
					$("#lblteamAscore").text(scorecard.i2.sc);
					$("#lblwkt").text(scorecard.i2.wk);
					$("#lblov").text(scorecard.i2.ov);
					var over = scorecard.i2.ov.toString();
					var fields = over.split('.');
					var ovf = fields[0] * 6;
					var ovs = 0;
					if (fields.length > 1) {
						ovs = fields[1];
					}

					var tball = ovf + parseInt(ovs);
					var CR = (scorecard.i2.sc / tball) * 6;
					$("#lblCRR").text(CR.toFixed(2));
					var overs = (scorecard.iov) * 6;
					var ball = overs - tball;
					var Rscore = scorecard.i2.tr - scorecard.i2.sc;
					var RRR = (Rscore / (ball / 6));
					$("#lblRR").text(RRR.toFixed(2));
					$("#lblteamB").text(scorecard.t1.n);
					$("#lblteamBscore").text(scorecard.i2.tr);
					let str1 = "need ";
					let str2 = Rscore;
					let str3 = " from ";
					let str4 = ball;
					let res = str1.concat(str2, str3, str4);
					$("#lblmassgae").text(res);
				}

				var data = scorecard.pb.substring(scorecard.pb.length - 11);
				$("#lblballs").text(data);

			}
			else {
				$("#matchscores").hide();
			}
		}

		function AssignDataToSoccerCard(matchstr) {
		debugger;
			if (matchstr == "") {
				$("#matchscores").hide();
				return;
			}

			var status = $("#marketbookstatus").html();

			var scorecard = JSON.parse(matchstr);
			if (scorecard == null) {
				$("#matchscores").hide();
				return;
			}
			if (scorecard.state.timeElapsed != null)
			{
				$("#matchscores").hide();
				$("#lblteamnameAsoccer").text(scorecard.homeName);
				$("#lblteamnameBsoccer").text(scorecard.awayName);
				$("#lbltimes").text(scorecard.state.timeElapsed);


				$("#lblteamAsoccer").text(scorecard.state.score.home.score);


				$("#lblteamBsoccer").text(scorecard.state.score.away.score);

				$("#lblsoccerYC").text(scorecard.state.score.numberOfYellowCards);
				$("#lblsoccerYR").text(scorecard.state.score.numberOfRedCards);
			}

			else {
				$("#matchscores").hide();

			}
		}

		function AssignDataToTinnesCard(matchstr) {
			debugger;
			var as=$("#marketbookstatus").val();
		if (matchstr == "") {
			$("#matchscores").hide();
			return;
		}

		{


			var scorecard = JSON.parse(matchstr);
				if (scorecard == null) {
					$("#matchscores").hide();
				return;
			}
				if (scorecard.state == null) {
					$("#matchscores").show();
					return;
				}
				else {
					$("#lblteamnameAsoccer").text(scorecard.homeName);
					$("#lblteamnameBsoccer").text(scorecard.awayName);
					$("#lbltimes").text(scorecard.state.timeElapsed);


					$("#lblteamAsoccer").text(scorecard.state.score.home.score);


					$("#lblteamBsoccer").text(scorecard.state.score.away.score);

					$("#lblsoccerYC").text(scorecard.state.score.numberOfYellowCards);
					$("#lblsoccerYR").text(scorecard.state.score.numberOfRedCards);

				}	}
		}
	function updatescores()
			{

				var cricketkey=$("#marketbookcricketkey"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				var status = $("#marketbookstatus"+$("#lastloadedmarket").val().toString().replace(".","")).html();
				var getupdatesfrom= $("#getmatchupdatesfrom" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
				var eventID=$("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
				if(status!="hhhhh"){
					$.ajax({
						url: '/CricketScore/CreateScoreCard/',

						type: 'GET',
						async: true,
						data: { 'matchCricketAPIKey': cricketkey,'EventId':eventID,'GetMatchUpdatesFrom':getupdatesfrom},

						complete: function () {

						},
						error:function(){
							updatescores();
						},
						success: function (data) {

							if(getupdatesfrom=="Local"){
								$("#lblMatchStatus").hide();
								$("#imgstricker").hide();
								$("#imgbowler").hide();
								$("#lblStricker").hide();
								$("#lblBowler").hide();
								$("#lblrecentoversstr").hide();
								$("#lblLastBallComment").hide();
								if(data==""){
									$(".mainscorediv").hide();
									return;
								}
								var scorecard= JSON.parse(data);
								if(scorecard!=null){
									$(".mainscorediv").show();
									$("#lblteamascore").text(scorecard.TeamAName == null ? "" : scorecard.TeamAName);
									$("#lblteamascorenew").text(scorecard.TeamAScore == null ? "" : scorecard.TeamAScore);
									$("#lblteamaovers").text(scorecard.TeamAOver == null ? "" : scorecard.TeamAOver);
									$("#lblteambscore").text(scorecard.TeamBName == null ? "" : scorecard.TeamBName);
									$("#lblteambscorenew").text(scorecard.TeamBScore == null ? "" : scorecard.TeamBScore);
									$("#lblteambovers").text(scorecard.TeamBOver == null ? "" : scorecard.TeamBOver);

									// $("#lblteambscore").text(scorecard.TeamBScore==null?"":scorecard.TeamBScore);
									$("#lblcurrRR").text(scorecard.CurrRR);
									$("#lblRR").text(scorecard.ReqRR==null?"":scorecard.ReqRR);
									if(scorecard.RequireScore!=null){
										$("#lblRequirescore").show();

										var scorearr=scorecard.RequireScore.split(".");
										$("#lblRequirescore").text(scorearr[0]);
									}
									else{
										$("#lblRequirescore").hide();

									}
									if(scorecard.TeamBScore!=null){

										$("#lblteambscore").show();

									}
									else{

										$("#lblteambscore").hide();
									}
								}
							}
							else{
								AssignDataToScoreCard(data);
							}

							setTimeout(function () {
								updatescores();

							},1000);
							// $("#matchscores").html(data);


						}

					});
				}
				else{
					setTimeout(function () {
						updatescores();

					},1000);
					$(".mainscorediv").hide();
				}
	}

	function updatescoresnew() {

		var status = $("#marketbookstatus" + $("#lastloadedmarket").val().toString().replace(".", "")).html();
		var getupdatesfrom = $("#getmatchupdatesfrom" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
		var eventID = $("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
		if (status != "MARKET CLOSED" && status != "SUSPENDED") {
			$.ajax({
				url: '/CricketScore/CreateScoreCardNew/',
				type: 'GET',
				async: true,
				data: { 'EventId': eventID },

				complete: function () {

				},
				error: function () {
					updatescoresnew();
				},
				success: function (data) {

					AssignDataToScoreCard(data);

					setTimeout(function () {
						updatescoresnew();

					},1000);
				}
			});
		}
		else {
			setTimeout(function () {
				updatescoresnew();

			}, 1000);
			$(".mainscorediv").hide();
		}
	}

	function updatescoresnewsoccer() {
		debugger;
		var getupdatesfrom = $("#getmatchupdatesfrom" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
		var eventID = $("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();

			$.ajax({
				url: '/CricketScore/CreateSoccerCardNew/',
				type: 'GET',
				async: false,
				data: { 'EventId': eventID },
				complete: function () {
				},
				error: function () {
					updatescoresnewsoccer();
				},
				success: function (data) {

					AssignDataToSoccerCard(data);
					setTimeout(function () {
						updatescoresnewsoccer();
					}, 7000);
				}
			});
	}

		function updatescoresnewTinnes() {
			debugger;
		var status = $("#marketbookstatus" + $("#lastloadedmarket").val().toString().replace(".", "")).html();
		var getupdatesfrom = $("#getmatchupdatesfrom" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
		var eventID = $("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
		if (status != "hhhhh") {
			$.ajax({
				url: '/CricketScore/CreateSoccerCardNew/',
				type: 'GET',
				async: true,
				data: { 'EventId': eventID },
				complete: function () {
				},
				error: function () {
					updatescoresnewTinnes();
				},
				success: function (data) {
					//debugger;
					AssignDataToTinnesCard(data);
					setTimeout(function () {
						updatescoresnewTinnes();
					}, 3000);
				}
			});
		}
		else {
			setTimeout(function () {
				updatescoresnewTinnes();

			}, 1000);
			$(".mainscorediv").hide();
		}
	}


	   function CheckForCricketScores(){

				var isallowedtogetscore=$("#marketbookgetscores"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				if(isallowedtogetscore=="true"){
					$.ajax({
						url: '/CricketScore/InitializeScoreCard/',

						type: 'GET',
						async: true,
						complete: function () {
						},
						error:function(){
						},
						success: function (data) {
							$("#matchscores").html(data);
							//updatescores();
							updatescoresnew();
						}

					});

				}
	       }

	  function CheckforSoccer() {

		var isallowedtogetscore = $("#marketbookgetscores" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
		var categoryname = $("#marketbookCategory" + $("#lastloadedmarket").val().toString().replace(".", "")).val();

			$.ajax({
				url: '/CricketScore/InitializeSoccerCard/',
				type: 'GET',
				async: true,
				complete: function () {
				},
				error: function () {
				},
				success: function (data) {
					$("#matchscores").html(data);
					updatescoresnewsoccer();
				}
			});

	   }

	function CheckForTinnes() {
		var isallowedtogetscore = $("#marketbookgetscores" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
		var categoryname = $("#marketbookCategory" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
		debugger;
			$.ajax({
				url: '/CricketScore/InitializeTinnesCard/',
				type: 'GET',
				async: true,
				complete: function () {
				},
				error: function () {
				},
				success: function (data) {
					$("#matchscores").html(data);
					updatescoresnewTinnes();
				}
			});

	}
			//ToWintheToss
			function CheckForWintTheTossMarket(){

				var eventid=$("#eventidfor"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				if(1==1){

					$.ajax({
						url: '/ToWinTheToss/CheckforToWintheTossMarket/',
						data:{'EventID':eventid},
						type: 'GET',
						async: true,
						complete: function () {
						},
						error:function(){
						},
						success: function (data) {
							if(data !=""){
								$("#marketbookTWT").show();
								LoadMarketTypeTWT(data);
							}
						}

					});

				}
			}
			function LoadActiveMarketTWT() {

				var marketstatus=$("#marketbookstatus"+$("#lastloadedmarket").val().toString().replace(".","")).text();
				if (marketstatus !="GOING LIVE"){
					$("#marketbookTWT").hide();
					return;
				}
				$("#lastsavedhtmlTWT").val($("div[data-marketid='" + $("#lastloadedmarketTWT").val() + "']").html());


				var marketbbokname=$("#marketbookname"+$("#lastloadedmarketTWT").val().toString().replace(".","")).val();

				var orignalopendate=$("#marketbookorignalopendate"+$("#lastloadedmarketTWT").val().toString().replace(".","")).val();
				if(orignalopendate==undefined){
					HideLoader();
					return;
				}
				var datearr=orignalopendate.split(" ");
				var datearr2=datearr[0].split("/");
				orignalopendate=datearr2[1]+"/"+datearr2[0]+"/"+datearr2[2]+" "+datearr[1] ;
				//orignalopendate=datearr2[0]+"/"+datearr2[1]+"/"+datearr2[2]+" "+datearr[1] + " "+ datearr[2];
				var mainsportcat=$("#marketbookCategory"+$("#lastloadedmarketTWT").val().toString().replace(".","")).val();
				var windowsize = $(window).width();
				if(windowsize<=680){
					var heightofidv=0;
					if(mainsportcat.indexOf("Racing")<0){
						heightofidv=0;
					}

					$("#marketbook"+$("#lastloadedmarketTWT").val().toString().replace(".","")+" .runnerswrapper").each(function(){
						if($(this).attr("id")!=null){
							heightofidv+=$(this).height();
						}


					});
					var totrunnercount=$("#marketbook"+$("#lastloadedmarketTWT").val().toString().replace(".","")+" .runnerswrapper").length;
					if(totrunnercount>2){
						heightofidv=heightofidv+(1.60* totrunnercount);
					}
					orignalopendate
					$("#marketbook"+$("#lastloadedmarketTWT").val().toString().replace(".","")+" .backgroundimageforSuspended").height(heightofidv);
				}
				if(marketbbokname == undefined){
					LoadUserBets();
					return;
				}
				var selectedrunners= $("#selectedrunnersforavg"+$("#lastloadedmarketTWT").val().toString().replace(".","")).val();
				$.ajax({
					url: '/Market/LoadActiveMarketTWT/',

					type: 'GET',
					async: true,
					data: { 'ID': $("#lastloadedmarketTWT").val(),'sheetname':  marketbbokname,'OrignalOpenDate': orignalopendate ,'MainSportsCategory': mainsportcat,'RunnersForAverage':selectedrunners},

					complete: function () {

					},
					error:function(){
						LoadActiveMarketTWT();
					},
					success: function (data) {
						setTimeout(function () {
							LoadActiveMarketTWT();

						},200);

						if(data !=""){


							AssignDatatoMarketBookTWT(data);

						}

						//   $("div[data-marketid='" + $("#lastloadedmarket").val() + "']").html(data);

						if ($("#lastsavedhtmlTWT").val().trim() == "") {
							$("#lastsavedhtmlTWT").val($("div[data-marketid='" + $("#lastloadedmarketTWT").val() + "']").html());
						}
						$(".runners").each(function () {

							var id = $(this).attr("data-value");
							//LoadRunnername(id);

							if ($("#openedbetslipid").val() == id) {

								SetBackandlayonbetslip(id);
							}

						});



						comparemarketbookTWT();


					}

				});
			}
			//

	//Soccergoal
	function CheckForSoccergoalMarket() {

		var eventid = $("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();

			$.ajax({
				url: '/Soccergoal/CheckforSoccergoalMarket/',
				data: { 'EventID': eventid },
				type: 'GET',
				async: true,

				complete: function () {

				},
				error: function () {

				},
				success: function (data) {
					if (data != "") {
						$("#marketbooksoccer").show();
						LoadMarketTypeSoccerGoal();
					}
				}

			});

	}


	function LoadActiveMarketSoccerGaol() {
		//debugger;

		var marketstatus = $("#marketbookstatus" + $("#lastloadedmarket").val().toString().replace(".", "")).text();
		if (marketstatus != "GOING LIVE") {
			$("#marketbookTWT").hide();
			return;
		}
		var eventid = $("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();

		$.ajax({
			url: '/Market/LoadActiveMarketSoccerGoal/',

			type: 'GET',
			async: false,
			data: { 'EventID': eventid },

			complete: function () {

			},
			error: function () {
				LoadActiveMarketTWT();
			},
			success: function (data) {
				setTimeout(function () {
					LoadActiveMarketSoccerGaol();

				}, 200);

				if (data != "") {
					AssignDatatoMarketBookSoccerGoal(data);
				}

				$(".runners").each(function () {

					var id = $(this).attr("data-value");
					//LoadRunnername(id);

					if ($("#openedbetslipid").val() == id) {

						SetBackandlayonbetslip(id);
					}

				});



				comparemarketbookTWT();


			}

		});
	}
			function LoadActiveMarket() {

				$("#lastsavedhtml").val($("div[data-marketid='" + $("#lastloadedmarket").val() + "']").html());

				dataurl = '/Market/LoadActiveMarket/';

				if ($("#lastloadedmarket").val()==""){
					LoadUserBets();
					return;
				}

				var marketbbokname=$("#marketbookname"+$("#lastloadedmarket").val().toString().replace(".","")).val();

				var orignalopendate=$("#marketbookorignalopendate"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				if(orignalopendate==undefined){
					HideLoader();
					return;
				}

				var datearr=orignalopendate.split(" ");
				var datearr2=datearr[0].split("/");
				orignalopendate=datearr2[1]+"/"+datearr2[0]+"/"+datearr2[2]+" "+datearr[1] ;
				//orignalopendate=datearr2[0]+"/"+datearr2[1]+"/"+datearr2[2]+" "+datearr[1] + " "+ datearr[2];
				var mainsportcat=$("#marketbookCategory"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				var windowsize = $(window).width();

				if(1==1){
					var heightofidv=0;
					if(mainsportcat.indexOf("Racing")<0){
						heightofidv=0;
					}


					$("#marketbook"+$("#lastloadedmarket").val().toString().replace(".","")+" .runnerswrapper").each(function(){
						if($(this).attr("id")!=null){
							heightofidv+=$(this).height();
						}


					});

					var totrunnercount=$("#marketbook"+$("#lastloadedmarket").val().toString().replace(".","")+" .runnerswrapper").length;
					if(totrunnercount>2){
					heightofidv=(20.5* totrunnercount);
					}

					$("#marketbook"+$("#lastloadedmarket").val().toString().replace(".","")+" .backgroundimageforSuspended").height(heightofidv);
				}
				if(marketbbokname == undefined){
					LoadUserBets();
					return;
				}
				var selectedrunners= $("#selectedrunnersforavg"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				$.ajax({
					url: '/Market/LoadActiveMarket/',

					type: 'GET',
					async: true,
					data: { 'ID': $("#lastloadedmarket").val(),'sheetname':  marketbbokname,'OrignalOpenDate': orignalopendate ,'MainSportsCategory': mainsportcat,'RunnersForAverage':selectedrunners},

					complete: function () {
						// LoadUserBets();
						//  LoadActiveMarket();
						@*if(@LoggedinUserDetail.GetUserTypeID()!=3){

                    LoadUserBets();
                }
                else{
                    LoadActiveMarket();

                }*@


					},
					error:function(){
						LoadActiveMarket();

					},
					success: function (data) {

						setTimeout(function () {
							LoadActiveMarket();
							//CheckForCricketScores();

						},200);

						if(data !=""){

							AssignDatatoMarketBook(data);

						}

						if ($("#lastsavedhtml").val().trim() == "") {
							$("#lastsavedhtml").val($("div[data-marketid='" + $("#lastloadedmarket").val() + "']").html());
						}
						$(".runners").each(function () {

							var id = $(this).attr("data-value");
							//LoadRunnername(id);

							if ($("#openedbetslipid").val() == id) {

								SetBackandlayonbetslip(id);
							}

						});


						SetSelectedRunners();
						comparemarketbook();
						@*if (@LoggedinUserDetail.GetUserTypeID() !=3 ){
                    if($("#totalmarketsopened").val() != $("#totalmarketsopened"+$("#lastloadedmarket").val().toString().replace(".","")).val()){

                        LoadMarketType("");
                    }
                }*@
						if (@LoggedinUserDetail.GetUserTypeID()==1){
							CalculateAverageRate();

						}

						if(data !=""){
							//   SetFirstItemActive($("#lastloadedmarket").val());


							// LoadActiveMarket();

						}



					}

				});
			}
			function Toggleliabalitiesbymarkets(){
				if($("#libalitybymarket").css("display")=="none"){
					$("#libalitybymarket").show();
					Loadliabalitiesbymarkets();
				}
				else{
					$("#libalitybymarket").hide();
				}
			}
			function AssignDatatoMarketBook(marketbooks){
       var Mainheight =$('#mainhight').height();
				var marketbook1= JSON.parse(marketbooks);
				var marketbook=marketbook1[0];
				var marketbookID=$("#lastloadedmarket").val().toString().replace(".","");

				if($("#lastloadedmarket").val().toString() != marketbook.MarketId){
					return;
				}

				if(marketbook.MarketBookName.indexOf("To Be Placed")>=0){
					$("#lblTobePlaced").text(marketbook.NumberOfWinners.toString() +" - TO BE PLACED");
				}
				$("#totalmarketsopened"+marketbookID).val(marketbook.marketsopened);
				$("#marketbookTotalMatched"+marketbookID).val(marketbook.TotalMatched.toString());
				$("#lblmarketbookTotalMatched" + marketbookID).text("Total Matched: " + marketbook.TotalMatched.toString());

				for (j = 0; j <= marketbook.Runners.length - 1; j++) {

					for (i = 2; i >= 0; i--) {
						if (marketbook.Runners[j].ExchangePrices.AvailableToBack.length - 1 >= i && marketbook.Runners[j].ExchangePrices.AvailableToBack.length > 0) {

							$("#marketbook" + marketbookID + " #lblbackprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price == "0" ? "" : marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price);
							$("#marketbook" + marketbookID + " #lblbackprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "showbetslip('" + marketbook.Runners[j].SelectionId.toString() + "','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price + "','2000','0','" + marketbook.MarketId + "','" + marketbook.MarketBookName + "','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Size + "','" + i + "','0')");
							$("#marketbook" + marketbookID + " #lblbacksize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToBack[i].SizeStr == "0" ? "" : marketbook.Runners[j].ExchangePrices.AvailableToBack[i].SizeStr);
							$("#marketbook" + marketbookID + " #lblbacksize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "showbetslip('" + marketbook.Runners[j].SelectionId.toString() + "','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price + "','2000','0','" + marketbook.MarketId + "','" + marketbook.MarketBookName + "','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Size + "','" + i + "','0')");
						}
						else {
							$("#marketbook" + marketbookID + " #lblbackprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook" + marketbookID + " #lblbackprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "");
							$("#marketbook" + marketbookID + " #lblbacksize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook" + marketbookID + " #lblbacksize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "");
						}
					}
					for (i = 0; i < 3; i++) {
						if (marketbook.Runners[j].ExchangePrices.AvailableToLay.length > i && marketbook.Runners[j].ExchangePrices.AvailableToLay.length > 0) {

							$("#marketbook" + marketbookID + " #lbllayprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price == "0" ? "" : marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price);
							$("#marketbook" + marketbookID + " #lbllayprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "showbetslip('" + marketbook.Runners[j].SelectionId.toString() + "','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price + "','2000','0','" + marketbook.MarketId + "','" + marketbook.MarketBookName + "','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Size + "','" + i + "','0')");
							$("#marketbook" + marketbookID + " #lbllaysize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToLay[i].SizeStr == "0" ? "" : marketbook.Runners[j].ExchangePrices.AvailableToLay[i].SizeStr);
							$("#marketbook" + marketbookID + " #lbllaysize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "showbetslip('" + marketbook.Runners[j].SelectionId.toString() + "','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price + "','2000','0','" + marketbook.MarketId + "','" + marketbook.MarketBookName + "','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Size + "','" + i + "','0')");
						}
						else {
							$("#marketbook" + marketbookID + " #lbllayprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook" + marketbookID + " #lbllayprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "");
							$("#marketbook" + marketbookID + " #lbllaysize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook" + marketbookID + " #lbllaysize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "");
						}
					}
					$("#marketbook" + marketbookID + " #lblrunnerlastprice" + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].LastPriceTraded == null ? "" : marketbook.Runners[j].LastPriceTraded);
					$("#marketbook" + marketbookID + " #lblrunnertotalmatched" + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].TotalMatchedStr == null ? "" : marketbook.Runners[j].TotalMatchedStr);
					$("#marketbook" + marketbookID + " #runnernamediv" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnerfavorite");
					if (marketbook.Runners[j].StatusStr == "WINNER") {

						$("#marketbook" + marketbookID + " #runnernamediv" + marketbook.Runners[j].SelectionId.toString()).addClass("runnerwinner");
						$("#marketbook" + marketbookID + " #lblSelectionName" + marketbook.Runners[j].SelectionId.toString()).attr('style', 'color: white !important');
						$("#marketbook" + marketbookID + " #lbljockey" + marketbook.Runners[j].SelectionId.toString()).attr('style', 'color: white !important');

						$("#lblfavoritename" + marketbookID).text($("#marketbook" + marketbookID + " #lblSelectionName" + marketbook.FavoriteID).text().toString().trim());
					}
					else {
						if (marketbook.MarketStatusstr != "Closed") {
							$("#lblfavoritename" + marketbookID).text($("#marketbook" + marketbookID + " #lblSelectionName" + marketbook.FavoriteID).text().toString().trim());
						}
					}

					if (marketbook.FavoriteID.toString() == marketbook.Runners[j].SelectionId.toString() && marketbook.Runners[j].StatusStr != "WINNER") {
						$("#marketbook" + marketbookID + " #runnernamediv" + marketbook.Runners[j].SelectionId.toString()).addClass("runnerfavorite");

					}
					if (parseInt(marketbook.Runners[j].ProfitandLoss) >= 0) {
						$("#marketbook" + marketbookID + " #lblprofitandloss" + marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
						$("#marketbook" + marketbookID + " #lblprofitandloss" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
						$("#marketbook" + marketbookID + " #lblaverage" + marketbook.Runners[j].SelectionId.toString()).addClass("runnersaveragegreen");
						$("#marketbook" + marketbookID + " #lblaverage" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnersaveragered");

					}
					else {
						$("#marketbook" + marketbookID + " #lblprofitandloss" + marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
						$("#marketbook" + marketbookID + " #lblprofitandloss" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
						$("#marketbook" + marketbookID + " #lblaverage" + marketbook.Runners[j].SelectionId.toString()).addClass("runnersaveragered");
						$("#marketbook" + marketbookID + " #lblaverage" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnersaveragegreen");
					}
					if (parseInt(marketbook.Runners[j].Loss) >= 0) {
						$("#marketbook" + marketbookID + " #lblloss" + marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
						$("#marketbook" + marketbookID + " #lblloss" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
					}
					else {
						$("#marketbook" + marketbookID + " #lblloss" + marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
						$("#marketbook" + marketbookID + " #lblloss" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
					}
					if (marketbook.Runners[j].Average == null) {
						$("#marketbook" + marketbookID + " #lblaverage" + marketbook.Runners[j].SelectionId.toString()).text("");
					}
					else {
						$("#marketbook" + marketbookID + " #lblaverage" + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].Average);
					}
					$("#marketbook" + marketbookID + " #lblprofitandloss" + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ProfitandLoss == "0" ? "" : marketbook.Runners[j].ProfitandLoss);
					$("#marketbook" + marketbookID + " #lblloss" + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].Loss == "0" ? "" : marketbook.Runners[j].Loss);
				}


				if (marketbook.MarketStatusstr == "In Play")
				{
					$("#marketbookstatus"+marketbookID).text("IN-PLAY");
					$("#marketbookstatus"+marketbookID).removeClass("suspended");
					$("#marketbookstatus"+marketbookID).removeClass("completed");

					$("#marketbookstatus"+marketbookID).removeClass("active1");
					$("#marketbookstatus"+marketbookID).addClass("inplay");
					$(".backgroundimageforSuspended").removeClass("backgroundsuspended");
					$(".backgroundimageforSuspended").removeClass("backgroundclosed");
					$(".backgroundimageforSuspended").css({"display": "none"});

				}
				else
				{

					if (marketbook.MarketStatusstr == "Suspended")
					{

						$('#myModalBetslipmultiple').modal('hide');
						$('#simpleBet').hide();
						$(".backgroundimageforSuspended").addClass("backgroundsuspended");
						if($("#marketbook"+marketbookID+ " .tobeplacedcount").height()==null)
						{
							//$(".backgroundimageforSuspended").css({"margin-top":"78px"});
						}
						else{
							//$(".backgroundimageforSuspended").css({"margin-top":"78px"});
						}
						  $(".backgroundimageforSuspended label").text("Suspended");
						$(".backgroundimageforSuspended").removeClass("backgroundclosed");

						$("#marketbookstatus"+marketbookID).text("SUSPENDED");
						//$("#marketbookstatus"+marketbookID).text("");
						$("#marketbookstatus"+marketbookID).removeClass("inplay");
						$("#marketbookstatus"+marketbookID).removeClass("completed");
						$("#marketbookstatus"+marketbookID).removeClass("active1");
						$("#marketbookstatus"+marketbookID).removeClass("marketstatus");
						$("#marketbookstatus"+marketbookID).addClass("suspended");
						$("#marketbookstatus"+marketbookID).addClass("marketstatus");
						$("#marketbookstatus"+marketbookID).css({"display": "block"});
						$("#marketbookstatus"+marketbookID).css({"background-color": "transparent"});
					   $(".backgroundimageforSuspended").css({"display": "block"});
					}
					else
					{
						if (marketbook.MarketStatusstr == "Active")
					{
						$("#marketbookstatus"+marketbookID).text("GOING LIVE");
						$("#marketbookstatus"+marketbookID).removeClass("inplay");
						$("#marketbookstatus"+marketbookID).removeClass("completed");
						$("#marketbookstatus"+marketbookID).removeClass("suspended");
						$("#marketbookstatus"+marketbookID).addClass("active1");
						$(".backgroundimageforSuspended").removeClass("backgroundsuspended");
						$(".backgroundimageforSuspended").removeClass("backgroundclosed");
						$(".backgroundimageforSuspended").css({"display": "none"});

					}
					else{

						$('#myModalBetslipmultiple').modal('hide');
						$('#simpleBet').hide();
						$(".backgroundimageforSuspended").removeClass("backgroundsuspended");
						//if($("#marketbook"+marketbookID+" .tobeplacedcount").height()==null){
							//$(".backgroundimageforSuspended").css({"margin-top":"78px"});
						//}
						//else{
							//$(".backgroundimageforSuspended").css({"margin-top":"78px"});
						//}
						$(".backgroundimageforSuspended").addClass("backgroundclosed");
						// $(".backgroundimageforSuspended label").text("Closed");
						$("#marketbookstatus"+marketbookID).text("MARKET CLOSED");
						//$("#marketbookstatus"+marketbookID).text("");
						$("#marketbookstatus"+marketbookID).removeClass("inplay");
						$("#marketbookstatus"+marketbookID).removeClass("suspended");
						$("#marketbookstatus"+marketbookID).removeClass("active1");
						$("#marketbookstatus"+marketbookID).removeClass("marketstatus");
						$("#marketbookstatus"+marketbookID).addClass("completed");
						$("#marketbookstatus"+marketbookID).addClass("marketstatus");
						$("#marketbookstatus"+marketbookID).css({"display": "block"});
						$("#marketbookstatus"+marketbookID).css({"background-color": "transparent"});
						$(".backgroundimageforSuspended").css({"display": "block"});
					   //$(".backgroundimageforSuspended").css({"height": Mainheight+'px'});
					}
					}
				}
				$("#marketbook"+marketbookID+" #lblSelectionName"+marketbook.FavoriteID).text().toString().trim();
				$("#lblfavoritename"+marketbookID).text($("#marketbook"+marketbookID+" #lblSelectionName"+marketbook.FavoriteID).text().toString().trim());

				$("#lblfavoritebackprice"+marketbookID).text(marketbook.FavoriteBack=="0"?"":marketbook.FavoriteBack);
				$("#lblfavoritebackprice"+marketbookID).attr("onclick","showbetslipmultiple('"+marketbook.FavoriteID +"','back','" + marketbook.FavoriteBack + 1 + "','4000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.FavoriteBackSize+"','0')");
				$("#lblfavoritelayprice"+marketbookID).text(marketbook.FavoriteLay=="0"?"":marketbook.FavoriteLay);
				$("#lblfavoritelayprice"+marketbookID).attr("onclick","showbetslipmultiple('"+marketbook.FavoriteID +"','lay','" + marketbook.FavoriteLay + 1 + "','4000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.FavoriteLaySize+"','0')");
				$("#lblfavoritebacksize"+marketbookID).text(marketbook.FavoriteBackSize=="0"?"":marketbook.FavoriteBackSize);
				$("#lblfavoritebacksize"+marketbookID).attr("onclick","showbetslipmultiple('"+marketbook.FavoriteID +"','back','" + marketbook.FavoriteBack + 1 + "','4000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.FavoriteBackSize+"','0')");
				$("#lblfavoritelaysize"+marketbookID).text(marketbook.FavoriteLaySize=="0"?"":marketbook.FavoriteLaySize);
				$("#lblfavoritelaysize"+marketbookID).attr("onclick","showbetslipmultiple('"+marketbook.FavoriteID +"','lay','" + marketbook.FavoriteLay + 1 + "','4000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.FavoriteLaySize+"','0')");

				$("#lbltimer"+marketbookID).text(marketbook.OpenDate);
				if(marketbook.OpenDate.toString().indexOf("-")>=0){
					$("#lbltimer"+marketbookID).attr('style', 'color: red  !important','font-weight:bold');
				}
			}
			function AssignDatatoMarketBookTWT(marketbooks){

				var marketbook1= JSON.parse(marketbooks);
				var marketbook=marketbook1[0];
				var marketbookID=$("#lastloadedmarketTWT").val().toString().replace(".","");

				if($("#lastloadedmarketTWT").val().toString() != marketbook.MarketId){
					return;
				}
				for(j=0;j<=marketbook.Runners.length-1;j++){

					for (i = 2; i >= 0; i--)
					{
						if (marketbook.Runners[j].ExchangePrices.AvailableToBack.length - 1 >= i && marketbook.Runners[j].ExchangePrices.AvailableToBack.length > 0)
						{

							$("#marketbook"+marketbookID+" #lblbackprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price=="0"?"":marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price );
							$("#marketbook"+marketbookID+" #lblbackprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Size+"','"+ i +"','0')");
							$("#marketbook"+marketbookID+" #lblbacksize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Size=="0"?"":marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Size);
							$("#marketbook"+marketbookID+" #lblbacksize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Size+"','"+ i +"','0')");
						}
						else{
							$("#marketbook"+marketbookID+" #lblbackprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook"+marketbookID+" #lblbackprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
							$("#marketbook"+marketbookID+" #lblbacksize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook"+marketbookID+" #lblbacksize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
						}
					}
					for (i = 0; i < 3; i++)
					{
						if (marketbook.Runners[j].ExchangePrices.AvailableToLay.length > i && marketbook.Runners[j].ExchangePrices.AvailableToLay.length > 0)
						{

							$("#marketbook"+marketbookID+" #lbllayprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price=="0"?"":marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price);
							$("#marketbook"+marketbookID+" #lbllayprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Size+"','"+ i +"','0')");
							$("#marketbook"+marketbookID+" #lbllaysize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Size=="0"?"":marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Size);
							$("#marketbook"+marketbookID+" #lbllaysize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Size+"','"+ i +"','0')");
						}
						else{
							$("#marketbook"+marketbookID+" #lbllayprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook"+marketbookID+" #lbllayprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
							$("#marketbook"+marketbookID+" #lbllaysize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook"+marketbookID+" #lbllaysize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
						}
					}
					$("#marketbook"+marketbookID+" #lblrunnerlastprice"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].LastPriceTraded);
					$("#marketbook"+marketbookID+" #runnernamediv"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnerfavorite");
					if(marketbook.Runners[j].StatusStr=="WINNER"){

						$("#marketbook"+marketbookID+" #runnernamediv"+marketbook.Runners[j].SelectionId.toString()).addClass("runnerwinner");
						$("#marketbook"+marketbookID+" #lblSelectionName"+marketbook.Runners[j].SelectionId.toString()).attr('style', 'color: white !important');
						$("#marketbook"+marketbookID+" #lbljockey"+marketbook.Runners[j].SelectionId.toString()).attr('style', 'color: white !important');
                        $("#marketbook"+marketbookID+" #lblrunnerstatus"+marketbook.Runners[j].SelectionId.toString()).attr('style', 'color: white !important');

						$("#lblfavoritename"+marketbookID).text($("#marketbook"+marketbookID+" #lblSelectionName"+marketbook.FavoriteID).text().toString().trim());
					}
					else{
						if (marketbook.MarketStatusstr != "Closed"){
							$("#lblfavoritename"+marketbookID).text($("#marketbook"+marketbookID+" #lblSelectionName"+marketbook.FavoriteID).text().toString().trim());
						}
					}

					if(marketbook.FavoriteID.toString()==marketbook.Runners[j].SelectionId.toString() && marketbook.Runners[j].StatusStr!="WINNER")
					{
						$("#marketbook"+marketbookID+" #runnernamediv"+marketbook.Runners[j].SelectionId.toString()).addClass("runnerfavorite");

					}
					if(parseInt(marketbook.Runners[j].ProfitandLoss)>=0){
						$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
						$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
						$("#marketbook"+marketbookID+" #lblaverage"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersaveragegreen");
						$("#marketbook"+marketbookID+" #lblaverage"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersaveragered");

					}
					else{
						$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
						$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
						$("#marketbook"+marketbookID+" #lblaverage"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersaveragered");
						$("#marketbook"+marketbookID+" #lblaverage"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersaveragegreen");
					}
					if(parseInt(marketbook.Runners[j].Loss)>=0){
						$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
						$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
					}
					else{
						$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
						$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
					}
					if(marketbook.Runners[j].Average==null){
						$("#marketbook"+marketbookID+" #lblaverage"+marketbook.Runners[j].SelectionId.toString()).text("");
					}
					else{
						$("#marketbook"+marketbookID+" #lblaverage"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].Average);
					}
					$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ProfitandLoss);
					$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].Loss);


				}
				if (marketbook.MarketStatusstr == "In Play")
				{

					$(".backgroundimageforSuspended").removeClass("backgroundsuspended");
					$(".backgroundimageforSuspended").removeClass("backgroundclosed");
					$(".backgroundimageforSuspended").css({"display": "none"});

				}
				else
				{
					if (marketbook.MarketStatusstr == "Suspended")
					{  $('#myModalBetslipmultiple').modal('hide');
						$('#simpleBet').hide();
						//$(".backgroundimageforSuspended").addClass("backgroundsuspended");
						//if($("#marketbook"+marketbookID+ " .tobeplacedcount").height()==null){
						//    $(".backgroundimageforSuspended").css({"margin-top":"47px"});
						//}
						//else{
						//    $(".backgroundimageforSuspended").css({"margin-top":"47px"});
						//}
						////  $(".backgroundimageforSuspended label").text("Suspended");
						//$(".backgroundimageforSuspended").removeClass("backgroundclosed");


						//$(".backgroundimageforSuspended").css({"display": "block"});
					}
					else
					{ if (marketbook.MarketStatusstr == "Active")
					{

						$(".backgroundimageforSuspended").removeClass("backgroundsuspended");
						$(".backgroundimageforSuspended").removeClass("backgroundclosed");
						$(".backgroundimageforSuspended").css({"display": "none"});

					}
					else{
						$('#myModalBetslipmultiple').modal('hide');
						$('#simpleBet').hide();
						//$(".backgroundimageforSuspended").removeClass("backgroundsuspended");
						//if($("#marketbook"+marketbookID+" .tobeplacedcount").height()==null){
						//    $(".backgroundimageforSuspended").css({"margin-top":"47px"});
						//}
						//else{
						//    $(".backgroundimageforSuspended").css({"margin-top":"47px"});
						//}
						//$(".backgroundimageforSuspended").addClass("backgroundclosed");
						//// $(".backgroundimageforSuspended label").text("Closed");

						//$(".backgroundimageforSuspended").css({"display": "block"});
					}


					}
				}
				//$("#marketbook"+marketbookID+" #lblSelectionName"+marketbook.FavoriteID).text().toString().trim();
				//$("#lblfavoritename"+marketbookID).text($("#marketbook"+marketbookID+" #lblSelectionName"+marketbook.FavoriteID).text().toString().trim());

				//$("#lblfavoritebackprice"+marketbookID).text(marketbook.FavoriteBack=="0"?"":marketbook.FavoriteBack);
				//$("#lblfavoritebackprice"+marketbookID).attr("onclick","showbetslipmultiple('"+marketbook.FavoriteID +"','back','" + marketbook.FavoriteBack + 1 + "','4000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.FavoriteBackSize+"','0')");
				//$("#lblfavoritelayprice"+marketbookID).text(marketbook.FavoriteLay=="0"?"":marketbook.FavoriteLay);
				//$("#lblfavoritelayprice"+marketbookID).attr("onclick","showbetslipmultiple('"+marketbook.FavoriteID +"','lay','" + marketbook.FavoriteLay + 1 + "','4000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.FavoriteLaySize+"','0')");
				//$("#lblfavoritebacksize"+marketbookID).text(marketbook.FavoriteBackSize=="0"?"":marketbook.FavoriteBackSize);
				//$("#lblfavoritebacksize"+marketbookID).attr("onclick","showbetslipmultiple('"+marketbook.FavoriteID +"','back','" + marketbook.FavoriteBack + 1 + "','4000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.FavoriteBackSize+"','0')");
				//$("#lblfavoritelaysize"+marketbookID).text(marketbook.FavoriteLaySize=="0"?"":marketbook.FavoriteLaySize);
				//$("#lblfavoritelaysize"+marketbookID).attr("onclick","showbetslipmultiple('"+marketbook.FavoriteID +"','lay','" + marketbook.FavoriteLay + 1 + "','4000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.FavoriteLaySize+"','0')");


	}

	         function AssignDatatoMarketBookSoccerGoal(marketbooks) {

		var marketbook1 = JSON.parse(marketbooks);
		//debugger;
		for (s = 0; s <= marketbook1.length - 1; s++) {

			//debugger;
			var marketbook = marketbook1[s];
			var marketbookID = marketbook.MarketId;//$("#lastloadedmarketTWT").val().toString().replace(".","");

			//if($("#lastloadedmarketTWT").val().toString() != marketbook.MarketId){
			//	return;
			//}
			for (j = 0; j <= marketbook.Runners.length - 1; j++) {

				for (i = 2; i >= 0; i--) {
					if (marketbook.Runners[j].ExchangePrices.AvailableToBack.length - 1 >= i && marketbook.Runners[j].ExchangePrices.AvailableToBack.length > 0) {

						$("#marketbook" + marketbookID + " #lblbackprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price == "0" ? "" : marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price);
						$("#marketbook" + marketbookID + " #lblbackprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "showbetslip('" + marketbook.Runners[j].SelectionId.toString() + "','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price + "','2000','0','" + marketbook.MarketId + "','" + marketbook.MarketBookName + "','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Size + "','" + i + "','0')");
						$("#marketbook" + marketbookID + " #lblbacksize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Size == "0" ? "" : marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Size);
						$("#marketbook" + marketbookID + " #lblbacksize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "showbetslip('" + marketbook.Runners[j].SelectionId.toString() + "','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price + "','2000','0','" + marketbook.MarketId + "','" + marketbook.MarketBookName + "','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Size + "','" + i + "','0')");
					}
					else {
						$("#marketbook" + marketbookID + " #lblbackprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text("");
						$("#marketbook" + marketbookID + " #lblbackprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "");
						$("#marketbook" + marketbookID + " #lblbacksize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text("");
						$("#marketbook" + marketbookID + " #lblbacksize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "");
					}
				}
				for (i = 0; i < 3; i++) {
					if (marketbook.Runners[j].ExchangePrices.AvailableToLay.length > i && marketbook.Runners[j].ExchangePrices.AvailableToLay.length > 0) {

						$("#marketbook" + marketbookID + " #lbllayprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price == "0" ? "" : marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price);
						$("#marketbook" + marketbookID + " #lbllayprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "showbetslip('" + marketbook.Runners[j].SelectionId.toString() + "','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price + "','2000','0','" + marketbook.MarketId + "','" + marketbook.MarketBookName + "','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Size + "','" + i + "','0')");
						$("#marketbook" + marketbookID + " #lbllaysize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Size == "0" ? "" : marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Size);
						$("#marketbook" + marketbookID + " #lbllaysize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "showbetslip('" + marketbook.Runners[j].SelectionId.toString() + "','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price + "','2000','0','" + marketbook.MarketId + "','" + marketbook.MarketBookName + "','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Size + "','" + i + "','0')");
					}
					else {
						$("#marketbook" + marketbookID + " #lbllayprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text("");
						$("#marketbook" + marketbookID + " #lbllayprice" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "");
						$("#marketbook" + marketbookID + " #lbllaysize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).text("");
						$("#marketbook" + marketbookID + " #lbllaysize" + i.toString() + marketbook.Runners[j].SelectionId.toString()).attr("onclick", "");
					}
				}
				$("#marketbook" + marketbookID + " #lblrunnerlastprice" + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].LastPriceTraded);
				$("#marketbook" + marketbookID + " #runnernamediv" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnerfavorite");
				if (marketbook.Runners[j].StatusStr == "WINNER") {

					$("#marketbook" + marketbookID + " #runnernamediv" + marketbook.Runners[j].SelectionId.toString()).addClass("runnerwinner");
					$("#marketbook" + marketbookID + " #lblSelectionName" + marketbook.Runners[j].SelectionId.toString()).attr('style', 'color: white !important');
					$("#marketbook" + marketbookID + " #lbljockey" + marketbook.Runners[j].SelectionId.toString()).attr('style', 'color: white !important');

					$("#lblfavoritename" + marketbookID).text($("#marketbook" + marketbookID + " #lblSelectionName" + marketbook.FavoriteID).text().toString().trim());
				}
				else {
					if (marketbook.MarketStatusstr != "Closed") {
						$("#lblfavoritename" + marketbookID).text($("#marketbook" + marketbookID + " #lblSelectionName" + marketbook.FavoriteID).text().toString().trim());
					}
				}

				if (marketbook.FavoriteID.toString() == marketbook.Runners[j].SelectionId.toString() && marketbook.Runners[j].StatusStr != "WINNER") {
					$("#marketbook" + marketbookID + " #runnernamediv" + marketbook.Runners[j].SelectionId.toString()).addClass("runnerfavorite");

				}
				if (parseInt(marketbook.Runners[j].ProfitandLoss) >= 0) {
					$("#marketbook" + marketbookID + " #lblprofitandloss" + marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
					$("#marketbook" + marketbookID + " #lblprofitandloss" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
					$("#marketbook" + marketbookID + " #lblaverage" + marketbook.Runners[j].SelectionId.toString()).addClass("runnersaveragegreen");
					$("#marketbook" + marketbookID + " #lblaverage" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnersaveragered");

				}
				else {
					$("#marketbook" + marketbookID + " #lblprofitandloss" + marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
					$("#marketbook" + marketbookID + " #lblprofitandloss" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
					$("#marketbook" + marketbookID + " #lblaverage" + marketbook.Runners[j].SelectionId.toString()).addClass("runnersaveragered");
					$("#marketbook" + marketbookID + " #lblaverage" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnersaveragegreen");
				}
				if (parseInt(marketbook.Runners[j].Loss) >= 0) {
					$("#marketbook" + marketbookID + " #lblloss" + marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
					$("#marketbook" + marketbookID + " #lblloss" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
				}
				else {
					$("#marketbook" + marketbookID + " #lblloss" + marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
					$("#marketbook" + marketbookID + " #lblloss" + marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
				}
				if (marketbook.Runners[j].Average == null) {
					$("#marketbook" + marketbookID + " #lblaverage" + marketbook.Runners[j].SelectionId.toString()).text("");
				}
				else {
					$("#marketbook" + marketbookID + " #lblaverage" + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].Average);
				}
				$("#marketbook" + marketbookID + " #lblprofitandloss" + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ProfitandLoss);
				$("#marketbook" + marketbookID + " #lblloss" + marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].Loss);


			}
			if (marketbook.MarketStatusstr == "In Play") {

				$(".backgroundimageforSuspended").removeClass("backgroundsuspended");
				$(".backgroundimageforSuspended").removeClass("backgroundclosed");
				$(".backgroundimageforSuspended").css({ "display": "none" });

			}
			else {
				if (marketbook.MarketStatusstr == "Suspended") {
					$('#myModalBetslipmultiple').modal('hide');
					$('#simpleBet').hide();
				}
				else {
					if (marketbook.MarketStatusstr == "Active") {

						$(".backgroundimageforSuspended").removeClass("backgroundsuspended");
						$(".backgroundimageforSuspended").removeClass("backgroundclosed");
						$(".backgroundimageforSuspended").css({ "display": "none" });

					}
					else {
						$('#myModalBetslipmultiple').modal('hide');
						$('#simpleBet').hide();
					}
				}
			}
		}
	}

			function AssignDatatoMarketBookFancy(marketbooks){

				var marketbook1= JSON.parse(marketbooks);


				var itemfound=0;

				for(k=0;k<=marketbook1.length-1;k++){
					var marketbook=marketbook1[k];
					var marketbookID=marketbook.MarketId.toString().replace(".","");
					for(j=0;j<=marketbook.Runners.length-1;j++){

						if($("#marketbook"+marketbookID).length==0){
							//debugger;
							//GetActiveMarketFancy();
							return;
						}

						$("#marketbookstatus"+marketbookID).val(marketbook.MarketStatusstr);
						$("#marketbookTotalMatched"+marketbookID).val(marketbook.TotalMatched.toString());
						try{
							if((marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Price > 0 || marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Price > 0) && marketbook.MarketStatusstr=="In Play"){
								$("#marketbook"+marketbookID).show();
								itemfound=1;

								for (i = 2; i >= 0; i--)
								{
									if (marketbook.Runners[j].ExchangePrices.AvailableToBack.length - 1 >= i && marketbook.Runners[j].ExchangePrices.AvailableToBack.length > 0)
									{
										if($("#marketbook"+marketbookID+" #lblbackprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text()!=marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price){
											$("#marketbook"+marketbookID+" #lblbackprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).addClass("highlighted").delay(100).queue(function () {
												$(this).removeClass("highlighted").dequeue();
											});;
										}


										$("#marketbook"+marketbookID+" #lblbackprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price=="0"?"":marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price );
										$("#marketbook"+marketbookID+" #lblbackprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Size+"','"+ i +"','0')");
										if($("#marketbook"+marketbookID+" #lblbacksize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text()!=marketbook.Runners[j].ExchangePrices.AvailableToBack[i].SizeStr){
											$("#marketbook"+marketbookID+" #lblbacksize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).addClass("highlighted").delay(100).queue(function () {
												$(this).removeClass("highlighted").dequeue();
											});;
										}
										$("#marketbook"+marketbookID+" #lblbacksize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToBack[i].SizeStr=="0"?"":marketbook.Runners[j].ExchangePrices.AvailableToBack[i].SizeStr);
										$("#marketbook"+marketbookID+" #lblbacksize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToBack[i].Size+"','"+ i +"','0')");
									}
									else{
										$("#marketbook"+marketbookID+" #lblbackprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text("");
										$("#marketbook"+marketbookID+" #lblbackprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
										$("#marketbook"+marketbookID+" #lblbacksize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text("");
										$("#marketbook"+marketbookID+" #lblbacksize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
									}
								}
								for (i = 0; i < 3; i++)
								{
									if (marketbook.Runners[j].ExchangePrices.AvailableToLay.length > i && marketbook.Runners[j].ExchangePrices.AvailableToLay.length > 0)
									{
										if($("#marketbook"+marketbookID+" #lbllayprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text()!=marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price){
											$("#marketbook"+marketbookID+" #lbllayprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).addClass("highlighted").delay(100).queue(function () {
												$(this).removeClass("highlighted").dequeue();
											});;
										}
										$("#marketbook"+marketbookID+" #lbllayprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price=="0"?"":marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price);
										$("#marketbook"+marketbookID+" #lbllayprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Size+"','"+ i +"','0')");
										if($("#marketbook"+marketbookID+" #lbllaysize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text()!=marketbook.Runners[j].ExchangePrices.AvailableToLay[i].SizeStr){
											$("#marketbook"+marketbookID+" #lbllaysize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).addClass("highlighted").delay(100).queue(function () {
												$(this).removeClass("highlighted").dequeue();
											});;
										}
										$("#marketbook"+marketbookID+" #lbllaysize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ExchangePrices.AvailableToLay[i].SizeStr=="0"?"":marketbook.Runners[j].ExchangePrices.AvailableToLay[i].SizeStr);
										$("#marketbook"+marketbookID+" #lbllaysize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToLay[i].Size+"','"+ i +"','0')");
									}
									else{
										$("#marketbook"+marketbookID+" #lbllayprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text("");
										$("#marketbook"+marketbookID+" #lbllayprice"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
										$("#marketbook"+marketbookID+" #lbllaysize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).text("");
										$("#marketbook"+marketbookID+" #lbllaysize"+i.toString()+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
									}
								}
								$("#marketbook"+marketbookID+" #lblrunnerlastprice"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].LastPriceTraded);
								$("#marketbook"+marketbookID+" #lblrunnertotalmatched"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].TotalMatchedStr==null?"":marketbook.Runners[j].TotalMatchedStr);
								$("#marketbook"+marketbookID+" #runnernamediv"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnerfavorite");

								if(parseInt(marketbook.Runners[j].ProfitandLoss)>=0){
									$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
									$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
								}
								else{
									$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
									$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
								}
								if(parseInt(marketbook.Runners[j].Loss)>=0){
									$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
									$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
								}
								else{
									$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
									$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
								}
								$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ProfitandLoss);
								$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].Loss);

							}

							else{
								$("#marketbook"+marketbookID).hide();
							}
						}
						catch(err){
							$("#marketbook"+marketbookID).hide();
						}
					}
				}
				if(itemfound==1){
					$(".fancybackandlaydiv").show();


				}
				else{
					$(".fancybackandlaydiv").hide();
				}
				if( $("#marketbookdataforshow").css("display")=="block"){
					$("#fancymarketbook").show();
				}
				else{
					$("#fancymarketbook").hide();
				}

	}

	function Hidebetslip()
	{

							$('#simpleBet').hide();
							$('#myModalBetslipmob').modal('hide');

	}

	function AssignDatatoMarketBookFancy2(marketbooks) {

		var marketbook1 = JSON.parse(marketbooks);
		$("#maindata1").html('');
		var html = '';

		var itemfound = 0;

		for (k = 0; k <= marketbook1.length - 1; k++) {
			itemfound = 1;
			var marketbook = marketbook1[k];
			//var marketbookID = marketbook.MarketId.toString().replace(".", "");
			for (j = 0; j <= marketbook.RunnersForindianFancy.length - 1; j++)
			{
				html += ' <input type="hidden" id="marketbookCategory' + marketbook.RunnersForindianFancy[j].MarketBookID.replace(".", "") + '" value="' + marketbook.RunnersForindianFancy[j].TotalMatchedStr + '" />';
				html += '<input type="hidden" id="marketbookstatus ' + marketbook.RunnersForindianFancy[j].MarketBookID.replace(".", "") + '" value="' + marketbook.RunnersForindianFancy[j].StallDraw + '" />';
				//html += '<input type="hidden" id="marketbookallowedbetting ' + marketbook.runnersforindianfancy[j].marketbookid.replace(".", "") + '" value="' + marketbook.runnersforindianfancy[j].bettingallowed + '" />';
				//html += '<input type="hidden" id="marketbookallowedbettingoverall ' + marketbook.runnersforindianfancy[j].marketbookid.replace(".", "") + '" value="' + marketbook.runnersforindianfancy[j].bettingallowed + '" />';

				html += '<div id="marketbook ' + marketbook1[k].MarketId.replace(".", "") + '"  class="marketbook4" data-marketid="' + marketbook1[k].MarketId + '">';
				html += '<div id="selection ' + marketbook.RunnersForindianFancy[j].SelectionId.replace(" ", "") + '" class="col-md-12 pull-left col-sm-12 no-padding runnerswrapper">';

				html += '<div id="runnernamediv ' + marketbook.RunnersForindianFancy[j].SelectionId + '" class="col-md-2 col-sm-8 no-padding runnernamediv" style="display:none">';
				html += '<label style="display:none">' + marketbook.RunnersForindianFancy[j].SelectionId + '</label>';
				html +='</div >';
				html += '<div id="nameProfitandlossdiv">'
				html +='<div id="runnernamediv" class="no-padding runnernamediv runnerswrapper">'

				html +='<label for="chkselection ' + marketbook.RunnersForindianFancy[j].SelectionId + '" data-value="' + marketbook.RunnersForindianFancy[j].SelectionId + '" class="runners runnersname" id="lblSelectionName ' + marketbook.RunnersForindianFancy[j].SelectionId + '" style="float: left">'+ marketbook.RunnersForindianFancy[j].RunnerName+'</label>'

				html += '<div class="bookbutton" onclick="showcompleteduserbetsFacnyIN(' + marketbook.RunnersForindianFancy[j].MarketBookID + ',' + marketbook.RunnersForindianFancy[j].SelectionId + ')"> Book </div>';

				html += '<div class="runnerprofitandlossdivMobile" style="width:0px; display:inline-block">';
				if (marketbook.RunnersForindianFancy[j].ProfitandLoss >= 0) {
					html += '<label id="lblprofitandloss ' + marketbook.RunnersForindianFancy[j].SelectionId + '" class="runnersprofitlossgreenFancy ">' + marketbook.RunnersForindianFancy[j].ProfitandLoss + '</label>';
				}
				else {
					html +='<label id="lblprofitandloss ' + marketbook.RunnersForindianFancy[j].SelectionId + '" class="runnersprofitlossred"> '+marketbook.RunnersForindianFancy[j].ProfitandLoss+' </label>';
				}

				if (marketbook.RunnersForindianFancy[j].Loss >= 0) {
					html +='<label id="lblloss ' + marketbook.RunnersForindianFancy[j].SelectionId + '" class="runnersprofitlossgreenFancy ">' + marketbook.RunnersForindianFancy[j].Loss + '</label >';
				}
				else {
					html += '<label id="lblloss ' + marketbook.RunnersForindianFancy[j].SelectionId + '" class="runnersprofitlossred">' + marketbook.RunnersForindianFancy[j].Loss + '</label>';
				}
				html += '</div>';
				html += '</div>';
				html +='</div>';

				html += '<div id="lastpricebackandlaydiv">';
				html += '<div id="lastpricedivval" class="no-padding runnerlastpricediv">';
				html += '<label id="lblrunnerlastprice ' + marketbook.RunnersForindianFancy[j].SelectionId + '" class="runnerslastprice">' + marketbook.RunnersForindianFancy[j].LastPriceTraded + '</label>';
				html += '<label id="lblrunnertotalmatched ' + marketbook.RunnersForindianFancy[j].SelectionId + ' " class="runnertotalmatch">' + marketbook.RunnersForindianFancy[j].TotalMatched + '</label>';
				html += '</div>';
				if (marketbook.RunnersForindianFancy[j].StatusStr == "Ball Running")
				{
					Hidebetslip();
					html += '<div id="backandlaydivMainINS" class="runnerbackandlaydiv">';
					html += '<label id="lblballrunning" class="suspended">' + marketbook.RunnersForindianFancy[j].StatusStr + ' </label>';
					html += '</div>';
				}

				else {
					if (marketbook.RunnersForindianFancy[j].StatusStr == "SUSPENDED") {
						html += '<div id="backandlaydivMainINS" class="runnerbackandlaydiv">';
						html += '<label id="lblsuspend" class="suspended">' + marketbook.RunnersForindianFancy[j].StatusStr + '</label>';
						html += '</div>';
					}
					else {
						html += '<div id="backandlaydivMainIN" class="no-padding priceandsize matchcolors runnerbackandlaydiv">';
						html += '<div id="backandlaydivthird" class="no-padding">';
						html += '<div class="col-md-4 col-sm-12 no-padding backitem">';
						html += '<label class="selectionprice"></label>';
						html += '<br />';
						html += '<label class="selectionsize"></label>';
						html += '</div>';
						html += '<div class="col-md-4 col-sm-12 no-padding backitem">';
						html += '<label class="selectionprice"></label>';
						html += '<br />';
						html += '<label class="selectionsize"></label>';
						html += '</div>';
						html += '<div class="col-md-4 col-sm-12 no-padding backitem">';
						html +='<label  style="font-size:21px; font-weight:bold" id="lblbackprice ' + marketbook.RunnersForindianFancy[j].SelectionId.replace(" ", "") + '" class="selectionprice" onclick="showbetslip(' + marketbook.RunnersForindianFancy[j].SelectionId.replace(" ", "") + ', "back",' + marketbook.RunnersForindianFancy[j].Backprice + ',"2000","0",' + marketbook.RunnersForindianFancy[j].MarketBookID + ',' + marketbook.RunnersForindianFancy[j].RunnerName + ',' + marketbook.RunnersForindianFancy[j].BackSize + ',"9",' + marketbook.RunnersForindianFancy[j].MarketBookID + ')">' + marketbook.RunnersForindianFancy[j].Backprice + '</label>';
						html += '<br />';
						html += '<label  id="lblbacksize ' + marketbook.RunnersForindianFancy[j].SelectionId.replace(" ", "") + '" class="selectionsize" onclick="showbetslip(' + marketbook.RunnersForindianFancy[j].SelectionId.replace(" ", "") + ', "back", ' + marketbook.RunnersForindianFancy[j].Backprice + ',"2000", "0", ' + marketbook.RunnersForindianFancy[j].MarketBookID + ', ' + marketbook.RunnersForindianFancy[j].RunnerName + ',' + marketbook.RunnersForindianFancy[j].BackSize + ',"9",' + marketbook.RunnersForindianFancy[j].MarketBookID + ')">' + marketbook.RunnersForindianFancy[j].BackSize + '</label>';
						html += '</div>';
						html += '</div>';


						html += '<div id="ExchangePricesmain" class="no-padding">';
						html += '<div id="layitemmain" class="no-padding layitem">';

						html += '<label style="font-size:21px; font-weight:bold" id="lbllayprice ' + marketbook.RunnersForindianFancy[j].SelectionId.replace(" ", "") + '" class="selectionprice" onclick="showbetslip(' + marketbook.RunnersForindianFancy[j].SelectionId.replace(" ", "") + ',"lay",' + marketbook.RunnersForindianFancy[j].Layprice + ',"2000","0",' + marketbook.RunnersForindianFancy[j].MarketBookID + ',' + marketbook.RunnersForindianFancy[j].RunnerName + ',' + marketbook.RunnersForindianFancy[j].LaySize + ',"9",' + marketbook.RunnersForindianFancy[j].MarketBookID + ')">' + marketbook.RunnersForindianFancy[j].Layprice + '</label>';
						html += '<br />';
						html += '<label id="lbllaysize ' + marketbook.RunnersForindianFancy[j].SelectionId.replace(" ", "") + '" class="selectionsize" onclick="showbetslip(' + marketbook.RunnersForindianFancy[j].SelectionId.replace(" ", "") + ',"lay",' + marketbook.RunnersForindianFancy[j].Layprice + ',"2000","0",' + marketbook.RunnersForindianFancy[j].MarketBookID + ',' + marketbook.RunnersForindianFancy[j].RunnerName + ',' + marketbook.RunnersForindianFancy[j].LaySize + ',"9",' + marketbook.RunnersForindianFancy[j].MarketBookID + ')">' + marketbook.RunnersForindianFancy[j].LaySize + '</label>';
						html += '</div>';

						html += '<div id="layitemmain" class="no-padding layitem">';

						html += '<label class="selectionprice"></label>';

						html += '<label class="selectionsize"></label>';
						html += '</div>';

						html += '<div id="layitemmain" class="no-padding layitem">';
						html += '<label class="selectionprice"></label>';

						html += '<label class="selectionsize"></label>';
						html += '</div>';



						html += '</div>';
						html += '</div>';

					}

				}
			}

			$("#maindata1").html(html);


		}

		if (itemfound == 1) {
			$(".fancybackandlaydiv").show();


		}
		else {
			$(".fancybackandlaydiv").hide();
		}
		if ($("#marketbookdataforshow").css("display") == "block") {
			$("#fancymarketbook").show();
		}
		else {
			$("#fancymarketbook").hide();
		}

	}

		function AssignDatatoMarketBookFancyIN(marketbooks) {

		var marketbook1 = JSON.parse(marketbooks);
			var itemfound = 0;

		for (k = 0; k <= marketbook1.length - 1; k++) {
			var marketbook = marketbook1[k];

			for (j = 0; j <= marketbook.RunnersForindianFancy.length - 1; j++) {

				if (marketbook != null) {
					var a = $("#clickedlocation").val();
					if ( marketbook.RunnersForindianFancy[j].StatusStr == "Ball Running" || marketbook.RunnersForindianFancy[j].StatusStr == "Starting soon.") {
						debugger;
						if (a == "9") {
							$('#simpleBet').hide();
							$('#myModalBetslipmob').modal('hide');
						}
					}

				}
			}
		}
	}

	function AssignDatatoMarketBookFigure(marketbooks){

				var marketbook1= JSON.parse(marketbooks);
				var itemfound=0;
				for(k=0;k<=marketbook1.length-1;k++){
					var marketbook=marketbook1[k];
					var marketbookID=marketbook.MarketId.toString().replace(".","");
					for(j=0;j<=marketbook.Runners.length-1;j++)
					{

						if ($("#marketbook" + marketbookID) == null) {

							GetMarketFigure();
							return;
						}

						$("#marketbookstatus"+marketbookID).val(marketbook.MarketStatusstr);
						$("#marketbookTotalMatched"+marketbookID).val(marketbook.TotalMatched.toString());
						try{
							if((marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Price != null || marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Price != null)){
								$("#marketbook" + marketbookID).show();
								debugger;
								itemfound=1;

									if (marketbook.Runners[j].ExchangePrices.AvailableToBack.length  > 0 && marketbook.Runners[j].ExchangePrices.AvailableToBack.length > 0)
									{
											$("#marketbook"+marketbookID+" #lblbackprice"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Size+"','8','0')");
											$("#marketbook"+marketbookID+" #lblbacksize"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Size+"','8','0')");
									}
									else{
										$("#marketbook"+marketbookID+" #lblbackprice"+ marketbook.Runners[j].SelectionId.toString()).text("");
										$("#marketbook"+marketbookID+" #lblbackprice"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
										$("#marketbook"+marketbookID+" #lblbacksize"+ marketbook.Runners[j].SelectionId.toString()).text("");
										$("#marketbook"+marketbookID+" #lblbacksize"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
									}


									if (marketbook.Runners[j].ExchangePrices.AvailableToLay.length > 0 && marketbook.Runners[j].ExchangePrices.AvailableToLay.length > 0)
									{
											$("#marketbook"+marketbookID+" #lbllayprice"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Size+"','8','0')");
											$("#marketbook"+marketbookID+" #lbllaysize"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Size+"','8','0')");
									}
									else{
										$("#marketbook"+marketbookID+" #lbllayprice"+ marketbook.Runners[j].SelectionId.toString()).text("");
										$("#marketbook"+marketbookID+" #lbllayprice"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
										$("#marketbook"+marketbookID+" #lbllaysize"+ marketbook.Runners[j].SelectionId.toString()).text("");
										$("#marketbook"+marketbookID+" #lbllaysize"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
									}

								$("#marketbook"+marketbookID+" #lblrunnerlastprice"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].LastPriceTraded);
								$("#marketbook"+marketbookID+" #lblrunnertotalmatched"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].TotalMatchedStr==null?"":marketbook.Runners[j].TotalMatchedStr);
								$("#marketbook"+marketbookID+" #runnernamediv"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnerfavorite");

								if(parseInt(marketbook.Runners[j].ProfitandLoss)>=0){
									$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
									$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
								}
								else{
									$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
									$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
								}
								if(parseInt(marketbook.Runners[j].Loss)>=0){
									$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
									$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
								}
								else{
									$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
									$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
								}
								$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ProfitandLoss);
								$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].Loss);

							}

							else{
								$("#marketbook"+marketbookID).hide();
							}
						}
						catch(err){
							$("#marketbook"+marketbookID).hide();
						}
					}
					debugger;
				}
				if(itemfound==1){
					$("Figurefancymarketbook").show();
				}
				else{
				$("#Figurefancymarketbook").html("");
				}

				if( $("#marketbookdataforshow").css("display")=="block"){
					$("#Figurefancymarketbook").show();
				}
				else{
					$("#Figurefancymarketbook").hide();
				}

			}


	function AssignDatatoMarketBookSFIg(marketbooks){


		var marketbook2= JSON.parse(marketbooks);
		var previous=[];
		previous=$(".marketbook3");
	var current=[];
	current=marketbook2.map(x=>{ return (x.MarketId+"").replace(".","")});
	previous.each(function(){

		var myID=$(this).attr("id").replace("marketbook","");
		if(current.indexOf(myID)<0){
			$(this).remove();
		}
	})

	var itemfound=0;
	for(k=0;k<=marketbook2.length-1;k++){
		var marketbook=marketbook2[k];
		var marketbookID=marketbook.MarketId.toString().replace(".","");
		for(j=0;j<=marketbook.Runners.length-1;j++)
		{

			if($("#marketbook"+marketbookID).length==0){

				GetActiveMarketSFIg();
				return;
			}
			$("#marketbookstatus"+marketbookID).val(marketbook.MarketStatusstr);
			//$("#marketbookTotalMatched"+marketbookID).val(marketbook.TotalMatched.toString());
			try{
				if ((marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Price != null || marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Price != null))
				{
						$("#marketbook"+marketbookID).show();
						itemfound=1;

						if (marketbook.Runners[j].ExchangePrices.AvailableToBack.length  > 0 && marketbook.Runners[j].ExchangePrices.AvailableToBack.length > 0)
						{
								$("#marketbook"+marketbookID+" #lblbackprice"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Size+"','8','0')");
						    	$("#marketbook"+marketbookID+" #lblbacksize"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Size+"','8','0')");
						}
						else{
							$("#marketbook"+marketbookID+" #lblbackprice"+ marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook"+marketbookID+" #lblbackprice"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
							$("#marketbook"+marketbookID+" #lblbacksize"+ marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook"+marketbookID+" #lblbacksize"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
						}


						if (marketbook.Runners[j].ExchangePrices.AvailableToLay.length > 0 && marketbook.Runners[j].ExchangePrices.AvailableToLay.length > 0)
						{
								$("#marketbook"+marketbookID+" #lbllayprice"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Size+"','8','0')");
								$("#marketbook"+marketbookID+" #lbllaysize"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Size+"','8','0')");
						}
						else{
							$("#marketbook"+marketbookID+" #lbllayprice"+ marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook"+marketbookID+" #lbllayprice"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
							$("#marketbook"+marketbookID+" #lbllaysize"+ marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook"+marketbookID+" #lbllaysize"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
						}


						if(parseInt(marketbook.Runners[j].ProfitandLoss)>=0){
							$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
							$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
						}
						else{
							$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
							$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
						}
						if(parseInt(marketbook.Runners[j].Loss)>=0){
							$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
							$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
						}
						else{
							$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
							$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
						}
						$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ProfitandLoss);
						$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].Loss);

					}

					else{
						$("#marketbook"+marketbookID).hide();
					}
				}
				catch(err){
					$("#marketbook"+marketbookID).hide();
				}
		}
	}
	if(itemfound==1){
		$(".fancybackandlaydiv").show();
	}
	else{
		$("#SFigfancymarketbook").html("");
	}

	if( $("#marketbookdataforshow").css("display")=="block"){
		$("#SFigfancymarketbook").show();
	}
	else{
		$("#SFigfancymarketbook").hide();
	}

}

     function AssignDatatoMarketBookKJ(marketbooks){

		var marketbook1= JSON.parse(marketbooks);
		var previous=[];
		previous=$(".marketbook2");
	var current=[];
	current=marketbook1.map(x=>{ return (x.MarketId+"").replace(".","")});
	previous.each(function(){

		var myID=$(this).attr("id").replace("marketbook","");
		if(current.indexOf(myID)<0){
			$(this).remove();
		}
	})

		var itemfound=0;
		for(k=0;k<=marketbook1.length-1;k++){
			var marketbook=marketbook1[k];
			var marketbookID=marketbook.MarketId.toString().replace(".","");
			for(j=0;j<=marketbook.Runners.length-1;j++)
			{
				if($("#marketbook"+marketbookID).length==0){
					GetActiveMarketKJ();
					return;
				}
				$("#marketbookstatus"+marketbookID).val(marketbook.MarketStatusstr);
				$("#marketbookTotalMatched"+marketbookID).val(marketbook.TotalMatched.toString());
				try{
					if((marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Price != null || marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Price != null)){
						$("#marketbook"+marketbookID).show();
						itemfound=1;

						if (marketbook.Runners[j].ExchangePrices.AvailableToBack.length  > 0 && marketbook.Runners[j].ExchangePrices.AvailableToBack.length > 0)
						{
								$("#marketbook"+marketbookID+" #lblbackprice"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Size+"','8','0')");
								$("#marketbook"+marketbookID+" #lblbacksize"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','back','" + marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToBack[0].Size+"','8','0')");
						}
						else{
							$("#marketbook"+marketbookID+" #lblbackprice"+ marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook"+marketbookID+" #lblbackprice"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
							$("#marketbook"+marketbookID+" #lblbacksize"+ marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook"+marketbookID+" #lblbacksize"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
						}


						if (marketbook.Runners[j].ExchangePrices.AvailableToLay.length > 0 && marketbook.Runners[j].ExchangePrices.AvailableToLay.length > 0)
						{
								$("#marketbook"+marketbookID+" #lbllayprice"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Size+"','8','0')");
								$("#marketbook"+marketbookID+" #lbllaysize"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","showbetslip('"+marketbook.Runners[j].SelectionId.toString() +"','lay','" + marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Price + "','2000','0','"+marketbook.MarketId+"','"+marketbook.MarketBookName+"','"+marketbook.Runners[j].ExchangePrices.AvailableToLay[0].Size+"','8','0')");
						}
						else{
							$("#marketbook"+marketbookID+" #lbllayprice"+ marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook"+marketbookID+" #lbllayprice"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
							$("#marketbook"+marketbookID+" #lbllaysize"+ marketbook.Runners[j].SelectionId.toString()).text("");
							$("#marketbook"+marketbookID+" #lbllaysize"+ marketbook.Runners[j].SelectionId.toString()).attr("onclick","");
						}

						$("#marketbook"+marketbookID+" #lblrunnerlastprice"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].LastPriceTraded);
						$("#marketbook"+marketbookID+" #lblrunnertotalmatched"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].TotalMatchedStr==null?"":marketbook.Runners[j].TotalMatchedStr);
						$("#marketbook"+marketbookID+" #runnernamediv"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnerfavorite");

						if(parseInt(marketbook.Runners[j].ProfitandLoss)>=0){
							$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
							$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
						}
						else{
							$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
							$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
						}
						if(parseInt(marketbook.Runners[j].Loss)>=0){
							$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossgreen");
							$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossred");
						}
						else{
							$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).addClass("runnersprofitlossred");
							$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).removeClass("runnersprofitlossgreen");
						}
						$("#marketbook"+marketbookID+" #lblprofitandloss"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].ProfitandLoss);
						$("#marketbook"+marketbookID+" #lblloss"+marketbook.Runners[j].SelectionId.toString()).text(marketbook.Runners[j].Loss);

					}

					else{
						$("#marketbook"+marketbookID).hide();
					}
				}
				catch(err){
					$("#marketbook"+marketbookID).hide();
				}
			}
		}
		if(itemfound==1){
			$(".fancybackandlaydiv").show();
		}
		else{
			$("#KJfancymarketbook").html("");
		}

		if( $("#marketbookdataforshow").css("display")=="block"){
			$("#KJfancymarketbook").show();
		}
		else{
			$("#KJfancymarketbook").hide();
		}

	}

			function round(value, decimals) {
				return Number(Math.round(value+'e'+decimals)+'e-'+decimals);
			}
			function GetAmountformultiplebetbySelectionID(selectionID){

				if($("#betsliptype").val() == 'back'){
					var odd = $("#betslipbackmultiplejori").text();
					var amount = $("#betslipamountmultiple").val();
					var totamount=(parseFloat(odd) * parseFloat(amount)).toFixed("2");
					var currentoddbyselectionID=$("#lblbackprice0"+selectionID).text().toString().trim();
					var amountforcurrentodd = ((100 / parseFloat(currentoddbyselectionID)) * totamount) / 100;
				}

			}

			function GenerateHTMLForMultipleRunners(){

				var marketbookdID= $("#lastloadedmarket").val().toString().replace(".","");
				var selectedrunners= $("#selectedrunners"+marketbookdID).val();

				if (selectedrunners !=""){
					selectedrunners = JSON.parse(selectedrunners);

					var htmlstr="";
					var htmlstrmb="";
					for(i=0;i<=selectedrunners.length-1;i++)
					{
						htmlstr+='<div class="col-md-3 no-padding betslipselections">';
						htmlstrmb+='<div class="col-md-3  betslipselections">';
						if (i==0)
						{
							htmlstr += '<label id="lblbetsliprunnername' + selectedrunners[i] + '">' + $("#lblSelectionClothnumber" + selectedrunners[i]).text()+'</label>';
							htmlstr +='</div>';


						}
						else
						{
							htmlstr += "+";
							htmlstr += '<label id="lblbetsliprunnername' + selectedrunners[i] + '">' + $("#lblSelectionClothnumber" + selectedrunners[i]).text()+'</label>';
							htmlstr +='</div>';


						}
					}
					$("#betslipmultiplerunners").html(htmlstr);

           var htmlstrmb="";
            for(i=0;i<=selectedrunners.length-1;i++){


                htmlstrmb+='<div class="col-md-12 no-padding">';
                htmlstrmb+='<div class="col-md-6  betslipselectionnamemb"  >';
                htmlstrmb+='<label id="lblbetsliprunnernamemb' + selectedrunners[i] + '">'+$("#lblSelectionName"+selectedrunners[i]).text() + '</label>';

                htmlstrmb+='</div>';
                htmlstrmb+='<div class="col-md-3  betslipoddmb">';
                htmlstrmb+='<label id="lblbetslipbackoddmb' + selectedrunners[i] + '">'+ $("#marketbook"+marketbookdID+" #lblbackprice0"+selectedrunners[i]).text().toString().trim()+'</label>';
                htmlstrmb+='</div>';
                htmlstrmb+='<div class="col-md-3  betslipoddmb">';
                htmlstrmb+='<label id="lblbetsliplayoddmb' + selectedrunners[i] + '">'+ $("#marketbook"+marketbookdID+" #lbllayprice0"+selectedrunners[i]).text().toString().trim()+'</label>';
                htmlstrmb+='</div>';
                htmlstrmb+='</div>';
            }
					$("#betslipmultiplerunnersmb").html(htmlstrmb);

				}
			}

			function SetSelectedRunners(){
				var marketbookdID= $("#lastloadedmarket").val().toString().replace(".","");
				var selectedrunners= $("#selectedrunners"+marketbookdID).val();
				var selectedClothnumbers=$("#selectedrunnersclothnumber"+marketbookdID).val();
				if (selectedrunners !="" && selectedrunners != undefined){
					$(".favoriteselection").show();
					$("#aJoriBet").show();

					selectedrunners = JSON.parse(selectedrunners);
					selectedClothnumbers = JSON.parse(selectedClothnumbers);
					GenerateHTMLForMultipleRunners();
					var bettype="back";
					var lastoddback=$("#marketbook"+marketbookdID+" #lblbackprice0"+selectedrunners[0]).text().toString().trim();
					$("#lblbetslipbackodd"+selectedrunners[0]).text(lastoddback);
					lastoddback=parseFloat(lastoddback)-1;
					var lastoddlay=$("#marketbook"+marketbookdID+" #lbllayprice0"+selectedrunners[0]).text().toString().trim();
					$("#lblbetsliplayodd"+selectedrunners[0]).text(lastoddlay);
					lastoddlay=parseFloat(lastoddlay)-1;
					var selectionname="";

					if(selectedClothnumbers[0] ==""){

						var selectionnameactual=$("#marketbook"+marketbookdID+" #lblSelectionName"+selectedrunners[0]).text().toString().trim().split(".");
						selectionname=selectionnameactual[0];

					}
					else{
						selectionname=selectedClothnumbers[0];
					}


					if(lastoddback < 0){
						lastoddback=0;
					}
					if (lastoddlay < 0){
						lastoddlay=0;
					}

					for(i=0; i <= selectedrunners.length-1; i++) {
						$("#chkselection"+selectedrunners[i]).prop("checked",true);

						if ( i+1 < selectedrunners.length){

							var currentrunneroddback=$("#marketbook"+marketbookdID+" #lblbackprice0"+selectedrunners[i+1]).text().toString().trim();
							$("#lblbetslipbackodd"+selectedrunners[i+1]).text(currentrunneroddback);
							currentrunneroddback=parseFloat(currentrunneroddback)-1;

							var currentrunneroddlay=$("#marketbook"+marketbookdID+" #lbllayprice0"+selectedrunners[i+1]).text().toString().trim();
							$("#lblbetsliplayodd"+selectedrunners[i+1]).text(currentrunneroddlay);
							currentrunneroddlay=parseFloat(currentrunneroddlay)-1;
							var equation1back=(parseFloat(lastoddback)+currentrunneroddback)+2;
							var equation2back=(parseFloat(lastoddback)*currentrunneroddback)-1;

							lastoddback=round(equation2back/equation1back,2).toFixed(2);
							if (lastoddback=="NaN" || lastoddback <= 0){
								lastoddback="0.00";
							}
							var equation2lay=(parseFloat(lastoddlay)* currentrunneroddlay)-1;
							var equation1lay=(parseFloat(lastoddlay)+ currentrunneroddlay)+2;
							lastoddlay=round(equation2lay/equation1lay,2).toFixed(2);
							if (lastoddlay=="NaN" || lastoddlay <= 0){
								lastoddlay="0.00";
							}
							if(selectedClothnumbers[i+1] ==""){
								var selectionnameactual=$("#marketbook"+marketbookdID+" #lblSelectionName"+selectedrunners[i+1]).text().toString().trim().split(".");
								selectionname=selectionname+"+"+selectionnameactual[0];

							}
							else{
								selectionname=selectionname+"+"+ selectedClothnumbers[i+1];
							}

							var marketbookdID= $("#lastloadedmarket").val().toString().replace(".","");
							$("#lblfavoritename" + marketbookdID).text(selectionname);
							$("#lblfavoritename"+marketbookdID).css({"text-align":"center"});
							$("#lblfavoritebackprice"+marketbookdID).text(lastoddback);
							$("#betslipbackmultiplejori").text(lastoddback);
							$("#betsliplaymultiplejori").text(lastoddlay);
							$("#betslipbackmultiplemb").text(lastoddback);
							$("#betsliplaymultiplemb").text(lastoddlay);
							calculateamountsmultiple();
							$("#lblfavoritelayprice"+marketbookdID).text(lastoddlay);
							$("#lblfavoritebacksize"+marketbookdID).text($("#marketbook"+marketbookdID+" #lblbacksize0"+selectedrunners[i+1]).text().toString().trim());
							$("#lblfavoritelaysize"+marketbookdID).text($("#marketbook"+marketbookdID+" #lbllaysize0"+selectedrunners[i+1]).text().toString().trim());

						}
					}

				}
				else {
					$(".favoriteselection").hide();
					$("#aJoriBet").hide();
					$("#lblfavoritename"+marketbookdID).css({"text-align":"center"});
				}

			}
			function AddRunnersforaveragecal(id){
				var marketbbokname=$("#marketbookname"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				var marketbookdID= $("#lastloadedmarket").val().toString().replace(".","");
				var mainsportcat=$("#marketbookCategory"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				var chkid=$("#marketbook"+marketbookdID +" #chkselectionforaverage"+id).prop("checked");

				var selectedrunners= $("#selectedrunnersforavg"+marketbookdID).val();
				//debugger;
				if (chkid==true){

					if (selectedrunners==""){
						var runnersarr=[];
						runnersarr.push(id);
						$("#selectedrunnersforavg"+marketbookdID).val(JSON.stringify(runnersarr));

					}
					else{
						selectedrunners = JSON.parse(selectedrunners);
						selectedrunners.push(id);

						$("#selectedrunnersforavg"+marketbookdID).val(JSON.stringify(selectedrunners));

					}


				}
				else{

					if (selectedrunners !=""){
						selectedrunners = JSON.parse(selectedrunners);

					}
					for(var i = selectedrunners.length; i--;) {
						if(selectedrunners[i] === id) {
							selectedrunners.splice(i, 1);

							break;
						}
					}
					if (selectedrunners.length > 0){

						$("#selectedrunnersforavg"+marketbookdID).val(JSON.stringify(selectedrunners));

					}
					else{
						$("#selectedrunnersforavg"+marketbookdID).val("");

					}

				}


			}
			function AddRunnersforaveragecalTWT(id){
				var marketbbokname=$("#marketbookname"+$("#lastloadedmarketTWT").val().toString().replace(".","")).val();
				var marketbookdID= $("#lastloadedmarketTWT").val().toString().replace(".","");
				var mainsportcat=$("#marketbookCategory"+$("#lastloadedmarketTWT").val().toString().replace(".","")).val();
				var chkid=$("#marketbook"+marketbookdID +" #chkselectionforaverage"+id).prop("checked");

				var selectedrunners= $("#selectedrunnersforavg"+marketbookdID).val();
				//debugger;
				if (chkid==true){

					if (selectedrunners==""){
						var runnersarr=[];
						runnersarr.push(id);
						$("#selectedrunnersforavg"+marketbookdID).val(JSON.stringify(runnersarr));

					}
					else{
						selectedrunners = JSON.parse(selectedrunners);
						selectedrunners.push(id);

						$("#selectedrunnersforavg"+marketbookdID).val(JSON.stringify(selectedrunners));

					}


				}
				else{

					if (selectedrunners !=""){
						selectedrunners = JSON.parse(selectedrunners);

					}
					for(var i = selectedrunners.length; i--;) {
						if(selectedrunners[i] === id) {
							selectedrunners.splice(i, 1);

							break;
						}
					}
					if (selectedrunners.length > 0){

						$("#selectedrunnersforavg"+marketbookdID).val(JSON.stringify(selectedrunners));

					}
					else{
						$("#selectedrunnersforavg"+marketbookdID).val("");

					}

				}


			}
	function AddRunnersformultiplebets(id) {
		debugger;
				var marketbbokname=$("#marketbookname"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				var marketbookdID= $("#lastloadedmarket").val().toString().replace(".","");
				var mainsportcat=$("#marketbookCategory"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				if (marketbbokname.indexOf("To Be Placed")>=0 || mainsportcat.indexOf("Racing")< 0){
					$("#marketbook"+marketbookdID +" #chkselection"+id).prop("checked",false);
					// $("#marketbook"+marketbookdID +" #clothnumstalldrawimg"+id).css({"background-color":"white"});
					return;
				}

				var marketstatus = $("#marketbookstatus" + marketbookdID).text();

		if (marketstatus == "SUSPENDED" || marketstatus == "MARKET CLOSED"){
					$("#marketbook"+marketbookdID +" #chkselection"+id).prop("checked",false);
					 $("#marketbook"+marketbookdID +" #clothnumstalldrawimg"+id).css({"background-color":"white"});
					return;
				}
				var chkid=$("#marketbook"+marketbookdID +" #chkselection"+id).prop("checked");

				var selectedrunners= $("#selectedrunners"+marketbookdID).val();
				var selectedClothnumbers=$("#selectedrunnersclothnumber"+marketbookdID).val();

				if (chkid==true){
					$("#marketbook"+marketbookdID+ " #selection"+id).addClass("runnerselectedhorse");
					if (selectedrunners==""){
						var runnersarr=[];
						runnersarr.push(id);
						var runnerclothes=[];
						$("#lblSelectionClothnumber"+id).text();
						runnerclothes.push($("#lblSelectionClothnumber"+id).text());
						$("#selectedrunners"+marketbookdID).val(JSON.stringify(runnersarr));
						$("#selectedrunnersclothnumber"+marketbookdID).val(JSON.stringify(runnerclothes));
					}
					else{
						selectedrunners = JSON.parse(selectedrunners);
						selectedrunners.push(id);
						selectedClothnumbers = JSON.parse(selectedClothnumbers);
						selectedClothnumbers.push($("#lblSelectionClothnumber"+id).text());
						$("#selectedrunners"+marketbookdID).val(JSON.stringify(selectedrunners));
						$("#selectedrunnersclothnumber"+marketbookdID).val(JSON.stringify(selectedClothnumbers));
					}


				}
				else{
					$("#marketbook"+marketbookdID+ " #selection"+id).removeClass("runnerselectedhorse");
					if (selectedrunners !=""){
						selectedrunners = JSON.parse(selectedrunners);
						selectedClothnumbers = JSON.parse(selectedClothnumbers);
					}
					for(var i = selectedrunners.length; i--;) {
						if(selectedrunners[i] === id) {
							selectedrunners.splice(i, 1);
							selectedClothnumbers.splice(i,1);
							break;
						}
					}
					if (selectedrunners.length > 0){

						$("#selectedrunners"+marketbookdID).val(JSON.stringify(selectedrunners));
						$("#selectedrunnersclothnumber"+marketbookdID).val(JSON.stringify(selectedClothnumbers));
					}
					else{
						$("#selectedrunners"+marketbookdID).val("");
						$("#selectedrunnersclothnumber"+marketbookdID).val("");
					}

				}

				// $("#selectedrunnersformultiplebets")
			}
			function LoadMarketTypeandUserBetsAgent() {
				$("#lastsavedhtml").val($("div[data-marketid='" + $("#lastloadedmarket").val() + "']").html());
				$.when($.ajax({
					url: '/Market/LoadActiveMarket/',

					type: 'GET',
					async:true,
					data: { 'ID':  $("#lastloadedmarket").val() },
				}), $.ajax({
					url: '/UserBet/UserBets',
					type: 'GET',
					async: true,

				})).then(function (res1, res2) {

					$("div[data-marketid='" + $("#lastloadedmarket").val() + "']").html(res1[0]);

					if ($("#lastsavedhtml").val().trim() == "") {
						$("#lastsavedhtml").val($("div[data-marketid='" + $("#lastloadedmarket").val() + "']").html());
					}
					comparemarketbook();


					$("#userbets").html(res2[0]);
					LoadMarketTypeandUserBetsAgent();
				});
			}
			var isfirstclick=true;
	function triggerchangemethod(id, marketbookid) {
		debugger;

				var check=  $("#marketbook"+marketbookid +" #chkselection"+id).prop("checked");
				if(check==true){
					$("#marketbook"+marketbookid +" #chkselection"+id).prop("checked",false);
					// $("#marketbook"+marketbookid +" #clothnumstalldrawimg"+id).css({"background-color":"white"});

				}
				else{
					$("#marketbook"+marketbookid +" #chkselection"+id).prop("checked",true    );
					//  $("#marketbook"+marketbookid +" #clothnumstalldrawimg"+id).css({"background-color":"white"});
				}
				AddRunnersformultiplebets(id);

			}
			var isInserting = false;
			function LoadDefaultPage() {

				ShowLoader();
				var partialviewname = "/DashBoard/GetDefaultPageData";
				$("#otherdata").load(partialviewname, function () {
					$("#marketdataall").hide();
					$("#otherdata").show();
					$("#partialviews").show();
					HideLoader();
				});
				$(".usernameandliablity").removeClass("in");
				$(".usernameandliablity").addClass("collapse");
			}
			function LoadDefaultPageInPlay(viewtype) {

				ShowLoader();
				var partialviewname = "/DashBoard/GetDefaultPageDataInPlay?ViewType="+viewtype;
				$("#otherdata").load(partialviewname, function () {
					$("#marketdataall").hide();
					$("#otherdata").show();
					$("#partialviews").show();
					HideLoader();


				});
				$(".usernameandliablity").removeClass("in");
				$(".usernameandliablity").addClass("collapse");
			}
			function showsubmenus(){
				$("#inplayul li").find("ul").css("display","none");
				$("#inplayul li").first("ul").css("display","none");

			}
			$(document).ready(function () {
				LoadDefaultPage();
				$("#cdialog").dialog({
					modal: true,
					bgiframe: true,
					width: $(window).width()-25,
					height: 150,
					autoOpen: false
				});



				$("#sidebar").insertAfter(".mainheaderdiv");
				$("#sidebar").height($(window).height());

				//LoadUserBets();

				SetFirstItemActive("");

				if(fromclicklocation=="footer"){
					{
						$(".maincategory-sports").show();
						$(".usernameandliablity").hide();
						$("#partialviews").hide();

					}

				}


				function LoadMarketTypeandUserBets() {
					debugger;
					$.when($.ajax({
						url: '/Market/MarketBook/',

						type: 'GET',

						data: { 'ID': "" },
					}), $.ajax({
						url: '/Market/UserBets',
						type: 'GET',
						async: true,

					})).then(function (res1, res2) {

						$("#marketbook").html(res1[0]);

						if ($("#lastsavedhtml").val().trim() == "") {
							$("#lastsavedhtml").val($("#marketbook").html());
						}
						comparemarketbook();
						SetFirstItemActive($("#lastloadedmarket").val());
						$("#userbets").html(res2[0]);
						LoadMarketTypeandUserBets();
					});
				}

				function StartUserbetsLoading() {
					if (@LoggedinUserDetail.GetUserTypeID()==3){
						setInterval(function () {

							var totcount = $(".unmatched-bets .bets-items").length;
							if (totcount > 0) {
								LoadUserBets();
							}

						}, 1000);
					}

				}
				function StartUserbetsLoadingAgent() {
					if (@LoggedinUserDetail.GetUserTypeID()!=3){
						setInterval(function () {
							LoadUserBetsforAgent();

						}, 1000)
					}

				}
				function StartMarketLoading() {
					setInterval(function () {

					}, 0);
				}

				$(".amountbutton input[type='button']").click(function () {

					//var betlowerlimit=setBetslipamountlowerlimit();
					//if(betlowerlimit ==$("#betslipamount").val()){
					//    $("#betslipamount").val('0');
					//}
					if(isInserting==true){
						return;
					}
					if(isfirstclick==true){
						$("#betslipamount").val('0');
					}
					if ($(this).val().indexOf('+') >= 0) {
						var newamount = parseFloat($("#betslipamount").val()) + parseFloat($(this).attr("data-value"));
						$("#betslipamount").val(newamount);
					}
					else {
						$("#betslipamount").val($(this).attr("data-value"));
					}
					isfirstclick=false;
					calculateamounts();

				});

				$(".amountbuttonIN input[type='button']").click(function () {

					//var betlowerlimit=setBetslipamountlowerlimit();
					//if(betlowerlimit ==$("#betslipamount").val()){
					//    $("#betslipamount").val('0');
					//}
					if(isInserting==true){
						return;
					}
					if(isfirstclick==true){
						$("#betslipamountIN").val('0');
					}
					if ($(this).val().indexOf('+') >= 0) {
						var newamount = parseFloat($("#betslipamountIN").val()) + parseFloat($(this).attr("data-value"));
						$("#betslipamountIN").val(newamount);
					}
					else {
						$("#betslipamountIN").val($(this).attr("data-value"));
					}
					isfirstclick=false;
					calculateamountsIN();

				});


				$(".amountbuttonmultiple input[type='button']").click(function () {
					if(isInserting==true){
						return;
					}
					if(isfirstclick==true){
						$("#betslipamountmultiple").val('0');
						$("#betslipamountmultiplemb").val('0');
					}
					if ($(this).val().indexOf('+') >= 0) {
						var newamount = parseFloat($("#betslipamountmultiple").val()) + parseFloat($(this).attr("data-value"));
						$("#betslipamountmultiple").val(newamount);
						$("#betslipamountmultiplemb").val(newamount);
					}
					else {
						$("#betslipamountmultiple").val($(this).attr("data-value"));
					$("#betslipamountmultiplemb").val($(this).attr("data-value"));
					}
					isfirstclick=false;
					calculateamountsmultiple();

				});
				$("#btnBetslipClose").click(function () {
					isfirstclick=true;
				});

				$("#btnBetslipClosemultiple").click(function () {
					isfirstclick=true;
				});

				$("#betslipback").click(function () {
					if(isInserting==true){
						return;
					}
					if ($("#betsliptype").val() == 'back') {
						var value = $("#betslipback").text().trim();
						$("#betslipodd").val(value);
						calculateamounts();
					}

				});
				$("#betsliplay").click(function () {
					if(isInserting==true){
						return;
					}
					if ($("#betsliptype").val() == 'lay') {
						var value = $("#betsliplay").text().trim();
						$("#betslipodd").val(value);
						calculateamounts();
					}
				});

				$("#btnslipclose").click(function () {
					$("#myModalBetslipmob").modal("hide");
				});

				$("#btnBetslipsubmitmob").click(function ()
				{
					debugger;
					isfirstclick=true;
					$("#btnBetslipsubmitmob").prop('disabled', true);


					var betamounttobeplaced=parseFloat($("#betslipamountmob").val().trim());
					var lowerbetlimit= 2000;
					var betupperlimit=500000;

					var marketbookID=  $("#loadedmarketbook").val().toString().replace(".","");
					$(".loadingimg").show();
					var categoryname = $("#marketbookCategory" + marketbookID).val();
					if (categoryname == undefined || categoryname=="") {
						categoryname = "Fancy";
						$(".loadingimg").hide();
					}


					var marketbookname= $("#loadedmarketbookname").val();
					var marketbookrunners=$("#marketbookrunners"+marketbookID).val();
					//debugger;
					if (categoryname == "Fancy"){
						lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitFancy();
						betupperlimit=@LoggedinUserDetail.GetBetUpperLimitFancy();
					}
					else{
						if (categoryname.indexOf("Horse Racing")>=0 && marketbookname.indexOf("To Be Placed")< 0){
							lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimit();
							betupperlimit=@LoggedinUserDetail.GetBetUpperLimit();
						}
						else{
							if (categoryname.indexOf("Horse Racing")>=0 && marketbookname.indexOf("To Be Placed")>=0){
								lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitHorsePlace();
								betupperlimit=@LoggedinUserDetail.GetBetUpperLimitHorsePlace();
							}
							else{
								if (categoryname.indexOf("Greyhound Racing")>=0 && marketbookname.indexOf("To Be Placed")>=0){
									lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitGrayHoundPlace();
									betupperlimit=@LoggedinUserDetail.GetBetUpperLimitGrayHoundPlace();
								}
								else{
									if (categoryname.indexOf("Greyhound Racing")>=0 && marketbookname.indexOf("To Be Placed")< 0){
										lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitGrayHoundWin();
										betupperlimit=@LoggedinUserDetail.GetBetUpperLimitGrayHoundWin();
									}
									else{
										if (marketbookname.indexOf("Completed Match")>=0){
											lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitCompletedMatch();
											betupperlimit=@LoggedinUserDetail.GetBetUpperLimitCompletedMatch();
										}
										else{
											if (marketbookname.indexOf("Innings Runs")>=0 ||marketbookname.indexOf("Inns Runs")>=0){
												lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitInningsRuns();
												betupperlimit=@LoggedinUserDetail.GetBetUpperLimitInningsRuns();
											}
											else{
												if(categoryname=="Tennis"){
													lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOddsTennis();
													betupperlimit=@LoggedinUserDetail.GetBetUpperLimitMatchOddsTennis();
												}
												else{
													if(categoryname=="Soccer"){
														lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOddsSoccer();
														betupperlimit=@LoggedinUserDetail.GetBetUpperLimitMatchOddsSoccer();
													}
													else{
														if (marketbookname.indexOf("Tied Match")>=0){
															lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitTiedMatch();
															betupperlimit=@LoggedinUserDetail.GetBetUpperLimitTiedMatch();
														}
														else{
															if (marketbookname.indexOf("Winner")>=0 || marketbookname.indexOf("To Win the Toss")>=0){
																lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitWinner();
																betupperlimit=@LoggedinUserDetail.GetBetUpperLimitWinner();
															}
															else{
																lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOdds();
																betupperlimit=@LoggedinUserDetail.GetBetUpperLimitMatchOdds();
															}
														}

													}
												}

											}
										}
									}
								}
							}
						}
					}

					var alreadypendingamount=0;
					$(".unmatched-bets .bets-items").each(function(){
						alreadypendingamount+=parseFloat($(this).attr("data-amount"));
					});
					if(alreadypendingamount >= betupperlimit){
						ShowErrorMsg("Already reached to limit. Please cancel any unmatch bet.");
						$("#btnBetslipsubmitmob").prop('disabled', false);
						$("#btnBetslipReset").prop('disabled', false);
						HideLoader();
						return;
					}
					if (betamounttobeplaced < lowerbetlimit || betamounttobeplaced > betupperlimit ) {
						ShowErrorMsg("Amount should not be less than " + lowerbetlimit +" and greater than "+ betupperlimit +".");
						$("#btnBetslipsubmitmob").prop('disabled', false);
						$("#btnBetslipReset").prop('disabled', false);
						HideLoader();
						return;
					}


					var selectionIDs1=[];
					selectionIDs1.push($("#openedbetslipid").val());
					var betamount=0;
					if(categoryname=="Fancy")
					{
						var odd1=$("#clickedbetsize").val();
						$.ajax({
							url: '/UserBet/CheckforPlaceBet',

							type: 'POST',
							async:false,
							data: { 'Amount': $("#betslipamountlabelmob").text().trim(), 'Odd':odd1, 'BetType': $("#betsliptype").val(), 'SelectionID': selectionIDs1,'marketbookID':$("#loadedmarketbook").val(),'MarketbookName':marketbookname ,'Runnerscount':marketbookrunners},

							complete: function () { },
							success: function (data) {

								if (data == "True") {
									isInserting = true;
									// ShowLoader();
									//$(".loadingimg").show();
									$(".pendding").show();
									var categoryname=$("#marketbookCategory"+marketbookID).val();
									var counter = 6;
									debugger;
									$.ajax({
										url: '/DashBoard/GetBetPlaceInterval',

										type: 'GET',
										async:false,
										data: { 'categoryname': categoryname, 'Marketbookname': marketbookname,'Runnerscount':marketbookrunners },

										complete: function () { },
										success: function (data) {

											var timinginterval=data;
											if (categoryname.indexOf("Racing")>=0){
												counter=2;
												// timinginterval=1000;
											}
											if (marketbookname.indexOf("Innings Runs")>=0 ||marketbookname.indexOf("Inns Runs")>=0){
												//  timinginterval=1600;
											}
											$("#lblCounter").html(counter);
											var interval = setInterval(
											function () {
												counter--;
												$("#lblCounter").html(counter);
												if (counter == 1) {
													$("#lblCounter").html('');
													$('#simpleBet').hide();

													$(".pendding").hide();
													HideLoader();
													clearInterval(interval);
													debugger;
													if(@LoggedinUserDetail.CheckConditionsforPlaceBet()==0){
														insertbetslipSimple();
													}
													else{
														insertbetslipmob();
													}
													$('html,body').animate({scrollTop: $("#userbets").offset().top}, 800);
													//LoadUserBets();
													Loadliabalitiesbymarkets();
													parentID = 0;
													isInserting = false;
													$("#btnBetslipsubmitmob").prop('disabled', false);
													$("#btnBetslipReset").prop('disabled', false);
													$("#myModalBetslipmob").modal("hide");
												}

											}, timinginterval);
										}
									});


								}
								else {
									$("#btnBetslipsubmitmob").prop('disabled', false);
									$("#btnBetslipReset").prop('disabled', false);
									$(".loadingimg").hide();
									$(".pendding").hide();
									HideLoader();
									ShowErrorMsg(data);
								}


							}
						});
					}
					else
					{
						$.ajax({
							url: '/UserBet/CheckforPlaceBet',

							type: 'POST',
							async:false,
							data: { 'Amount': $("#betslipamountlabelmob").text().trim(), 'Odd': $("#betslipoddmob").val().trim().replace(".00",""), 'BetType': $("#betsliptype").val(), 'SelectionID': selectionIDs1,'marketbookID':$("#loadedmarketbook").val(),'MarketbookName':marketbookname ,'Runnerscount':marketbookrunners},

							complete: function () { },
							success: function (data) {

								if (data == "True") {
									isInserting = true;
									// ShowLoader();
									//$(".loadingimg").show();
									$(".pendding").show();
									var categoryname=$("#marketbookCategory"+marketbookID).val();
									var counter = 6;
									debugger;
									$.ajax({
										url: '/DashBoard/GetBetPlaceInterval',

										type: 'GET',
										async:false,
										data: { 'categoryname': categoryname, 'Marketbookname': marketbookname,'Runnerscount':marketbookrunners },

										complete: function () { },
										success: function (data) {

											var timinginterval=data;
											if (categoryname.indexOf("Racing")>=0){
												counter=2;
												// timinginterval=1000;
											}
											if (marketbookname.indexOf("Innings Runs")>=0 ||marketbookname.indexOf("Inns Runs")>=0){
												//  timinginterval=1600;
											}
											$("#lblCounter").html(counter);
											var interval = setInterval(
											function () {
												counter--;
												$("#lblCounter").html(counter);
												if (counter == 1) {
													$("#lblCounter").html('');
													$('#simpleBet').hide();

													$(".pendding").hide();
													HideLoader();
													clearInterval(interval);
													debugger;
													if(@LoggedinUserDetail.CheckConditionsforPlaceBet()==0){
														insertbetslipSimple();
													}
													else{
														insertbetslipmob();
													}
													$('html,body').animate({scrollTop: $("#userbets").offset().top}, 800);
													//LoadUserBets();
													Loadliabalitiesbymarkets();
													parentID = 0;
													isInserting = false;
													$("#btnBetslipsubmitmob").prop('disabled', false);
													$("#btnBetslipReset").prop('disabled', false);
													$("#myModalBetslipmob").modal("hide");
												}

											}, timinginterval);
										}
									});
								}
								else {
									$("#btnBetslipsubmitmob").prop('disabled', false);
									$("#btnBetslipReset").prop('disabled', false);
									$(".loadingimg").hide();
									$(".pendding").hide();
									HideLoader();
									ShowErrorMsg(data);
								}


							}
						});
					}



				});




					$("#btnBetslipsubmit").click(function () {
					isfirstclick = true;

					$("#btnBetslipsubmit").prop('disabled', true);
					$("#btnBetslipReset").prop('disabled', true);


					var betamounttobeplaced=parseFloat($("#betslipamount").val().trim());
					var lowerbetlimit= 2000;
					var betupperlimit=500000;

					var marketbookID=  $("#loadedmarketbook").val().toString().replace(".","");

					var categoryname = $("#marketbookCategory" + marketbookID).val();
					if (categoryname == undefined || categoryname=="") {
						categoryname = "Fancy";
					}
					var marketbookname= $("#loadedmarketbookname").val();
					var marketbookrunners=$("#marketbookrunners"+marketbookID).val();

					if (categoryname == "Fancy"){
						lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitFancy();
						betupperlimit=@LoggedinUserDetail.GetBetUpperLimitFancy();
					}
					else{
						if (categoryname.indexOf("Horse Racing")>=0 && marketbookname.indexOf("To Be Placed")< 0){
							lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimit();
							betupperlimit=@LoggedinUserDetail.GetBetUpperLimit();
						}
						else{
							if (categoryname.indexOf("Horse Racing")>=0 && marketbookname.indexOf("To Be Placed")>=0){
								lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitHorsePlace();
								betupperlimit=@LoggedinUserDetail.GetBetUpperLimitHorsePlace();
							}
							else{
								if (categoryname.indexOf("Greyhound Racing")>=0 && marketbookname.indexOf("To Be Placed")>=0){
									lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitGrayHoundPlace();
									betupperlimit=@LoggedinUserDetail.GetBetUpperLimitGrayHoundPlace();
								}
								else{
									if (categoryname.indexOf("Greyhound Racing")>=0 && marketbookname.indexOf("To Be Placed")< 0){
										lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitGrayHoundWin();
										betupperlimit=@LoggedinUserDetail.GetBetUpperLimitGrayHoundWin();
									}
									else{
										if (marketbookname.indexOf("Completed Match")>=0){
											lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitCompletedMatch();
											betupperlimit=@LoggedinUserDetail.GetBetUpperLimitCompletedMatch();
										}
										else{
											if (marketbookname.indexOf("Innings Runs")>=0 ||marketbookname.indexOf("Inns Runs")>=0){
												lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitInningsRuns();
												betupperlimit=@LoggedinUserDetail.GetBetUpperLimitInningsRuns();
											}
											else{
												if(categoryname=="Tennis"){
													lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOddsTennis();
													betupperlimit=@LoggedinUserDetail.GetBetUpperLimitMatchOddsTennis();
												}
												else{
													if(categoryname=="Soccer"){
														lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOddsSoccer();
														betupperlimit=@LoggedinUserDetail.GetBetUpperLimitMatchOddsSoccer();
													}
													else{
														if (marketbookname.indexOf("Tied Match")>=0){
															lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitTiedMatch();
															betupperlimit=@LoggedinUserDetail.GetBetUpperLimitTiedMatch();
														}
														else{
															if (marketbookname.indexOf("Winner")>=0 || marketbookname.indexOf("To Win the Toss")>=0){
																lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitWinner();
																betupperlimit=@LoggedinUserDetail.GetBetUpperLimitWinner();
															}
															else{
																lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOdds();
																betupperlimit=@LoggedinUserDetail.GetBetUpperLimitMatchOdds();
															}
														}

													}
												}

											}
										}
									}
								}
							}
						}
					}

					var alreadypendingamount=0;
					$(".unmatched-bets .bets-items").each(function(){
						alreadypendingamount+=parseFloat($(this).attr("data-amount"));
					});
					if(alreadypendingamount >= betupperlimit){
						ShowErrorMsg("Already reached to limit. Please cancel any unmatch bet.");
						$("#btnBetslipsubmit").prop('disabled', false);
						$("#btnBetslipReset").prop('disabled', false);
						HideLoader();
						return;
					}
					if (betamounttobeplaced < lowerbetlimit || betamounttobeplaced > betupperlimit ) {
						ShowErrorMsg("Amount should not be less than " + lowerbetlimit +" and greater than "+ betupperlimit +".");
						$("#btnBetslipsubmit").prop('disabled', false);
						$("#btnBetslipReset").prop('disabled', false);
						HideLoader();
						return;
					}
					debugger;

					var selectionIDs1=[];
					selectionIDs1.push($("#openedbetslipid").val());
					var betamount=0;
					if (categoryname == "Fancy"){
						debugger;
						var odd1 = $("#clickedbetsize").val();
						$.ajax({
							url: '/UserBet/CheckforPlaceBet',

							type: 'POST',
							async:false,
							data: { 'Amount': $("#betslipamountlabel").text().trim(), 'Odd': odd1, 'BetType': $("#betsliptype").val(), 'SelectionID': selectionIDs1,'marketbookID':$("#loadedmarketbook").val(),'MarketbookName':marketbookname ,'Runnerscount':marketbookrunners},

							complete: function () { },
							success: function (data) {

								if (data == "True") {
									isInserting = true;
									// ShowLoader();
									//$(".loadingimg").show();
									$(".pendding").show();
									var categoryname = $("#marketbookCategory" + marketbookID).val();
									if (categoryname == undefined || categoryname == "Fancy" || categoryname == "" ) {
										categoryname = "Fancy";
										$(".pendding").hide();
									}
									debugger;
									var counter = 6;
									////
									$.ajax({
										url: '/DashBoard/GetBetPlaceInterval',

										type: 'GET',
										async:false,
										data: { 'categoryname': categoryname, 'Marketbookname': marketbookname,'Runnerscount':marketbookrunners },

										complete: function () { },
										success: function (data) {

											var timinginterval=data;
											if (categoryname.indexOf("Racing")>=0){
												counter=2;
												// timinginterval=1000;
											}
											if (categoryname.indexOf("Fancy") >= 0) {
												counter = 2;
												//  timinginterval=1600;
											}
											$("#lblCounter").html(counter);
											var interval = setInterval(
											function () {
												counter--;
												$("#lblCounter").html(counter);
												if (counter == 1) {
													$("#lblCounter").html('');
													$('#simpleBet').hide();

													$(".pendding").hide();
													HideLoader();
													clearInterval(interval);
													if(@LoggedinUserDetail.CheckConditionsforPlaceBet()==0){
														insertbetslipSimple();
													}
													else{
														insertbetslip();
													}
													$('html,body').animate({scrollTop: $("#userbets").offset().top}, 800);
													//LoadUserBets();
													Loadliabalitiesbymarkets();
													parentID = 0;
													isInserting = false;
													$("#btnBetslipsubmit").prop('disabled', false);
													$("#btnBetslipReset").prop('disabled', false);

												}

											}, timinginterval);
										}
									});


								}
								else {
									$("#btnBetslipsubmit").prop('disabled', false);
									$("#btnBetslipReset").prop('disabled', false);
									$(".loadingimg").hide();
									$(".pendding").hide();
									HideLoader();
									ShowErrorMsg(data);
								}


							}
						});
					}
					else
					{
						$.ajax({
							url: '/UserBet/CheckforPlaceBet',

							type: 'POST',
							async:false,
							data: { 'Amount': $("#betslipamountlabel").text().trim(), 'Odd': $("#betslipodd").val().trim().replace(".00",""), 'BetType': $("#betsliptype").val(), 'SelectionID': selectionIDs1,'marketbookID':$("#loadedmarketbook").val(),'MarketbookName':marketbookname ,'Runnerscount':marketbookrunners},

							complete: function () { },
							success: function (data) {

								if (data == "True") {
									isInserting = true;
									// ShowLoader();
									//$(".loadingimg").show();
									$(".pendding").show();
									var categoryname = $("#marketbookCategory" + marketbookID).val();
									if (categoryname == undefined || categoryname == "Fancy" || categoryname == "" ) {
										categoryname = "Fancy";
										$(".pendding").hide();
									}
									debugger;
									var counter = 6;
									////
									$.ajax({
										url: '/DashBoard/GetBetPlaceInterval',

										type: 'GET',
										async:false,
										data: { 'categoryname': categoryname, 'Marketbookname': marketbookname,'Runnerscount':marketbookrunners },

										complete: function () { },
										success: function (data) {

											var timinginterval=data;
											if (categoryname.indexOf("Racing")>=0){
												counter=2;
												// timinginterval=1000;
											}
											if (categoryname.indexOf("Fancy") >= 0) {
												counter = 2;
												//  timinginterval=1600;
											}
											$("#lblCounter").html(counter);
											var interval = setInterval(
											function () {
												counter--;
												$("#lblCounter").html(counter);
												if (counter == 1) {
													$("#lblCounter").html('');
													$('#simpleBet').hide();

													$(".pendding").hide();
													HideLoader();
													clearInterval(interval);
													if(@LoggedinUserDetail.CheckConditionsforPlaceBet()==0){
														insertbetslipSimple();
													}
													else{
														insertbetslip();
													}
													$('html,body').animate({scrollTop: $("#userbets").offset().top}, 800);
													//LoadUserBets();
													Loadliabalitiesbymarkets();
													parentID = 0;
													isInserting = false;
													$("#btnBetslipsubmit").prop('disabled', false);
													$("#btnBetslipReset").prop('disabled', false);

												}

											}, timinginterval);
										}
									});


								}
								else {
									$("#btnBetslipsubmit").prop('disabled', false);
									$("#btnBetslipReset").prop('disabled', false);
									$(".loadingimg").hide();
									$(".pendding").hide();
									HideLoader();
									ShowErrorMsg(data);
								}


							}
						});
					}



				});



				$("#btnBetslipsubmitmultiplemb").click(function () {

					debugger;
					$("#btnBetslipsubmitmultiplemb").prop('disabled', true);
					$("#btnBetslipResetmultiplemb").prop('disabled', true);
					isfirstclick=true;

					var betamounttobeplaced=parseFloat($("#betslipamountmultiplemb").val().trim());
					var lowerbetlimit= 4000;
					var betupperlimit=500000;
					var categoryname=$("#marketbookCategory"+$("#lastloadedmarket").val().toString().replace(".","")).val();
					var marketbookname=$("#marketbookname"+$("#lastloadedmarket").val().toString().replace(".","")).val();
					if (categoryname.indexOf("Horse Racing")>=0 && marketbookname.indexOf("To Be Placed")<0){
						lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimit();
						betupperlimit=@LoggedinUserDetail.GetBetUpperLimit();
					}
					else{
						if (categoryname.indexOf("Horse Racing")>=0 && marketbookname.indexOf("To Be Placed")>=0){
							lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitHorsePlace();
							betupperlimit=@LoggedinUserDetail.GetBetUpperLimitHorsePlace();
						}
						else{
							if (categoryname.indexOf("Greyhound Racing")>=0 && marketbookname.indexOf("To Be Placed")>=0){
								lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitGrayHoundPlace();
								betupperlimit=@LoggedinUserDetail.GetBetUpperLimitGrayHoundPlace();
							}
							else{
								if (categoryname.indexOf("Greyhound Racing")>=0 && marketbookname.indexOf("To Be Placed")< 0){
									lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitGrayHoundWin();
									betupperlimit=@LoggedinUserDetail.GetBetUpperLimitGrayHoundWin();
								}
								else{
									if (marketbookname.indexOf("Completed Match")>=0){
										lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitCompletedMatch();
										betupperlimit=@LoggedinUserDetail.GetBetUpperLimitCompletedMatch();
									}
									else{
										if (marketbookname.indexOf("Innings Runs")>=0 ||marketbookname.indexOf("Inns Runs")>=0){
											lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitInningsRuns();
											betupperlimit=@LoggedinUserDetail.GetBetUpperLimitInningsRuns();
										}
										else{
											if(categoryname=="Tennis"){
												lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOddsTennis();
												betupperlimit=@LoggedinUserDetail.GetBetUpperLimitMatchOddsTennis();
											}
											else{
												if(categoryname=="Soccer"){
													lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOddsSoccer();
													betupperlimit=@LoggedinUserDetail.GetBetUpperLimitMatchOddsSoccer();
												}
												else{
													if (marketbookname.indexOf("Tied Match")>=0){
														lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitTiedMatch();
														betupperlimit=@LoggedinUserDetail.GetBetUpperLimitTiedMatch();
													}
													else{
														if (marketbookname.indexOf("Winner")>=0){
															lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitWinner();
															betupperlimit=@LoggedinUserDetail.GetBetUpperLimitWinner();
														}
														else{
															lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOdds();
															betupperlimit=@LoggedinUserDetail.GetBetUpperLimitMatchOdds();
														}
													}

												}
											}
										}
									}
								}
							}
						}
					}

					lowerbetlimit=lowerbetlimit * 2;
					betupperlimit=betupperlimit * 2;
					var alreadypendingamount=0;
					$(".unmatched-bets .bets-items").each(function(){
						alreadypendingamount+=parseFloat($(this).attr("data-amount"));
					});
					if(alreadypendingamount >= betupperlimit){
						ShowErrorMsg("Already reached to limit. Please cancel any unmatch bet.");
						$("#btnBetslipsubmit").prop('disabled', false);
						$("#btnBetslipReset").prop('disabled', false);
						//$(".loadingimg").hide();
						$(".pendding").hide();
						HideLoader();
						return;
					}

					if (betamounttobeplaced < lowerbetlimit || betamounttobeplaced > betupperlimit ) {
						ShowErrorMsg("Amount should not be less than " + lowerbetlimit +" and greater than "+ betupperlimit +".");
						$("#btnBetslipsubmitmultiplemb").prop('disabled', false);
						$("#btnBetslipResetmultiplemb").prop('disabled', false);
						//$(".loadingimg").hide();
						$(".pendding").hide();
						HideLoader();
						return;
					}

					if ($("#betslipamountmultiple").val().trim() < 4000) {
						ShowErrorMsg("Amount should not be less than 4000.");
						$("#btnBetslipsubmitmultiplemb").prop('disabled', false);
						$("#btnBetslipResetmultiplemb").prop('disabled', false);
						return;
					}

					var selectionIDs2=[];
					var marketbookdID= $("#lastloadedmarket").val().toString().replace(".","");
					var selectedrunners= $("#selectedrunners"+marketbookdID).val();

					if (selectedrunners !=""){
						selectedrunners = JSON.parse(selectedrunners);

						for(i=0;i<=selectedrunners.length-1;i++){
							selectionIDs2.push(selectedrunners[i]);
						}
					}
					var marketbookrunners=$("#marketbookrunners"+marketbookdID).val();
					$.ajax({
						url: '/UserBet/CheckforPlaceBet',

						type: 'POST',
						async:false,
						data: { 'Amount': $("#betslipamountlabelmultiplemb").text().trim(), 'Odd':"0", 'BetType': $("#betsliptype").val(), 'SelectionID': selectionIDs2,'marketbookID':$("#lastloadedmarket").val(),'Runnerscount':marketbookrunners },

						complete: function () { },
						success: function (data) {

							if (data == "True") {
								isInserting = true;
								// ShowLoader();
								//$(".pendding").show();
								$('#myModalBetslipmultiple').modal('hide');

								$("#btnBetslipsubmitmultiplemb").prop('disabled', false);
								$("#btnBetslipResetmultiplemb").prop('disabled', false);
								for(i=0;i<=selectedrunners.length-1;i++){

									if($("#betsliptype").val() == 'back'){

										var odd =parseFloat( $("#betslipbackmultiplejori").text());
										var amount =parseFloat( $("#betslipamountmultiplemb").val());
										var totamount=parseFloat(odd * amount);
										totamount   =totamount+amount;
										var currentoddbyselectionID=$("#marketbook"+marketbookdID+" #lblbackprice0"+selectedrunners[i]).text().toString().trim();
										var amountforcurrentodd=100/parseFloat(currentoddbyselectionID);
										amountforcurrentodd=amountforcurrentodd* totamount;
										amountforcurrentodd=amountforcurrentodd/100;

										$("#loadedbetlocation").val("");
										$("#clickedodd").val("");
										$("#clickedbetsize").val("");
										$("#clickedID").val(0);
										$("#betslipback").text($("#marketbook"+marketbookdID+" #lblbackprice0"+selectedrunners[i]).text().toString().trim())
										$("#betslipsize").text($("#marketbook"+marketbookdID+" #lblbacksize0"+selectedrunners[i]).text().toString().trim())
										$("#openedbetslipid").val(selectedrunners[i]);
										var clothnumber=$("#lblSelectionClothnumber"+selectedrunners[i]).text().toString().trim();;
										var selectionname=$("#lblSelectionName"+selectedrunners[i]).text().toString().trim();
										if(clothnumber!=""){
											selectionname=clothnumber+"."+selectionname;
										}


										$("#betslipselection").html(selectionname);

										$("#betslipselectionmob").html(selectionname);
										$("#betslipamount").val(parseInt(amountforcurrentodd));
										$("#betslipodd").val(currentoddbyselectionID);
										parentID = 0;
										insertbetslip();
									}
									else{
										var odd = parseFloat($("#betsliplaymultiplejorimb").text());
										var amount =parseFloat( $("#betslipamountmultiplemb").val());
										var totamount=parseFloat(odd * amount);
										totamount   =totamount+amount;
										var currentoddbyselectionID=$("#marketbook"+marketbookdID+" #lbllayprice0"+selectedrunners[i]).text().toString().trim();
										var amountforcurrentodd=100/parseFloat(currentoddbyselectionID);
										amountforcurrentodd=amountforcurrentodd* totamount;
										amountforcurrentodd=amountforcurrentodd/100;
										$("#loadedbetlocation").val("");
										$("#clickedodd").val("");
										$("#clickedbetsize").val("");
										$("#clickedID").val(0);
										$("#betsliplay").text($("#marketbook"+marketbookdID+" #lbllayprice0"+selectedrunners[i]).text().toString().trim())
										$("#betslipsize").text($("#marketbook"+marketbookdID+" #lbllaysize0"+selectedrunners[i]).text().toString().trim())
										$("#openedbetslipid").val(selectedrunners[i]);
										var clothnumber=$("#lblSelectionClothnumber"+selectedrunners[i]).text().toString().trim();;
										var selectionname=$("#lblSelectionName"+selectedrunners[i]).text().toString().trim();
										if(clothnumber!=""){
											selectionname=clothnumber+"."+selectionname;
										}


										$("#betslipselection").html(selectionname);

										$("#betslipselectionmob").html(selectionname);
										$("#betslipamount").val(parseInt(amountforcurrentodd));
										$("#betslipodd").val(currentoddbyselectionID);
										parentID = 0;
										insertbetslip();
									}
								}
								$('html,body').animate({scrollTop: $("#userbets").offset().top}, 800);

								isInserting= false;
								//$(".loadingimg").hide();
								$(".pendding").hide();
								Loadliabalitiesbymarkets();
								HideLoader();



							}
							else {
								$("#btnBetslipsubmitmultiplemb").prop('disabled', true);
								$("#btnBetslipResetmultiplemb").prop('disabled', true);
								$(".loadingimg").hide();
								$(".pendding").hide();
								HideLoader();
								ShowErrorMsg(data);
							}


						}
					});



					$("#BetSlipJori").hide();
					$("#joriBet").hide();
					$("#betslipcontentmultiplemb").hide();

				});

				$("#btnBetslipsubmitmultiple").click(function () {


					$("#btnBetslipsubmitmultiple").prop('disabled', true);
					$("#btnBetslipResetmultiple").prop('disabled', true);
					$("#btnBetslipsubmitmultiplemb").prop('disabled', true);
					$("#btnBetslipResetmultiplemb").prop('disabled', true);
					isfirstclick=true;

					//$(".pendding").show();


					var betamounttobeplaced=parseFloat($("#betslipamountmultiple").val().trim());
					var lowerbetlimit= 4000;
					var betupperlimit=500000;
					var categoryname=$("#marketbookCategory"+$("#lastloadedmarket").val().toString().replace(".","")).val();
					var marketbookname=$("#marketbookname"+$("#lastloadedmarket").val().toString().replace(".","")).val();
					if (categoryname.indexOf("Horse Racing")>=0 && marketbookname.indexOf("To Be Placed")<0){
						lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimit();
						betupperlimit=@LoggedinUserDetail.GetBetUpperLimit();
					}
					else{
						if (categoryname.indexOf("Horse Racing")>=0 && marketbookname.indexOf("To Be Placed")>=0){
							lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitHorsePlace();
							betupperlimit=@LoggedinUserDetail.GetBetUpperLimitHorsePlace();
						}
						else{
							if (categoryname.indexOf("Greyhound Racing")>=0 && marketbookname.indexOf("To Be Placed")>=0){
								lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitGrayHoundPlace();
								betupperlimit=@LoggedinUserDetail.GetBetUpperLimitGrayHoundPlace();
							}
							else{
								if (categoryname.indexOf("Greyhound Racing")>=0 && marketbookname.indexOf("To Be Placed")< 0){
									lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitGrayHoundWin();
									betupperlimit=@LoggedinUserDetail.GetBetUpperLimitGrayHoundWin();
								}
								else{
									if (marketbookname.indexOf("Completed Match")>=0){
										lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitCompletedMatch();
										betupperlimit=@LoggedinUserDetail.GetBetUpperLimitCompletedMatch();
									}
									else{
										if (marketbookname.indexOf("Innings Runs")>=0 ||marketbookname.indexOf("Inns Runs")>=0){
											lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitInningsRuns();
											betupperlimit=@LoggedinUserDetail.GetBetUpperLimitInningsRuns();
										}
										else{
											if(categoryname=="Tennis"){
												lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOddsTennis();
												betupperlimit=@LoggedinUserDetail.GetBetUpperLimitMatchOddsTennis();
											}
											else{
												if(categoryname=="Soccer"){
													lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOddsSoccer();
													betupperlimit=@LoggedinUserDetail.GetBetUpperLimitMatchOddsSoccer();
												}
												else{
													if (marketbookname.indexOf("Tied Match")>=0){
														lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitTiedMatch();
														betupperlimit=@LoggedinUserDetail.GetBetUpperLimitTiedMatch();
													}
													else{
														if (marketbookname.indexOf("Winner")>=0){
															lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitWinner();
															betupperlimit=@LoggedinUserDetail.GetBetUpperLimitWinner();
														}
														else{
															lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOdds();
															betupperlimit=@LoggedinUserDetail.GetBetUpperLimitMatchOdds();
														}
													}

												}
											}
										}
									}
								}
							}
						}
					}

					lowerbetlimit=lowerbetlimit * 2;
					betupperlimit=betupperlimit * 2;
					var alreadypendingamount=0;
					$(".unmatched-bets .bets-items").each(function(){
						alreadypendingamount+=parseFloat($(this).attr("data-amount"));
					});
					if(alreadypendingamount >= betupperlimit){
						ShowErrorMsg("Already reached to limit. Please cancel any unmatch bet.");
						$("#btnBetslipsubmit").prop('disabled', false);
						$("#btnBetslipReset").prop('disabled', false);
						//$(".loadingimg").hide();
						$(".pendding").hide();
						HideLoader();
						return;
					}

					if (betamounttobeplaced < lowerbetlimit || betamounttobeplaced > betupperlimit ) {
						ShowErrorMsg("Amount should not be less than " + lowerbetlimit +" and greater than "+ betupperlimit +".");
						$("#btnBetslipsubmitmultiple").prop('disabled', false);
						$("#btnBetslipResetmultiple").prop('disabled', false);
						$("#btnBetslipsubmitmultiplemb").prop('disabled', false);
						$("#btnBetslipResetmultiplemb").prop('disabled', false);
						//$(".loadingimg").hide();
						$(".pendding").hide();
						HideLoader();
						return;
					}

					if ($("#betslipamountmultiple").val().trim() < 4000) {
						ShowErrorMsg("Amount should not be less than 4000.");
						$("#btnBetslipsubmitmultiple").prop('disabled', false);
						$("#btnBetslipResetmultiple").prop('disabled', false);
						$("#btnBetslipsubmitmultiplemb").prop('disabled', false);
						$("#btnBetslipResetmultiplemb").prop('disabled', false);
						return;
					}

					var selectionIDs2=[];
					var marketbookdID= $("#lastloadedmarket").val().toString().replace(".","");
					var selectedrunners= $("#selectedrunners"+marketbookdID).val();

					if (selectedrunners !=""){
						selectedrunners = JSON.parse(selectedrunners);

						for(i=0;i<=selectedrunners.length-1;i++){
							selectionIDs2.push(selectedrunners[i]);
						}
					}
					var marketbookrunners=$("#marketbookrunners"+marketbookdID).val();
					$.ajax({
						url: '/UserBet/CheckforPlaceBet',

						type: 'POST',
						async:false,
						data: { 'Amount': $("#betslipamountlabelmultiple").text().trim(), 'Odd':"0", 'BetType': $("#betsliptype").val(), 'SelectionID': selectionIDs2,'marketbookID':$("#lastloadedmarket").val(),'Runnerscount':marketbookrunners },

						complete: function () { },
						success: function (data) {

							if (data == "True") {
								isInserting = true;
								// ShowLoader();
								$('#myModalBetslipmultiple').modal('hide');

								$("#btnBetslipsubmitmultiple").prop('disabled', false);
								$("#btnBetslipResetmultiple").prop('disabled', false);
								for(i=0;i<=selectedrunners.length-1;i++){

									if($("#betsliptype").val() == 'back'){

										var odd =parseFloat( $("#betslipbackmultiplejori").text());
										var amount =parseFloat( $("#betslipamountmultiple").val());
										var totamount=parseFloat(odd * amount);
										totamount   =totamount+amount;
										var currentoddbyselectionID=$("#marketbook"+marketbookdID+" #lblbackprice0"+selectedrunners[i]).text().toString().trim();
										var amountforcurrentodd=100/parseFloat(currentoddbyselectionID);
										amountforcurrentodd=amountforcurrentodd* totamount;
										amountforcurrentodd=amountforcurrentodd/100;

										$("#loadedbetlocation").val("");
										$("#clickedodd").val("");
										$("#clickedbetsize").val("");
										$("#clickedID").val(0);
										$("#betslipback").text($("#marketbook"+marketbookdID+" #lblbackprice0"+selectedrunners[i]).text().toString().trim())
										$("#betslipsize").text($("#marketbook"+marketbookdID+" #lblbacksize0"+selectedrunners[i]).text().toString().trim())
										$("#openedbetslipid").val(selectedrunners[i]);
										var clothnumber=$("#lblSelectionClothnumber"+selectedrunners[i]).text().toString().trim();;
										var selectionname=$("#lblSelectionName"+selectedrunners[i]).text().toString().trim();
										if(clothnumber!=""){
											selectionname=clothnumber+"."+selectionname;
										}


										$("#betslipselection").html(selectionname);

										$("#betslipselectionmob").html(selectionname);
										$("#betslipamount").val(parseInt(amountforcurrentodd));
										$("#betslipodd").val(currentoddbyselectionID);
										parentID = 0;
										insertbetslip();
									}
									else{
										var odd = parseFloat($("#betsliplaymultiplejori").text());
										var amount =parseFloat( $("#betslipamountmultiple").val());
										var totamount=parseFloat(odd * amount);
										totamount   =totamount+amount;
										var currentoddbyselectionID=$("#marketbook"+marketbookdID+" #lbllayprice0"+selectedrunners[i]).text().toString().trim();
										var amountforcurrentodd=100/parseFloat(currentoddbyselectionID);
										amountforcurrentodd=amountforcurrentodd* totamount;
										amountforcurrentodd=amountforcurrentodd/100;
										$("#loadedbetlocation").val("");
										$("#clickedodd").val("");
										$("#clickedbetsize").val("");
										$("#clickedID").val(0);
										$("#betsliplay").text($("#marketbook"+marketbookdID+" #lbllayprice0"+selectedrunners[i]).text().toString().trim())
										$("#betslipsize").text($("#marketbook"+marketbookdID+" #lbllaysize0"+selectedrunners[i]).text().toString().trim())
										$("#openedbetslipid").val(selectedrunners[i]);
										var clothnumber=$("#lblSelectionClothnumber"+selectedrunners[i]).text().toString().trim();;
										var selectionname=$("#lblSelectionName"+selectedrunners[i]).text().toString().trim();
										if(clothnumber!=""){
											selectionname=clothnumber+"."+selectionname;
										}


										$("#betslipselection").html(selectionname);

										$("#betslipselectionmob").html(selectionname);
										$("#betslipamount").val(parseInt(amountforcurrentodd));
										$("#betslipodd").val(currentoddbyselectionID);
										parentID = 0;
										insertbetslip();
									}
								}
								$('html,body').animate({scrollTop: $("#userbets").offset().top}, 800);

								isInserting= false;
								//$(".loadingimg").hide();
								$(".pendding").hide();
								Loadliabalitiesbymarkets();
								HideLoader();



							}
							else {
								$("#btnBetslipsubmitmultiple").prop('disabled', true);
								$("#btnBetslipResetmultiple").prop('disabled', true);
								$("#btnBetslipsubmitmultiple").prop('disabled', true);
								$("#btnBetslipResetmultiple").prop('disabled', true);
								$(".loadingimg").hide();
								$(".pendding").hide();
								HideLoader();
								ShowErrorMsg(data);
							}


						}
					});



					$("#BetSlipJori").hide();
					$("#joriBet").hide();
					$("#betslipcontentmultiple").hide();

				});

			});

			function insertbetslipSimple(){
				var cuttinguserid=$("#allusersCuttingUsers"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				if(cuttinguserid==0){
					ShowErrorMsg("Please Select User");
					return;
				}
				$("#btnAdminBet").prop('disabled', true);

				var marketbookID=$("#lastloadedmarket").val().toString().replace(".","");
				var selectionID =$("#ddlRunnersBetAdmin"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				var selectionname=$("#lblSelectionName"+selectionID).text();
				var marketbookname=$("#marketbookname"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				var bettype=$("#ddladminbettype"+$("#lastloadedmarket").val().toString().replace(".","")+" option:selected").val();
				var userodd=$("#txtAdminOdd"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				var amount=$("#txtAdminAmount"+$("#lastloadedmarket").val().toString().replace(".","")).val();

				dataurl = '/UserBet/InsertUserBetAdmin';

				$.ajax({
					url: dataurl,

					type: 'POST',
					async: false,
					data: { 'SelectionID': selectionID, 'selecitonname': selectionname, 'userOdd': userodd, 'amount': amount, 'bettype': bettype, 'liveodd': userodd, 'ismatched': true, 'status': 'In-Complete', 'marketbookid': $("#lastloadedmarket").val(), 'marketbookname': marketbookname, 'Liablaity': 0, 'BetSize': 0, 'PendingAmount': 0, 'location': 0, 'ParentID': 0,'UserID':cuttinguserid },

					complete: function () {
						$("#btnAdminBet").prop('disabled', false);
					},
					success: function (data) {
						if (data.indexOf("True") >= 0) {
							//$("#userbets").load('/Market/UserBets');
							setTimeout(function(){
								$("#btnAdminBet").prop('disabled', false);
							},2000);

							HideLoader();
						}
						else {
							setTimeout(function(){
								$("#btnAdminBet").prop('disabled', false);
							},2000);
							if (data == "False") {
								HideLoader();
								ShowErrorMsg("Something went wrong, please place bet again.");
							}
							else {
								HideLoader();
								ShowErrorMsg(data);
							}


						}



					}
				});
			}
			function Loadliabalitiesbymarkets(){
				//  $("#libalitybymarket").html("");
				//  $("#libalitybymarket").show();

				$.ajax({
					type: "GET",
					async:true,
					url: "/Liabality/LoadLiabalitybyMarket",
					success: function (result) {
						// Loadliabalitiesbymarkets();
						$("#libalitybymarket").html(result);


					},
					complete:function(){


					}

				});


			}
			function checkNetConnection(){

				var ifConnected = window.navigator.onLine;
				re=""
				if (ifConnected) {
					re=true;;
				} else {
					re=false;
				}

				return re;
			}

			function insertbetslip() {
				if(checkNetConnection()==false){
					return  ;
				}
				debugger;
				var data=$("#clickedbetsize").val()
				//selectionID =
				$.ajax({
					url: '/UserBet/InsertUserBetNew',

					type: 'POST',
					async: false,
					data: { 'userodd': $("#betslipodd").val(), 'SelectionID': $("#openedbetslipid").val(), 'Selectionname': $("#betslipselection").text(),'BetType': $("#betsliptype").val(), 'nupdownAmount': $("#betslipamount").val(),'betslipamountlabel':$("#betslipamountlabel").text(),'Clickedlocation':$("#clickedlocation").val(),'Betslipsize':$("#clickedbetsize").val(),'marketbookId': $("#loadedmarketbook").val(), 'Marketbookname': $("#loadedmarketbookname").val() },

					complete: function () {

					},
					success: function (data) {
						HideLoader();

					}
				});

			}

			function insertbetslipmob() {
				if(checkNetConnection()==false){
					return  ;
				}
				// debugger;
				selectionID = $("#openedbetslipid").val();
				$.ajax({
					url: '/UserBet/InsertUserBetNew',

					type: 'POST',
					async: false,
					data: { 'userodd': $("#betslipoddmob").val(), 'SelectionID': selectionID, 'Selectionname': $("#betslipselection").text(), 'BetType': $("#betsliptype").val(), 'nupdownAmount': $("#betslipamountmob").val(), 'betslipamountlabel': $("#betslipamountlabelmob").text(), 'Clickedlocation': $("#clickedlocation").val(), 'Betslipsize': $("#clickedbetsize").val(),'marketbookId': $("#loadedmarketbook").val(), 'Marketbookname': $("#loadedmarketbookname").val() },

					complete: function () {

					},
					success: function (data) {
						HideLoader();

					}
				});

			}


			function setBetslipamountlowerlimit(){
				// var betamounttobeplaced=parseFloat($("#betslipamountmultiple").val().trim());
				var lowerbetlimit= 2000;

				var categoryname=$("#marketbookCategory"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				var marketbookname=$("#marketbookname"+$("#lastloadedmarket").val().toString().replace(".","")).val();
				if (categoryname.indexOf("Horse Racing")>=0 && marketbookname.indexOf("To Be Placed")<0){
					lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimit();

				}
				else{
					if (categoryname.indexOf("Horse Racing")>=0 && marketbookname.indexOf("To Be Placed")>=0){
						lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitHorsePlace();

					}
					else{
						if (categoryname.indexOf("Greyhound Racing")>=0 && marketbookname.indexOf("To Be Placed")>=0){
							lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitGrayHoundPlace();

						}
						else{
							if (categoryname.indexOf("Greyhound Racing")>=0 && marketbookname.indexOf("To Be Placed")< 0){
								lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitGrayHoundWin();

							}
							else{
								if (marketbookname.indexOf("Completed Match")>=0){
									lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitCompletedMatch();

								}
								else{
									if (marketbookname.indexOf("Innings Runs")>=0 ||marketbookname.indexOf("Inns Runs")>=0){
										lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitInningsRuns();

									}
									else{
										if(categoryname=="Tennis"){
											lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOddsTennis();

										}
										else{
											if(categoryname=="Soccer"){
												lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOddsSoccer();

											}
											else{
												if (marketbookname.indexOf("Tied Match")>=0){
													lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitTiedMatch();

												}
												else{
													if (marketbookname.indexOf("Winner")>=0){
														lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitWinner();

													}
													else{
														lowerbetlimit=@LoggedinUserDetail.GetBetLowerLimitMatchOdds();

													}
												}

											}
										}

									}
								}
							}
						}
					}
				}
				return lowerbetlimit;
			}
	function setuserbethiddenfieldsvalue(loadedmarketID, userodd, selectionID, amount, selectionname, betsliptype, marketbookname, betslipsize) {
		debugger;
				$("#isBetSlipEdit").val("0");
				$("#loadedmarketbook").val(loadedmarketID);
				$("#betslipodd").val(userodd);
				$("#openedbetslipid").val(selectionID);
				$("#betslipamount").val(amount);
				$("#betslipselection").text(selectionname);
				$("#betslipselectionmob").html(selectionname);
				$("#betsliptype").val(betsliptype);
				$("#betslipsize").text(betslipsize);
				$("#loadedmarketbookname").val(marketbookname);
				calculateamounts();
			}

			function resetamount() {
				//debugger;
				isfirstclick=true;
				$("#betslipamount").val('2000');
				$("#betslipamountlabel").html(parseFloat('2000').toFixed(2));
				calculateamounts();
			}
			function resetamountmultiple() {
				isfirstclick=true;
				$("#betslipamountmultiple").val('4000');

				calculateamountsmultiple();
			}
			function SetBackandlayonbetslip(id) {
				var marketbookID = $("#loadedmarketbook").val().toString().replace(".", "");
				var location = $("#loadedbetlocation").val();
				$("#betsliplay").html($("#marketbook"+marketbookID+" #selection" + id + "  .layitem:nth-child(1)").children("label").first().html());
				$("#betslipback").html($("#marketbook"+marketbookID+" #selection" + id + " .backitem:nth-child(3)").children("label").first().html());
				//$("#betsliplay").html($("#lbllayprice" + location + id).text().trim());
				//$("#betslipback").html($("#lblbackprice" + location + id).text().trim());
				if ($("#betsliptype").val() == 'back') {
					$("#betslipsize").html($("#marketbook"+marketbookID+" #selection" + id + " .backitem:nth-child(3)").children("label").last().html());
				}
				else {
					$("#betslipsize").html($("#marketbook"+marketbookID+" #selection" + id + "  .layitem:nth-child(1)").children("label").last().html());
				}
			}

		function calculateamounts() {
			debugger;
			var loc = $("#clickedlocation").val();

			var odd = $("#betslipodd").val();
			if (loc == "8" || loc == "9") {
				var size = $("#clickedbetsize").val();
				var sizef = parseFloat(size) / 100;
				var amount = $("#betslipamount").val();
				if ($("#betsliptype").val() == 'lay') {
					var price = amount * sizef;
					$("#betslipamountlabel").html(parseFloat(price).toFixed(2));
					$("#betslipamountlabelmob").html(parseFloat(price).toFixed(2));
				}
				else {
					var amount = $("#betslipamount").val();
					$("#betslipamountlabel").html(parseFloat(amount).toFixed(2));
					$("#betslipamountlabelmob").html(parseFloat(amount).toFixed(2));
				}

			}
			else
			{
				debugger;
				var marketbookrunners = $("#marketbookrunners" + $("#loadedmarketbook").val().toString().replace(".", "")).val();
				$("#betslipoddmob").val(odd);
				var amount = $("#betslipamount").val();
				$("#betslipamountmob").val(amount);

				if (marketbookrunners == "1") {
					$("#betslipoddlabel").html((parseFloat(amount)).toFixed(2));
				}
				else {
					$("#betslipoddlabel").html((parseFloat(odd * amount) - parseFloat(amount)).toFixed(2));
					if ($("#betsliptype").val() == 'lay') {
						debugger;
						var betslipamount = $("#betslipamountlabel").html();
						$("#betslipamountlabel").html($("#betslipoddlabel").html());
						$("#betslipoddlabel").html(betslipamount);
						$("#betslipamountlabel").html(parseFloat((odd-1) *amount).toFixed(2));
						$("#betslipamountlabelmob").html(parseFloat(amount).toFixed(2));
					}
					else
					{
						$("#betslipamountlabel").html(parseFloat(amount).toFixed(2));
						$("#betslipamountlabelmob").html(parseFloat(amount).toFixed(2));
					}
				}
			}
			if ($("#betslipodd").val().toString().indexOf(".") >= 0) {
				$("#betslipodd").val(parseFloat($("#betslipodd").val()).toFixed(2));
			}



		}
			function calculateamountsIN() {
				if($("#betslipoddIN").val().toString().indexOf(".")>=0){
					$("#betslipoddIN").val(parseFloat($("#betslipoddIN").val()).toFixed(2));
				}
				var marketbookrunners=$("#marketbookrunners"+$("#loadedmarketbook").val().toString().replace(".", "")).val();
				var odd = $("#betslipoddIN").val();
				$("#betslipoddmobIN").val(odd);
				var amount = $("#betslipamountIN").val();
				$("#betslipamountmobIN").val(amount);
				$("#betslipamountlabelIN").html(parseFloat(amount).toFixed(2));
				$("#betslipamountlabelmobIN").html(parseFloat(amount).toFixed(2));
				if(marketbookrunners=="1")
				{
					$("#betslipoddlabelIN").html((parseFloat(amount)).toFixed(2));
				}
				else
				{
					$("#betslipoddlabelIN").html((parseFloat(odd * amount) - parseFloat(amount)).toFixed(2));
					if ($("#betsliptypeIN").val() == 'lay') {
						var betslipamount = $("#betslipamountlabelIN").html();
						$("#betslipamountlabelIN").html($("#betslipoddlabelIN").html());
						$("#betslipoddlabelIN").html(betslipamount);
					}
				}

			}

			function calculateamountsmobIN() {
				if($("#betslipoddmobIN").val().toString().indexOf(".")>=0){
					$("#betslipoddmobIN").val(parseFloat($("#betslipoddmobIN").val()).toFixed(2));
				}
				var marketbookrunners=$("#marketbookrunners"+$("#loadedmarketbook").val().toString().replace(".", "")).val();
				var odd = $("#betslipoddmobIN").val();
				$("#betslipoddmobIN").val(odd);
				var amount = $("#betslipamountmobIN").val();

				$("#betslipamountlabelmobIN").html(parseFloat(amount).toFixed(2));
				if(marketbookrunners=="1")
				{
					$("#betslipoddlabelmobIN").html((parseFloat(amount)).toFixed(2));
				}
				else
				{
					$("#betslipoddlabelIN").html((parseFloat(odd * amount) - parseFloat(amount)).toFixed(2));
					if ($("#betsliptype").val() == 'lay') {
						var betslipamount = $("#betslipamountlabelIN").html();
						$("#betslipamountlabelmobIN").html($("#betslipoddlabelmobIN").html());
						$("#betslipoddlabelmobIN").html(betslipamount);
					}
				}

			}

			function calculateamountsmob() {
				if($("#betslipoddmob").val().toString().indexOf(".")>=0){
					$("#betslipoddmob").val(parseFloat($("#betslipoddmob").val()).toFixed(2));
				}
				var marketbookrunners=$("#marketbookrunners"+$("#loadedmarketbook").val().toString().replace(".", "")).val();
				var odd = $("#betslipoddmob").val();
				$("#betslipoddmob").val(odd);
				var amount = $("#betslipamountmob").val();

				$("#betslipamountlabelmob").html(parseFloat(amount).toFixed(2));
				if(marketbookrunners=="1")
				{
					$("#betslipoddlabel").html((parseFloat(amount)).toFixed(2));
				}
				else
				{
					$("#betslipoddlabel").html((parseFloat(odd * amount) - parseFloat(amount)).toFixed(2));
					if ($("#betsliptype").val() == 'lay') {
						var betslipamount = $("#betslipamountlabel").html();
						$("#betslipamountlabel").html($("#betslipoddlabel").html());
						$("#betslipoddlabel").html(betslipamount);
					}
				}

			}

			function calculateamountsmultiple() {

				if ($("#betsliptype").val() == 'lay') {
					var odd = $("#betsliplaymultiplejori").text();
					odd=parseFloat(odd)+1;
					var amount = $("#betslipamountmultiple").val();
					if (parseFloat(odd) > 0){
						$("#betslipamountlabelmultiple").html((parseFloat(odd * amount) - parseFloat(amount)).toFixed(2));
						$("#betslipamountlabelmultiplemb").html((parseFloat(odd * amount) - parseFloat(amount)).toFixed(2));
					}
					else{
						$("#betslipamountlabelmultiple").html("0.00");
						$("#betslipamountlabelmultiplemb").html("0.00");
					}

					$("#betslipoddlabelmultiple").html(parseFloat(amount).toFixed(2));
					$("#betslipoddlabelmultiplemb").html(parseFloat(amount).toFixed(2));
				}
				else{
					var odd = $("#betslipbackmultiplejori").text();
					odd=parseFloat(odd)+1;
					var amount = $("#betslipamountmultiple").val();
					$("#betslipamountlabelmultiple").html(parseFloat(amount).toFixed(2));
					$("#betslipamountlabelmultiplemb").html(parseFloat(amount).toFixed(2));
					if(parseFloat(odd) > 0){
						$("#betslipoddlabelmultiple").html((parseFloat(odd * amount) - parseFloat(amount)).toFixed(2));
						$("#betslipoddlabelmultiplemb").html((parseFloat(odd * amount) - parseFloat(amount)).toFixed(2));
					}
					else{
						$("#betslipoddlabelmultiple").html(("0.00"));
						$("#betslipoddlabelmultiplemb").html(("0.00"));
					}

				}
			}


			function LoadRunnername(id) {
				//debugger;
				$("#lblSelectionName" + id).text($("#selectionname" + id).val())
			}

			function showbetslip(id, betsliptype, odd, amount, isEdit, marketbookID, marketbookname, betsize, location, parentID)

			{
				debugger;
				if(isInserting==true){
					return;
				}
				//debugger;
				$("#isBetSlipEdit").val(isEdit);
				$("#loadedmarketbook").val(marketbookID);
				$("#loadedmarketbookname").val(marketbookname);
				$("#loadedbetlocation").val("");
				$("#clickedlocation").val(location);
				$("#clickedodd").val("");
				$("#clickedbetsize").val(betsize);

				$("#clickedID").val(0);

				if(location==8)
				{
					$("#bdown-349").hide();
					$("#bup-349").hide();
					$("#betslipodd").prop("readonly", true);
				}
				else
				{
					$("#bdown-349").show();
					$("#bup-349").show();
					$("#betslipodd").prop("readonly", false);
				}
				// ShowLoader();
				var old = marketbookID.toString();
				var newid = old.replace('.', '');
				var marketbookrunners;
				if (location == 9) {
				 //marketbookrunners = $("#marketbookrunners" + newid).val();
					marketbookrunners = "1";
				}
				else
				{
					marketbookrunners = $("#marketbookrunners" + newid).val();
				}

				var status;
				//if (marketbookrunners == "1") {
				//	status = $("#marketbookstatus" + newid).val();
				//} else
				//{
				//	status = $("#marketbookstatus" + newid).val();
				//}
				var allowedstatus=false;

				var categoryname;
				var betttingallowedmarket;
				var betttingallowedmarketoverall;
				if (location == 9)
				{
					categoryname = "Fancy";
					betttingallowedmarket = "1";
					betttingallowedmarketoverall = "1";
				 status ="IN-PLAY" ;
				}
				else {
					categoryname = $("#marketbookCategory" + newid).val();
					 betttingallowedmarket = $("#marketbookAllowedBetting" + newid).val();
					betttingallowedmarketoverall = $("#marketbookAllowedBettingOverAll" + newid).val();
					status = $("#marketbookstatus" + newid).html();
					var timeofmatch = $("#lbltimer" + newid).text();
				}


				if (categoryname == "Cricket"  ) {
					$.ajax({
						url: '/userbet/GetBettingAllowedbyMarketIDandUserID',

						type: 'post',
						async: false,
						data: { 'marketbookid': marketbookID },

						complete: function () { },
						success: function (data) {
							//debugger;
							if (data == "True") {
								$("#marketbookallowedbetting" + newid).val('1');


								betttingallowedmarket = "1";
							}
							else {
								$("#marketbookallowedbetting" + newid).val('0');
								betttingallowedmarket = "0";
							}

						}
					});
				}


				if(betttingallowedmarket=="0" || betttingallowedmarketoverall=="0" )
				{
					allowedstatus==false;
					ShowErrorMsg("Betting not allowed.");
				}
				else
				{
					if (categoryname.indexOf("Racing")>=0)
					{
						if (status=="IN-PLAY"){
							allowedstatus=true;
						}
						else
						{
							//debugger;
							if (status=="GOING LIVE"){

								var minutesremaining=timeofmatch.split(":");
								//debugger;
								if(marketbookname.indexOf("(US)")>=0){
									if(parseFloat(minutesremaining[0])>=0 && parseFloat(minutesremaining[2]) <= @LoggedinUserDetail.BetPlaceWaitandInterval.RaceMinutesBeforeStart && parseFloat(minutesremaining[1])==0){
										allowedstatus=true;
									}
									else{
										if(parseFloat(minutesremaining[0])<0){
											allowedstatus=true;
										}
									}
								}
								else{
									if(parseFloat(minutesremaining[0])>=0 && parseFloat(minutesremaining[2]) <= @LoggedinUserDetail.BetPlaceWaitandInterval.RaceMinutesBeforeStart && parseFloat(minutesremaining[1])==0){
										allowedstatus=true;
									}
									else{
										if(parseFloat(minutesremaining[0])<0){
											allowedstatus=true;
										}
									}
								}
							}
						}
					}
					else
					{

						if (status == "IN-PLAY" || status == "IN PLAY" || status == "In Play" || status == "" || status=="GOING LIVE" ){
							allowedstatus=true;
						}
						if (marketbookname.indexOf("Winner")>=0 || marketbookname.indexOf("To Win the Toss")>=0 )
						{
							allowedstatus = true;
						}

					}

					if (  allowedstatus==true) {
						$("#openedbetslipid").val(id);
						$("#betsliptype").val(betsliptype);
						if (betsliptype == 'back') {
							//debugger;
							$("#betslipcontent").css("background-color", "#bddff7");
							$("#betslipcontentmob").css("background-color", "#bddff7");
							$("#betslipamountlabel").css("color", "green");
							var selectionname;
							if (location != 9) {

								selectionname = $("#marketbook" + newid + " #lblSelectionName" + id).text().toString().trim();

								var selectionname = $("#marketbook" + newid + " #lblSelectionName" + id).text().toString().trim();
								var commands = selectionname.split(' ', 8);
								var selectionnamelenght = commands.length.toString();
								if (selectionnamelenght == 1) {
									var command = commands[0];
								}
								if (selectionnamelenght == 2) {
									var command = commands[0] + ' ' + commands[1];
								}
								if (selectionnamelenght == 3) {
									var command = commands[0] + ' ' + commands[1] + ' ' + commands[2];
								}
								if (selectionnamelenght == 4) {
									var command = commands[0] + ' ' + commands[1] + ' ' + commands[2] + ' ' + commands[3];
								}
								if (selectionnamelenght == 5) {
									var command = commands[0] + ' ' + commands[1] + ' ' + commands[2] + ' ' + commands[3] + ' ' + commands[4];
								}
								if (selectionnamelenght == 6) {
									var command = commands[0] + ' ' + commands[1] + ' ' + commands[2] + ' ' + commands[3] + ' ' + commands[4] + ' ' + commands[5];
								}
								if (selectionnamelenght == 7) {
									var command = commands[0] + ' ' + commands[1] + ' ' + commands[2] + ' ' + commands[3] + ' ' + commands[4] + ' ' + commands[5] + ' ' + commands[6];
								}
								if (selectionnamelenght == 8) {
									var command = commands[0] + ' ' + commands[1] + ' ' + commands[2] + ' ' + commands[3] + ' ' + commands[4] + ' ' + commands[5] + ' ' + commands[6] + ' ' + commands[7];
								}
							}
							$("#betslipheading").html('You are going to back ' + selectionname);
							if (location == 9) {
								$("#betslipselection").html(id);
								$("#betslipselectionmob").html(id);
							}
							else {
								$("#betslipselection").html(command);
								$("#betslipselectionmob").html(command);
							}
								$("#betslipsize").text($("#marketbook"+newid+" #selection" + id + "  .backitem:nth-child(3)").children("label").last().html());
						}
						else {
							$("#betslipcontent").css("background-color", "#fdbac8");
							$("#betslipcontentmob").css("background-color", "#fdbac8");
							$("#betslipamountlabel").css("color", "red");
							var selectionname;
							if (location != 9) {
									selectionname = $("#marketbook" + newid + " #lblSelectionName" + id).text().toString().trim();

								var commands = selectionname.split(' ', 8);
								var selectionnamelenght = commands.length.toString();
								if (selectionnamelenght == 1) {
									var command = commands[0];
								}
								if (selectionnamelenght == 2) {
									var command = commands[0] + ' ' + commands[1];
								}
								if (selectionnamelenght == 3) {
									var command = commands[0] + ' ' + commands[1] + ' ' + commands[2];
								}
								if (selectionnamelenght == 4) {
									var command = commands[0] + ' ' + commands[1] + ' ' + commands[2] + ' ' + commands[3];
								}
								if (selectionnamelenght == 5) {
									var command = commands[0] + ' ' + commands[1] + ' ' + commands[2] + ' ' + commands[3] + ' ' + commands[4];
								}
								if (selectionnamelenght == 6) {
									var command = commands[0] + ' ' + commands[1] + ' ' + commands[2] + ' ' + commands[3] + ' ' + commands[4] + ' ' + commands[5];
								}
								if (selectionnamelenght == 7) {
									var command = commands[0] + ' ' + commands[1] + ' ' + commands[2] + ' ' + commands[3] + ' ' + commands[4] + ' ' + commands[5] + ' ' + commands[6];
								}
								if (selectionnamelenght == 8) {
									var command = commands[0] + ' ' + commands[1] + ' ' + commands[2] + ' ' + commands[3] + ' ' + commands[4] + ' ' + commands[5] + ' ' + commands[6] + ' ' + commands[7];
								}
							}

							//if(clothnumber!=""){
							//    selectionname=clothnumber+"."+selectionname;
							//}

							$("#betslipheading").html('You are going to lay ' + selectionname);

							if (location == 9) {
								$("#betslipselection").html(id);
								$("#betslipselectionmob").html(id);
							}
							else {
								$("#betslipselection").html(command);
								$("#betslipselectionmob").html(command);
							}

			     			$("#betslipsize").text($("#marketbook"+newid+" #selection" + id + "  .layitem:nth-child(1)").children("label").last().html());

						}


						$("#betsliplay").html($("#marketbook"+newid+" #selection" + id + "  .layitem:nth-child(1)").children("label").first().html());

						$("#betslipback").html($("#marketbook"+newid+" #selection" + id + "  .backitem:nth-child(3)").children("label").first().html());
						$("#betslipodd").val(parseFloat(odd));
						$("#betslipoddmob").val(parseFloat(odd));
						$("#betslipamount").val(setBetslipamountlowerlimit());
						calculateamounts();
						if (window.matchMedia('(max-width: 767px)').matches) {

							$('#myModalBetslipmob').modal('show');
							$('#joriBet').hide();
							$('#BetSlipMainmob').removeClass('hide');
							$('#aJoriBetmob').removeClass('active');
							$('#aSimpleBetmob').addClass('active');
							$("#BetSlipMainmob").show();
							$("#betslipcontentmob").show();
							$('#simpleBetmob').show();

						}
						else
						{
						$(window).scrollTop(0);

							$('#joriBet').hide();
							$('#BetSlipMain').removeClass('hide');
							$('#aJoriBet').removeClass('active');
							$('#aSimpleBet').addClass('active');
							$("#BetSlipMain").show();
							$("#betslipcontent").show();
							$('#simpleBet').show();
						}


					}
					else
					{
						ShowErrorMsg("Betting not allowed.");
					}
				}
			}

			function showbetslipIN(id, betsliptype, odd, amount, isEdit, marketbookID, marketbookname, betsize, location, parentID)
			{

				if(isInserting==true){
					return;
				}
				$("#isBetSlipEdit").val(isEdit);
				$("#loadedmarketbook").val(marketbookID);
				$("#loadedmarketbookname").val(marketbookname);
				$("#loadedbetlocation").val("");
				$("#clickedlocation").val(location);
				$("#clickedodd").val("");
				$("#clickedbetsize").val(betsize);
				$("#clickedID").val(0);

				// ShowLoader();
				var old = marketbookID.toString();
				var newid = old.replace('.', '');

				var marketbookrunners= $("#marketbookrunners" + newid).val();

				var status = $("#marketbookstatus" + newid).html();
				if(marketbookrunners=="1"){
					status=$("#marketbookstatus" + newid).val();
				}
				var allowedstatus=false;
				var timeofmatch=$("#lbltimer"+newid).text();
				var categoryname=$("#marketbookCategory"+newid).val();
				var betttingallowedmarket=$("#marketbookAllowedBetting"+newid).val();
				var betttingallowedmarketoverall=$("#marketbookAllowedBettingOverAll"+newid).val();

				if(categoryname=="Cricket" ){
					$.ajax({
						url: '/UserBet/GetBettingAllowedbyMarketIDandUserID',

						type: 'POST',
						async: false,
						data: { 'MarketBookID': marketbookID },

						complete: function () { },
						success: function (data) {
							//debugger;
							if (data == "True") {
								$("#marketbookAllowedBetting"+newid).val('1');


								betttingallowedmarket="1";
							}
							else{
								$("#marketbookAllowedBetting"+newid).val('0');
								betttingallowedmarket="0";
							}

						}
					});
				}


				if(betttingallowedmarket=="0" || betttingallowedmarketoverall=="0" )
				{
					allowedstatus==false;
					ShowErrorMsg("Betting not allowed.");
				}
				else
				{
					if (categoryname.indexOf("Racing")>=0)
					{
						if (status=="IN-PLAY"){
							allowedstatus=true;
						}
						else
						{
							//debugger;
							if (status=="GOING LIVE"){

								var minutesremaining=timeofmatch.split(":");
								//debugger;
								if(marketbookname.indexOf("(US)")>=0){
									if(parseFloat(minutesremaining[0])>=0 && parseFloat(minutesremaining[2]) <= @LoggedinUserDetail.BetPlaceWaitandInterval.RaceMinutesBeforeStart && parseFloat(minutesremaining[1])==0){
										allowedstatus=true;
									}
									else{
										if(parseFloat(minutesremaining[0])<0){
											allowedstatus=true;
										}
									}
								}
								else{
									if(parseFloat(minutesremaining[0])>=0 && parseFloat(minutesremaining[2]) <= @LoggedinUserDetail.BetPlaceWaitandInterval.RaceMinutesBeforeStart && parseFloat(minutesremaining[1])==0){
										allowedstatus=true;
									}
									else{
										if(parseFloat(minutesremaining[0])<0){
											allowedstatus=true;
										}
									}
								}
							}
						}
					}
					else
					{
						if (status=="IN-PLAY" ||status=="IN PLAY" || status=="In Play" || status=="GOING LIVE" ){
							allowedstatus=true;
						}
						if (marketbookname.indexOf("Winner")>=0 || marketbookname.indexOf("To Win the Toss")>=0 )
						{
							allowedstatus = true;
						}

					}

					if (  allowedstatus==true) {
						$("#openedbetslipid").val(id);
						$("#betsliptype").val(betsliptype);
						if (betsliptype == 'back') {
							//debugger;
							$("#betslipcontentIN").css("background-color", "#bddff7");
							$("#betslipcontentmobIN").css("background-color", "#bddff7");
							$("#betslipamountlabelIN").css("color", "green");

							//var clothnumber=$("#marketbook"+newid+ " #lblSelectionClothnumber"+id).text().toString().trim();
							var selectionname = $("#marketbook"+newid+ " #lblSelectionName" + id).text().toString().trim();

							//var commands = selectionname.split(' ', 8);
							//var command = commands[0] + ' ' + commands[1] + ' ' + commands[2]+ ' ' + commands[3]+ ' ' + commands[4]+ ' ' + commands[5]+ ' ' + commands[6]+ ' ' + commands[7];

							var commands = selectionname.split(' ', 8);
							var selectionnamelenght=commands.length.toString();
							if (selectionnamelenght==1)
							{
								var command = commands[0];
							}
							if (selectionnamelenght==2)
							{
								var command = commands[0] + ' ' + commands[1];
							}
							if (selectionnamelenght==3)
							{
								var command = commands[0] + ' ' + commands[1] + ' ' + commands[2];
							}
							if (selectionnamelenght==4)
							{
								var command = commands[0] + ' ' + commands[1] + ' ' + commands[2]+ ' ' + commands[3];
							}
							if (selectionnamelenght==5)
							{
								var command = commands[0] + ' ' + commands[1] + ' ' + commands[2]+ ' ' + commands[3]+ ' ' + commands[4];
							}
							if (selectionnamelenght==6)
							{
								var command = commands[0] + ' ' + commands[1] + ' ' + commands[2]+ ' ' + commands[3]+ ' ' + commands[4]+ ' ' + commands[5];
							}
							if (selectionnamelenght==7)
							{
								var command = commands[0] + ' ' + commands[1] + ' ' + commands[2]+ ' ' + commands[3]+ ' ' + commands[4]+ ' ' + commands[5]+ ' ' + commands[6];
							}
							if (selectionnamelenght==8)
							{
								var command = commands[0] + ' ' + commands[1] + ' ' + commands[2]+ ' ' + commands[3]+ ' ' + commands[4]+ ' ' + commands[5]+ ' ' + commands[6]+ ' ' + commands[7];
							}


							//if(clothnumber!=""){
							//    selectionname=clothnumber+"."+selectionname;
							//}
							$("#betslipheadingIN").html('You are going to back ' + selectionname);
							//$("#betslipselection").html(selectionname);
							$("#betslipselectionIN").html(command);
							$("#betslipselectionmobIN").html(command);
							$("#betslipsizeIN").text($("#marketbook"+newid+" #selection" + id + "  .backitem:nth-child(3)").children("label").last().html());

						}
						else {
							$("#betslipcontentIN").css("background-color", "#fdbac8");
							$("#betslipcontentmobIN").css("background-color", "#fdbac8");
							$("#betslipamountlabelIN").css("color", "red");
							//var clothnumber=$("#marketbook"+newid+ " #lblSelectionClothnumber"+id).text().toString().trim();
							var selectionname = $("#marketbook"+newid+ " #lblSelectionName" + id).text().toString().trim();

							//var commands = selectionname.split(' ', 8);
							//var command = commands[0] + ' ' + commands[1] + ' ' + commands[2]+ ' ' + commands[3]+ ' ' + commands[4]+ ' ' + commands[5]+ ' ' + commands[6]+ ' ' + commands[7];

							var commands = selectionname.split(' ', 8);
							var selectionnamelenght=commands.length.toString();
							if (selectionnamelenght==1)
							{
								var command = commands[0];
							}
							if (selectionnamelenght==2)
							{
								var command = commands[0] + ' ' + commands[1];
							}
							if (selectionnamelenght==3)
							{
								var command = commands[0] + ' ' + commands[1] + ' ' + commands[2];
							}
							if (selectionnamelenght==4)
							{
								var command = commands[0] + ' ' + commands[1] + ' ' + commands[2]+ ' ' + commands[3];
							}
							if (selectionnamelenght==5)
							{
								var command = commands[0] + ' ' + commands[1] + ' ' + commands[2]+ ' ' + commands[3]+ ' ' + commands[4];
							}
							if (selectionnamelenght==6)
							{
								var command = commands[0] + ' ' + commands[1] + ' ' + commands[2]+ ' ' + commands[3]+ ' ' + commands[4]+ ' ' + commands[5];
							}
							if (selectionnamelenght==7)
							{
								var command = commands[0] + ' ' + commands[1] + ' ' + commands[2]+ ' ' + commands[3]+ ' ' + commands[4]+ ' ' + commands[5]+ ' ' + commands[6];
							}
							if (selectionnamelenght==8)
							{
								var command = commands[0] + ' ' + commands[1] + ' ' + commands[2]+ ' ' + commands[3]+ ' ' + commands[4]+ ' ' + commands[5]+ ' ' + commands[6]+ ' ' + commands[7];
							}


							//if(clothnumber!=""){
							//    selectionname=clothnumber+"."+selectionname;
							//}

							$("#betslipheadingIN").html('You are going to lay ' + selectionname);
							//$("#betslipselection").html(selectionname);
							$("#betslipselectionIN").html(command);
							$("#betslipselectionmobIN").html(command);
							$("#betslipsizeIN").text($("#marketbook"+newid+" #selection" + id + "  .layitem:nth-child(1)").children("label").last().html());

						}


						$("#betsliplay").html($("#marketbook"+newid+" #selection" + id + "  .layitem:nth-child(1)").children("label").first().html());

						$("#betslipback").html($("#marketbook"+newid+" #selection" + id + "  .backitem:nth-child(3)").children("label").first().html());
						$("#betslipoddIN").val(parseFloat(odd));

						$("#betslipamountIN").val(setBetslipamountlowerlimit());
						calculateamounts();
						if (window.matchMedia('(max-width: 767px)').matches) {

							$('#myModalBetslipmobIN').modal('show');
							$('#BetSlipMainmobIN').removeClass('hide');

							$('#aSimpleBetmobIN').addClass('active');
							$("#BetSlipMainmobIN").show();
							$("#betslipcontentmob").show();
							$('#simpleBetmobIN').show();

						}
						else
						{
							//$('#myModalBetslip').modal('show');
							//$('#BetSlipMain').modal('show');
							//$("#simpleBet").html("");
							$('#BetSlipMainIN').removeClass('hide');
							$('#aSimpleBetIN').addClass('active');
							$("#BetSlipMainIN").show();
							$("#betslipcontentIN").show();
							$('#simpleBetIN').show();
						}


					}
					else
					{
						ShowErrorMsg("Betting not allowed.");
					}
				}
			}



			function showbetslipmultiple(id, betsliptype, odd, amount, isEdit, marketbookID, marketbookname, betsize, location, parentID)
			{

				if(isInserting==true){
					return;
				}
				$("#isBetSlipEdit").val(isEdit);
				$("#loadedmarketbook").val(marketbookID);
				$("#loadedmarketbookname").val(marketbookname);
				if (marketbookname.indexOf("To Be Placed")>=0){
					ShowErrorMsg("Betting not allowed in multi winner markets.");
					return;
				}
				$("#clickedlocation").val(0);
				var old = marketbookID.toString();
				var newid = old.replace('.', '');
				var selectedrunners= $("#selectedrunners"+newid).val();
				if (selectedrunners !="" )
				{
					selectedrunners = JSON.parse(selectedrunners);
					if (selectedrunners.length>1)
					{
						// ShowLoader();
						var status = $("#marketbookstatus" + newid).html();
						var allowedstatus=false;
						var timeofmatch=$("#lbltimer"+$("#lastloadedmarket").val().toString().replace(".","")).text();
						var categoryname=$("#marketbookCategory"+$("#lastloadedmarket").val().toString().replace(".","")).val();
						var betttingallowedmarket=$("#marketbookAllowedBetting"+$("#lastloadedmarket").val().toString().replace(".","")).val();
						var betttingallowedmarketoverall=$("#marketbookAllowedBettingOverAll"+$("#lastloadedmarket").val().toString().replace(".","")).val();

						if(betttingallowedmarket=="0" || betttingallowedmarketoverall=="0" ){
							allowedstatus==false;
						}
						else
						{
							if (categoryname.indexOf("Racing")>=0)
							{
								if (status=="IN-PLAY"){
									allowedstatus=true;
								}
								else
								{
									if (status=="GOING LIVE"){

										var minutesremaining=timeofmatch.split(":");
										//debugger;
										if(marketbookname.indexOf("(US)")>=0){
											if(parseFloat(minutesremaining[0])>=0 && parseFloat(minutesremaining[2]) <= @LoggedinUserDetail.BetPlaceWaitandInterval.RaceMinutesBeforeStart && parseFloat(minutesremaining[1])==0){
												allowedstatus=true;
											}
											else{
												if(parseFloat(minutesremaining[0])<0){
													allowedstatus=true;
												}
											}
										}
										else{
											if(parseFloat(minutesremaining[0])>=0 && parseFloat(minutesremaining[2]) <= @LoggedinUserDetail.BetPlaceWaitandInterval.RaceMinutesBeforeStart && parseFloat(minutesremaining[1])==0){
												allowedstatus=true;
											}
											else{
												if(parseFloat(minutesremaining[0])<0){
													allowedstatus=true;
												}
											}
										}
									}
								}
							}
							else
							{
								if (status=="IN-PLAY"){
									allowedstatus=true;
								}

							}

							if (allowedstatus==true) {

								$("#betsliptype").val(betsliptype);
								if (betsliptype == 'back') {

									$("#betslipcontentmultiple").css("background-color", "#bddff7");
									$("#betslipcontentmultiplemb").css("background-color", "#bddff7");
									$("#betslipheadingmultiple").html('You are going to place back bets ');
									$("#betsliplaymultiplejori").hide();
									$("#betslipbackmultiplejori").show();
									$("#betslipoddlabelmultiple").show();
									$("#betslipamountlabelmultiple").hide();

									$('#rateReverse').click(function () {
										if (!$(this).is(':checked')) {
											$("#betsliplaymultiplejori").hide();
											$("#betslipbackmultiplejori").show();
										}
										else {

											$("#betsliplaymultiplejori").show();
											$("#betslipbackmultiplejori").hide();

										}
									});

								}
								else {
									$("#betslipcontentmultiple").css("background-color", "#fdbac8");
								$("#betslipcontentmultiplemb").css("background-color", "#fdbac8");
								$("#betslipheadingmultiple").html('You are going to place lay bets ');
									$("#betslipbackmultiplejori").hide();
									$("#betsliplaymultiplejori").show();
									$("#betslipoddlabelmultiple").hide();
									$("#betslipamountlabelmultiple").show();

									$('#rateReverse').click(function () {
										if (!$(this).is(':checked')) {
											$("#betsliplaymultiplejori").show();
											$("#betslipbackmultiplejori").hide();
										}
										else {
											$("#betsliplaymultiplejori").hide();
											$("#betslipbackmultiplejori").show();

										}
									});

								}


								$("#betsliplaymultiplejori").html($("#lblfavoritelayprice" + newid).text().toString().trim());

								$("#betslipbackmultiplejori").html($("#lblfavoritebackprice" + newid).text().toString().trim());
								amount=parseInt( setBetslipamountlowerlimit()) * 2;
								$("#betslipamountmultiple").val(amount);
								$("#betslipamountmultiplemb").val(amount);
								calculateamountsmultiple();
								if (window.matchMedia('(max-width: 767px)').matches)
								{
						        $('#myModalBetslipmultiple').modal('show');
									//$('#simpleBetmob').hide();
									//$('#aSimpleBetmob').removeClass('active');

									//$('#BetSlipMainmob').removeClass('hide');
									//$('#BetSlipJorimob').removeClass('hide');
									//$('#aJoriBetmob').addClass('active');
									//$("#BetSlipMainmob").show();
									//$("#betslipcontentmultiplemob").show();
									//$('#joriBetmob').show();
								}
								else
								{
									$('#simpleBet').hide();
									$('#BetSlipJori').removeClass('hide');
									$('#aJoriBet').addClass('active');
									$('#BetSlipJori').show();
									$("#betslipcontentmultiple").show();
									$('#joriBet').show();
								}

							}
							else {
								ShowErrorMsg("Betting not allowed.");
							}
						}


					}
					else
					{
						ShowErrorMsg("Please select atleast two runners.");
					}

				}
				else
				{
					ShowErrorMsg("Please select atleast two runners.");
				}
			}

			function ShowSubmenu() {

				$(".eventtypes").toggle();
				$("#detailsselecteditem").html('');
				$("#inplayul").hide();
				$("#todayhorseraceui").hide();
				$("#inplayul").hide();
				$("#todaygrayhoundraceui").hide();
				// $("#detailsselecteditem").insertAfter($("#sportsitem1"));
				if ($(".eventtypes").css("display") == "none") {

				}
			}
			function addorremovefromfavouriteseventtype(id) {

				var imgsrc = $("#eventtypeitemimg" + id).attr("src");
				var dataurl = "";
				if (imgsrc != "../Content/Images/favoriteChecked.png") {
					dataurl = '/Market/AddtoFavoritesEventType';
				}
				else {
					dataurl = '/Market/RemoveFavoritesEventType'
				}
				$.ajax({
					url: dataurl,

					type: 'POST',

					data: { 'eventtypeID': id },

					complete: function () { },
					success: function (data) {

						if (data == "True") {
							if (imgsrc != "../Content/Images/favoriteChecked.png") {
								$("#eventtypeitemimg" + id).attr({ "src": "../Content/Images/favoriteChecked.png", "title": "Remvoe from favorites" });
							}
							else {
								$("#eventtypeitemimg" + id).attr({ "src": "../Content/Images/FavoriteUncheck.png", "title": "Add to favorites" });
							}
						}


					}
				});
			}

			function LoadCompetitions(id) {

				if ($("#competitions" + id).css("display") == "none") {

					ShowLoader();
					$(".competitions").hide();
					var partialviewname = "/Market/Competiion/" + id;


					$("#competitions" + id).load(partialviewname, function () {
						$("#competitions" + id).show();
						HideLoader();
						$('html,body').animate({ scrollTop: $(this).offset().top - 50 }, 800);
					});

				}
				else {
					$("#competitions" + id).hide();

				}
			}
			function LoadEvents(id) {

				if ($("#Events" + id).css("display") == "none") {

					ShowLoader();
					$(".events").hide();
					var partialviewname = "/Market/Events/" + id;

					//var competitionname = $("#competitionsItem" + id).text();

					//$("#detailsselecteditem").html(" > " + competitionname);

					$("#Events" + id).load(partialviewname, function () {
						$("#Events" + id).show();
						HideLoader();
					});
				}
				else {
					$("#Events" + id).hide();

				}
			}
			function LoadMarketCatalogue(id) {

				if ($("#MarketCatalogue" + id).css("display") == "none") {

					ShowLoader();
					$(".marketcatalogue").hide();
					var partialviewname = "/Market/MarketCatalogue/" + id;
					//var eventname = $("#eventitem" + id).text();
					//var competitionname = $("#detailsselecteditem").html().split("<br>");
					//$("#detailsselecteditem").html($("#detailsselecteditem").html() + " > " + eventname);
					//if(competitionname[1]){
					//    eventname= competitionname[0] +"<br/><span class='breadcrumbeventname'> > "+ eventname + "</span>";
					//    $("#detailsselecteditem").html(eventname);
					//}
					//else{
					//    eventname= $("#detailsselecteditem").html()+"<br/><span class='breadcrumbeventname'> > "+ eventname + "</span>";
					//    $("#detailsselecteditem").html(eventname);
					//}


					$("#MarketCatalogue" + id).load(partialviewname, function () {
						$("#MarketCatalogue" + id).show();
						HideLoader();
					});
				}
				else {
					$("#MarketCatalogue" + id).hide();
					//var competitionname = $("#detailsselecteditem").html().split("<br>");
					//$("#detailsselecteditem").html(competitionname[0]);
				}
			}
	function lastLevelBreadcrumb(id)
	{

				$(".competitions").hide();
				$(".eventtypes").hide();
				// ShowInPlay();
				$("#lastsavedhtml").val('');
				$("#marketbook").html('');
				$("#todayhorseraceui").hide();
				$("#inplayul").hide();
				$("#todaygrayhoundraceui").hide();
				togglemainsportsmenu(3,"");
				LoadMarketType(id);
				$("#lastloadedmarket").val(id);

			}

	function SetLastLoadedMarket(id)
	{
		          LoadUserBets();
				$("#fancymarketbook").html("");
				if($(".nav-tabs li").length > 0){
					$("#lastloadedmarket").val(id);
					SetFirstItemActive(id);
					$(".averagecalculations").html("");
					LoadActiveMarket();

					var mainsportcat1=$("#marketbookCategory"+$("#lastloadedmarket").val().toString().replace(".","")).val();
					if (mainsportcat1 == "Cricket") {
						GetActiveMarketINFancy();
						GetActiveMarketKJ();
						GetActiveMarketSFIg();
						GetMarketFigure();
						//Indianfancymarketbook1();
						CheckForCricketScores();
					}
					else {
						if (mainsportcat1 == "Soccer") {
							CheckforSoccer();
							$("#SFigfancymarketbook").hide();
							$("#btnscorecard").show()
							$('#btnPlay').show();
						}
						else {
							if (mainsportcat1 == "Tennis") {
								CheckForTinnes();
								$("#SFigfancymarketbook").hide();
								$("#btnscorecard").show()
								$('#btnPlay').show();
							}
							else {
								$("#SFigfancymarketbook").hide();
								$("#btnscorecard").hide()
								$('#btnPlay').hide();
							}
						}
					}

				}else{
					$("#lastloadedmarket").val("");
				}
				@*if(@LoggedinUserDetail.GetUserTypeID()==1){
            ShowAverageSection();
              }*@

    }

			function Position(marketbookID) {

				if (marketbookID != "") {
					$.ajax({
						type: "GET",
						url: "/DashBoard/UserPosition",

						data: { 'marektbookID': marketbookID },
						success: function (result) {
							//debugger;
							//$("#completedmatcedbetscontentFancy").html(result);
							//$("#myModalposition").modal('show');

						}

					});
				}

			}



    function LoadMarketTypeTWT(id) {



				$("#lastsavedhtmlTWT").val($("div[data-marketid='" + $("#lastloadedmarketTWT").val() + "']").html());


				$.ajax({
					url: '/Market/MarketBookToWinTheToss/',

					type: 'GET',
					async: true,
					data: { 'ID': id },

					complete: function () {
						HideLoader();

					},
					success: function (data) {
						if(data=="Limit exceed"){
							ShowErrorMsg("You already have opened ten markets please close some markets and try again.");
							return false;
						}
						else{

							$("#marketbookTWT").html(data);

							if ($("#lastsavedhtmlTWT").val().trim() == "") {
								$("#lastsavedhtmlTWT").val($("#marketbookTWT").html());
							}
							// comparemarketbook();

							//var lastloadedmarket = $("#lastloadedmarket").val().toString();
							if ($("#lastloadedmarketTWT").val() == "") {
								$("#lastloadedmarketTWT").val($(".nav-tabs li:last").attr("data-value"));
							}





							LoadActiveMarketTWT();



							var marketbbokname=$("#marketbookname"+$("#lastloadedmarketTWT").val().toString().replace(".","")).val();
							var marketbookdID= $("#lastloadedmarketTWT").val().toString().replace(".","");
							var mainsportcat=$("#marketbookCategory"+$("#lastloadedmarketTWT").val().toString().replace(".","")).val();
							var mainsportrunners=$("#marketbookrunners"+$("#lastloadedmarketTWT").val().toString().replace(".","")).val();
							$(".checkboxrunnernameavgTWT").slice(0,2).each(function() {
								//debugger;
								$(this).prop("checked",true);
								AddRunnersforaveragecalTWT($(this).attr("data-value"));
							});


						}

						//var isCompleted = $("#marketstatus").val();
						//var isinplay = $("#inplaystatus").val();
						//if (isinplay == "True" && isCompleted == "OPEN") {



						//}


					}
				});


	        }

	function LoadMarketTypeSoccerGoal() {

		var eventid = $("#eventidfor" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
		$.ajax({
			url: '/Market/MarketBooksoccergoal/',

			type: 'GET',
			async: false,
			data: { 'EventID': eventid },

			complete: function () {
				HideLoader();

			},
			success: function (data) {

				if (data != "") {
					$("#marketbooksoccer").html(data);

					setTimeout(function () {
						LoadMarketTypeSoccerGoal();
					}, 500);
					//LoadActiveMarketFancyIN();
				}
			}
		});


	}

			function LoadMarketType(id) {
				debugger;
				$("#liscorecard").hide();
				// $("#lastsavedhtml").val($("#marketbook").html());
				$("#lastsavedhtml").val($("div[data-marketid='" + $("#lastloadedmarket").val() + "']").html());
				dataurl = '/Market/MarketBook/';
				ShowLoader();
				$.ajax({
					url: '/Market/MarketBook/',

					type: 'GET',
					async: true,
					data: { 'ID': id },

					complete: function () {
						HideLoader();

					},
					success: function (data) {
						if(data=="Limit exceed"){
							ShowErrorMsg("You already have opened ten markets please close some markets and try again.");
							return false;
						}
						else{

							$("#marketbook").html(data);

							if ($("#lastsavedhtml").val().trim() == "") {
								$("#lastsavedhtml").val($("#marketbook").html());
							}
							//comparemarketbook();


							if ($("#lastloadedmarket").val() == "") {
								$("#lastloadedmarket").val($(".nav-tabs li:last").attr("data-value"));
							}
							//SetSelectedRunners();
							SetFirstItemActive($("#lastloadedmarket").val());
							$("#activesheetname").val($("#marketbooksheet" + $("#lastloadedmarket").val().replace(".", "")).val());
							debugger;
							 LoadUserBets();

							LoadActiveMarket();
							HideLoader();
							debugger;
							var mainsportcat1 = $("#marketbookCategory" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
							if (mainsportcat1 == null || mainsportcat1=="")
							{
								mainsportcat1 = "Cricket";
							}
							if(mainsportcat1=="Cricket")
							{
					            GetActiveMarketINFancy();
						        // GetActiveMarketKJ();
							     //GetActiveMarketSFIg();
								// GetMarketFigure();
							 	
						        // CheckForCricketScores();
							////GetActiveMarketFancy();
							}
							else
							{
								if (mainsportcat1 == "Soccer") {
									CheckforSoccer();
									$("#KJfancymarketbook").hide();
									$("#KJfancymarketbook").hide();
									$("#Indianfancymarketbook1").hide();
									$("#SFigfancymarketbook").hide();
									$("#btnscorecard").show()
									$('#btnPlay').show();

								}
								else {
									if (mainsportcat1 == "Tennis") {
										CheckForTinnes();
										$("#Indianfancymarketbook1").hide();
										$("#KJfancymarketbook").hide();
										$("#SFigfancymarketbook").hide();
										$("#btnscorecard").show()
										$('#btnPlay').show();
									}
									else {
										$("#KJfancymarketbook").hide();
										$("#Indianfancymarketbook1").hide();
										$("#SFigfancymarketbook").hide();
										$("#btnscorecard").hide()
										$('#btnPlay').hide();
									}
								}
							}
							//ReletedEvents(mainsportcat1);
							//var isallowedtogetscore = $("#marketbookgetscores" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
							//var getupdatesfrom= $("#getmatchupdatesfrom" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
							//if (isallowedtogetscore == "true" && getupdatesfrom=="Other") {
							//	$("#liscorecard").show();
							//}
					   var marketbbokname=$("#marketbookname"+$("#lastloadedmarket").val().toString().replace(".","")).val();
							var marketbookdID= $("#lastloadedmarket").val().toString().replace(".","");
							var mainsportcat=$("#marketbookCategory"+$("#lastloadedmarket").val().toString().replace(".","")).val();
							var mainsportrunners = $("#marketbookrunners" + $("#lastloadedmarket").val().toString().replace(".", "")).val();
							if (marketbbokname == "" || marketbbokname == null)
							{
								marketbbokname = "Match Odds";
								mainsportcat = "Cricket";
								mainsportrunners = 2;
							}
							
							if (marketbbokname.indexOf("Match Odds")>=0 && mainsportcat.indexOf("Cricket")>=0 && mainsportrunners=="3" ){
								$(".checkboxrunnernameavg").show();

							}
							$("#marketbookTWT").hide();
							if (marketbbokname.indexOf("Match Odds")>=0 && mainsportcat.indexOf("Cricket")>=0 && parseInt( mainsportrunners)>=2 ){
								CheckForWintTheTossMarket();
								$(".checkboxrunnernameavg").slice(0,2).each(function() {
									//debugger;
									$(this).prop("checked",true);
									AddRunnersforaveragecal($(this).attr("data-value"));
								});
							}

							if (marketbbokname.indexOf("Match Odds") >= 0 && mainsportcat.indexOf("Soccer") >= 0) {
								CheckForSoccergoalMarket();
								$(".checkboxrunnernameavg").slice(0, 2).each(function () {
									//debugger;
									$(this).prop("checked", true);
									AddRunnersforaveragecal($(this).attr("data-value"));
								});
							}
						}
					}
				});


			}
			//function updatematchbetstatus(divid, amount, unmatchitemid) {
			//    var selectionid = $(divid).attr("data-selectionid");
			//    var odd = $(divid).attr("data-odd");
			//    // var amount = parseInt($(divid).attr("data-amount"));
			//    var bettype = $(divid).attr("data-bettype");
			//    var ID = $(divid).attr("data-id");
			//    var userbetsize = $(divid).attr("data-betsize");

			//    var ParentbetID = $(divid).attr("data-parentID");
			//    var classselctor = "";

			//    if (bettype == 'back') {
			//        classselctor = " .backitem";
			//    } else {
			//        classselctor = " .layitem";
			//    }
			//    $("#selection" + selectionid + classselctor).each(function () {

			//        var liveodd = $(this).children("label").first().html().trim();
			//        var betsize = parseInt($(this).children("label").last().html().trim());
			//        // var parentbetsize = $("#lblbetamount" + ParentbetID).html().trim();


			//        if (liveodd == odd) {

			//            if (userbetsize != betsize) {

			//                if (betsize >= amount) {
			//                    deleteuserbet(unmatchitemid);
			//                    UpdateamountbyID(ID, amount, true);

			//                    newamount = 0;
			//                    return newamount;
			//                }
			//                else {
			//                    newamount = amount - betsize;
			//                    UpdateamountbyID(ID, betsize, true);
			//                    UpdateamountbyID(unmatchitemid, -1 * betsize, false);
			//                    return newamount;

			//                }

			//            }



			//        }



			//    });
			//}

		function ReletedEvents(eventtype) {
			$.ajax({
				type: "GET",
				url: '/DashBoard/GetReletedevent',

				data: { 'eventtype': eventtype },
				success: function (result) {
					$("#relatedevent").html(result);
				}

			});
		}
	function comparemarketbook() {

				var marketbookID=$("#lastloadedmarket").val().toString().replace(".","");
				var oldmarketbook = $("#lastsavedhtml").val();
				$("div[data-marketid='" + $("#lastloadedmarket").val() + "']").html()
				var newmarketbook = $("div[data-marketid='" + $("#lastloadedmarket").val() + "']").html()
				// var newmarketbook = $("#marketbook").html();
				//var oldpricesandsize = $(oldmarketbook).find(".priceandsize").find("label");
				//var newpricesandsize = $(newmarketbook).find(".priceandsize").find("label");
				var oldpricesandsize = $(oldmarketbook).find(".matchcolors").find("label");
				var newpricesandsize = $(newmarketbook).find(".matchcolors").find("label");

				for (i = 0; i <= oldpricesandsize.length - 1; i++) {
					if (i < newpricesandsize.length) {
						var oldvalue = $(oldpricesandsize[i]).html();
						var newvalue = $(newpricesandsize[i]).html();
						if (oldvalue != newvalue) {

							var id = $(newpricesandsize[i]).attr("id");
							var parentid= $(newpricesandsize[i]).parent().attr("id");

							$("#marketbook"+marketbookID+ " #" + parentid) .addClass("highlighted").delay(50).queue(function () {
								$(this).removeClass("highlighted").dequeue();
							});;

							//    " #backitemval"+i.toString()+ marketbook.Runners[i].SelectionId.toString()).addClass("highlighted").delay(100).queue(function () {
							//    $(this).removeClass("highlighted").dequeue();
							//});;
							//" #" + id);
							//.addClass("highlighted").delay(100).queue(function () {
							//    $(this).removeClass("highlighted").dequeue();
							//});
						}
					}

				}
			}
			function comparemarketbookTWT() {
				var marketbookID=$("#lastloadedmarketTWT").val().toString().replace(".","");
				var oldmarketbook = $("#lastsavedhtmlTWT").val();
				$("div[data-marketid='" + $("#lastloadedmarketTWT").val() + "']").html()
				var newmarketbook = $("div[data-marketid='" + $("#lastloadedmarketTWT").val() + "']").html()
				// var newmarketbook = $("#marketbook").html();
				//var oldpricesandsize = $(oldmarketbook).find(".priceandsize").find("label");
				//var newpricesandsize = $(newmarketbook).find(".priceandsize").find("label");
				var oldpricesandsize = $(oldmarketbook).find(".matchcolors").find("label");
				var newpricesandsize = $(newmarketbook).find(".matchcolors").find("label");

				for (i = 0; i <= oldpricesandsize.length - 1; i++) {
					if (i < newpricesandsize.length) {
						var oldvalue = $(oldpricesandsize[i]).html();
						var newvalue = $(newpricesandsize[i]).html();
						if (oldvalue != newvalue) {
							//debugger;
							var id = $(newpricesandsize[i]).attr("id");

							$("#marketbook"+marketbookID+ " #" + id) .addClass("highlighted").delay(50).queue(function () {
								$(this).removeClass("highlighted").dequeue();
							});;
							//    " #backitemval"+i.toString()+ marketbook.Runners[i].SelectionId.toString()).addClass("highlighted").delay(100).queue(function () {
							//    $(this).removeClass("highlighted").dequeue();
							//});;
						}
					}

				}
			}

			var newamount = 0;


		</script>
		<link href="~/Content/bootstrap-submenu.css" rel="stylesheet" />
		<script src="~/Scripts/bootstrap-submenu.js"></script>
		<script src="~/Scripts/DetectChanges.js"></script>
	