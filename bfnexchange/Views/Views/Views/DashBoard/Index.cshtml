@model bfnexchange.Models.AccessRightsbyUserType

@{
   
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-md-12 no-padding">
  

</div>
<div class="col-md-12 no-padding">
    <div class="col-md-12 no-padding">
        <div class="mainheaderdiv">
            <div>
              
               
                <div class="navbar-collapse collapse usernameandliablity">
                    <ul class="nav navbar-header">
                        <li>
                            <label class="label navbar-label" onclick="Togglebalanceandliablity()">@Model.Username</label>
                        </li>

                       <li>
                            <div class="balanceandliabaility">
                                 <input type="hidden" value="@Model.AccountBalance" id="AccountBalanceShow" />
                                <label id="CurrentStartingBalance" class="label navbar-label">@Model.StartingBalance</label><br />
                               

                            </div>
                            <label id="sss" class="label navbar-label">@Model.NetBalance</label><Br />
                            <label id="CurrentUserLiabality" class="label navbar-label">@Model.CurrentLiabality</label>
                            <label id="TotalLiabality" class="label navbar-label">Total Liabality: 0.00</label>
                        </li>

                      
                            
                         

                                @if(Model.ViewLedgerofUsers == true)
            {
                                    <li>
                                        <input class="navbar-buttons" type="button" onclick="LoadPartialViewCreateUser('CreateUser')" value="Manage User" />


                                    </li>

                                }
                                @if (Model.ViewActivityofUser == true)
            {
                                    <li>
                                        <input class="navbar-buttons" type="button" onclick="LoadPartialViewbyid('ViewActivity')" value="View Activity" />


                                    </li>
                                }
                                @if (LoggedinUserDetail.GetUserTypeID() == 2 )
            {
                                    <li>
                                        <input class="navbar-buttons" type="button" onclick="LoadPartialViewAddCredit('AddCredit')" value="Add/Remove credit" />

                                    </li>
                                }
                                
                               
                                @if (Model.ViewLedgerofUsers == true)
            {
                                    <li>
                                        <input class="navbar-buttons" type="button" onclick="LoadPartialViewbyid('Ledger')" value="View Ledger" />

                                    </li>
                                }
                               

                                @if (LoggedinUserDetail.GetUserTypeID() == 1)
            {
                                    <li>
                                        <input class="navbar-buttons" type="button" onclick="LoadPartialViewbyid('PoundRate')" value="Set Pound Rate" />

                                    </li>
                                }
  @if (LoggedinUserDetail.GetUserTypeID() == 1)
            {
                                    <li>
                                        <input class="navbar-buttons" type="button" onclick="LoadPartialViewbyid('FancysettingsandResultPost')" value="Fancy Result Post" />

                                    </li>
                                }
                                <li>
                                    <input class="navbar-buttons" type="button" onclick="ShowResetPassword()" value="Reset Password" />

                                </li>
                                <li>
                                    <input class="navbar-buttons" type="button" onclick="gotosignout()" value="Sign Out" />

                                </li>



                          
                       


                    </ul>




                </div>
                <div id="libalitybymarket" style="display:none">

                </div>
            </div>

            <div class="container">
                <div class="errordivfixed">
                    <label id="lblMainError"></label>
                </div>
                <audio id="audio" src="../Content/beeptone.mp3" autostart="false"></audio>

                <script>
                    function PlaySound() {
                        var sound = document.getElementById("audio");
                        sound.play()
                    }
                </script>


            </div>
        </div>

    </div>
    <div class="col-md-9 col-sm-12 no-padding">
      
        <div id="partialviews">

        </div>
    </div>

    <!-- Modal -->
    <div id='myModal' class='modal'>
        <div class="modal-dialog">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">My Market</h4>
            </div>
            <div class="modal-content">
                <div id='myModalContent'></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
    <input type="hidden" id="callerfunction" value="" />
    <input type="hidden" id="userid" value="@LoggedinUserDetail.GetUserID()" />
    <div id='myModalPassword' class='modal'>
        <div class="modal-dialog">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Enter your Password</h4>
            </div>
            <div class="modal-content">

                <input type="password" id="txtAdminPassword" />

            </div>
            <div class="modal-footer">
                <button id="btnCheckPassword" type="button" class="btn btn-default">Continue</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
    <div id='myModalCompletedMatchedBets' class='modal'>
        <div class="modal-dialog">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">User Bets</h4>
            </div>
            <div id="completedmatcedbetscontent" class="modal-content">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
    <div id='myModalCompletedMatchedBetsFacny' class='modal'>
        <div class="modal-dialog">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="bookheading">Book</h4>
            </div>
            <div id="completedmatcedbetscontentFancy" class="modal-content">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>

</div>
<script type="text/javascript">
 //if(localStorage.openpages){
       
 //   	window.location="http://google.com";
 //   }else{
 //       localStorage.openpages = "1";
 //       window.onbeforeunload = function () {
 //           localStorage.openpages = "";
 //       };
 //   }   
    $('.mainheaderdiv').nextAll('div').remove();
    var fromclicklocation="";
    function showcompleteduserbets(userid, marketbookID) {
        if (marketbookID != "") {
            $.ajax({
                type: "GET",
                url: "/DashBoard/showcompleteduserbets",

                data: { 'userid': userid, 'marektbookID': marketbookID },
                success: function (result) {
                    debugger;
                    $("#completedmatcedbetscontent").html(result);
                    $("#myModalCompletedMatchedBets").modal('show');

                }

            });
        }

    }
    function showcompleteduserbetsFacny(marketbookID) {
        if (marketbookID != "") {
            $.ajax({
                type: "GET",
                url: "/DashBoard/showcompleteduserbetsFancy",

                data: {  'marektbookID': marketbookID },
                success: function (result) {
                    debugger;
                    $("#completedmatcedbetscontentFancy").html(result);
                    $("#myModalCompletedMatchedBetsFacny").modal('show');

                }

            });
        }

    }

    function Togglebalanceandliablity(){
        $(".balanceandliabaility").toggle();
    }
    function LoadUserBetsbyAgent()
    {
        var partialviewname = "/DashBoard/UserBetsbyAgent";
        ShowLoader();
        $("#partialviews").load(partialviewname, function () {
            HideLoader();

        });
    }
    
    function ShowResetPassword() {
	 $('.mainheaderdiv').nextAll('div').remove();
        ShowLoader();
        var partialviewname = "/DashBoard/ResetPasswordView";
        $("#partialviews").load(partialviewname, function () {

        });
		 $(".usernameandliablity").removeClass("in");
		 $(".usernameandliablity").addClass("collapse");
		 togglemainsportsmenu(3,"");
		HideLoader();
    }
    function gotosignout() {
        window.location = "/Account/LogOff?ID=" + $("#userid").val();
    }
   
    $(document).ready(function () {
	
        function CheckUserStatus(){
		try{
		
            if(@LoggedinUserDetail.GetUserTypeID()==3){
                $.ajax({
                    type: "POST",
                    url: "/DashBoard/GetStatus",

                    success: function (result) {

                        if (result == "False") {
                            window.location = "/Account/LogOff?ID=" + $("#userid").val();
                        }
                        else{
                            setTimeout(function () { CheckUserStatus() }, 3000);
                          
                        }


                    },
                    error: function (jqXHR, exception) {
                        CheckUserStatus();
                    }
                });
                
            }
			}
	catch (err) 
  { 
    
   setTimeout(function(){ CheckUserStatus(),2000});
 }
        }
        CheckUserStatus();
        @*if(@LoggedinUserDetail.GetUserTypeID()==3){
            setInterval(function () {
                $.ajax({
                    type: "POST",
                    url: "/DashBoard/GetStatus",

                    success: function (result) {

                        if (result == "False") {
                            window.location = "/Account/LogOff?ID=" + $("#userid").val();
                        }


                    }
                });

            }, 5000);
        }*@


LoadMarketView('MarketView');
        $("#btnCheckPassword").click(function () {

            if ($("#txtAdminPassword").val().length >= 6) {
                $("#btnCheckPassword").prop("disabled", true);
                $.ajax({
                    url: '/DashBoard/VerifyPassword',

                    type: 'POST',

                    data: { 'password': $("#txtAdminPassword").val() },

                    complete: function () { },
                    success: function (data) {

                        if (data == "True") {
                            $("#btnCheckPassword").prop("disabled", false);
                            $("#myModalPassword").modal('hide');
                            $("#txtAdminPassword").val('');

                            if ($("#callerfunction").val() == "updatemarket") {


                                ShowLoader();
								 $('#ddlUsers > option:selected').each(function() {
                                    AssignMarketToUser( $(this).val());
                                });
                                //AssignMarketToUser($("#ddlUsers").val());
                                HideLoader();
                                ShowErrorMsg("User Market Updated Successfully");
                            }
                            if ($("#callerfunction").val() == "addcredit") {

                                ShowLoader();
                                $.ajax({
                                    url: '/DashBoard/AddCredittoUser',
                                    async: true,
                                    type: 'POST',
                                    data: { 'AccountBalance': $("#AccountBalance").val(), 'UserID': $("#ddlUsers").val(), 'Username': $("#ddlUsers option:selected").text(), 'AccountsTitle': $("#AccountsTitle").val(),'IsCredit':$("#chkisCredit").is(":checked") },

                                    complete: function () { },
                                    success: function (data) {
                                        if (data == "True") {
                                            $("#myModalPassword").modal('hide');
                                           // ShowCurrentBalance($("#AccountBalance").val());
                                            HideLoader();
                                            ShowErrorMsg("Credit added Successfully");
                                            $("#AccountBalance").val('');
                                            $("#Password").val('');
                                            LoadUserDetails();
                                        }
                                        else {
                                            HideLoader();
                                            ShowErrorMsg(data);
                                        }
                                    }
                                });
                            }
                            if ($("#callerfunction").val() == "transferbalance") {
                                
                                ShowLoader();
                                $.ajax({
                                    url: '/DashBoard/TransferBalanceFromOneUsertoAnother',
                                    async: true,
                                    type: 'POST',
                                    data: { 'AccountBalance': $("#AccountBalance").val(), 'UserIDFrom': $("#ddlUsersFrom").val(), 'UsernameFrom': $("#ddlUsersFrom option:selected").text(), 'AccountsTitle': $("#AccountsTitle").val(),'UserIDTo': $("#ddlUsersTo").val(), 'UsernameTo': $("#ddlUsersTo option:selected").text() },

                                    complete: function () { },
                                    success: function (data) {
                                        if (data == "True") {
                                            $("#myModalPassword").modal('hide');
                                            ShowCurrentBalance($("#AccountBalance").val());
                                          
                                            $("#AccountBalance").val('');
                                            $("#AccountsTitle").val('');
                                            GetcurrentbalancebyUserIDFrom();
                                            GetcurrentbalancebyUserIDTo();
                                            $("#Password").val('');
                                            HideLoader();
                                            ShowErrorMsg("Balance Tranfered added Successfully");
                                           // LoadUserDetails();
                                        }
                                        else {
                                            HideLoader();
                                            ShowErrorMsg(data);
                                        }
                                    }
                                });
                            }
                            
                            if ($("#callerfunction").val() == "removecredit") {
                                ShowLoader();
                                $.ajax({
                                    url: '/DashBoard/RemoveCredittoUser',
                                    async: true,
                                    type: 'POST',
                                    data: { 'AccountBalance': $("#AccountBalance").val(), 'UserID': $("#ddlUsers").val(), 'Username': $("#ddlUsers option:selected").text(), 'AccountsTitle': $("#AccountsTitle").val(),'IsCredit':$("#chkisCredit").is(":checked") },

                                    complete: function () { },
                                    success: function (data) {

                                        if (data == "True") {
                                            $("#myModalPassword").modal('hide');
                                            ShowCurrentBalance(-1 * ($("#AccountBalance").val()));
                                            HideLoader();
                                            ShowErrorMsg("Credit removed Successfully");
                                            $("#AccountBalance").val('');
                                            $("#Password").val('');
                                            LoadUserDetails();
                                        }
                                        else {
                                            HideLoader();
                                            ShowErrorMsg(data);
                                        }
                                        //// $form.html(data);
                                        // $form.removeData('validator');
                                        // $form.removeData('unobtrusiveValidation');
                                        // $.validator.unobtrusive.parse($form);
                                    }
                                });
                            }

                        }
                        else {
                            $("#btnCheckPassword").prop("disabled", false);
                            ShowErrorMsg(data);
                        }

                    }
                });
            }
            else {
                $("#btnCheckPassword").prop("disabled", false);
            }

        });

    });
    function VerifyPassword(password) {

    }
    function LoadMyMarket(id) {
       // $('.mainheaderdiv').nextAll('div').remove();
        ShowLoader();
        var partialviewname = "/DashBoard/" + id;
        $("#myModalContent").load(partialviewname, function (responseTxt, statusTxt, xhr) {
            debugger;
            HideLoader();
            $('#myModal').modal('show');

        });
        $(".usernameandliablity").removeClass("in");
        $(".usernameandliablity").addClass("collapse");
    }
    function GetcurrentbalancebyUserIDFrom() {
        $.ajax({
            url: '/DashBoard/GetCurrentBalanceofUser',
           
            type: 'POST',
            data: { 'userID': $("#ddlUsersFrom").val() },
            complete: function () { },
            success: function (data) {
                $("#lblFromBlanace").text(data);


            }
        });
    }
    function GetcurrentbalancebyUserIDTo() {
        $.ajax({
            url: '/DashBoard/GetCurrentBalanceofUser',

            type: 'POST',
            data: { 'userID': $("#ddlUsersTo").val() },
            complete: function () { },
            success: function (data) {
                $("#lblToBlanace").text(data);


            }
        });
    }
    function addtofavourites(id) {

    }
    function ShowErrorMsg(msg) {
        PlaySound();
        $("#lblMainError").text(msg);
        $('.errordivfixed').fadeIn(500).delay(100).fadeOut(500).fadeIn(500).delay(100).fadeOut(500);


    }

    function LoadMarketView(partialviewid) {
        $('.mainheaderdiv').nextAll('div').remove();
        ShowLoader();
        var partialviewname = "/Market/Index";
        $("#partialviews").load(partialviewname, function () {
            HideLoader();
           

        });
        $(".usernameandliablity").removeClass("in");
        $(".usernameandliablity").addClass("collapse");
    }
    function LoadPartialViewbyid(partialviewid) {
        $('.mainheaderdiv').nextAll('div').remove();
        ShowLoader();
        var partialviewname = "/DashBoard/" + partialviewid;
        $("#partialviews").load(partialviewname, function () {
            togglemainsportsmenu(3,"");
            HideLoader();
        });

        $("#ddlUsers").change(function () {
            LoadUserDetails();
        });
        $(".usernameandliablity").removeClass("in");
        $(".usernameandliablity").addClass("collapse");
    }
    function addorremovefromfavouritesevents(id) {
        debugger;
        var imgsrc = $("#eventitemimg" + id).attr("src");
        var dataurl = "";
        if (imgsrc != "../Content/Images/favoriteChecked.png") {
            dataurl = '/Market/AddtoFavoritesEvent';
        }
        else {
            dataurl = '/Market/RemoveFromFavoritesEvent'
        }
        $.ajax({
            url: dataurl,

            type: 'POST',

            data: { 'eventID': id },

            complete: function () { },
            success: function (data) {

                if (data == "True") {
                    if ($('#myModal').css("display") == "block") {
                        LoadMyMarket('MyMarket');
                    }
                    if (imgsrc != "../Content/Images/favoriteChecked.png") {
                        $("#eventitemimg" + id).attr({ "src": "../Content/Images/favoriteChecked.png", "title": "Remvoe from favorites" });
                    }
                    else {
                        $("#eventitemimg" + id).attr({ "src": "../Content/Images/FavoriteUncheck.png", "title": "Add to favorites" });
                    }
                }


            }
        });

    }
    function AssignMarketToUser(userID) {

        var selected = [];
        $("#MarketTreeView label input[type=checkbox]:checked").each(function () {
            selected.push($(this).attr("id"));
        });

        var allitemsarr = [];
        for (i = 0; i <= selected.length - 1; i++) {
            var itemarr = "";
            var selecteditem = $("input[id='" + selected[i] + "']").val();

            var parents = $("input[id='" + selected[i] + "']").parents("li");
            var parentdata = "";
            var selectionItems = "";
            if (parents.length == 4) {

                var opendate="";
                for (a = parents.length - 1; a >= 0 ; a--) {
                    if (parents[a] != "#") {

                        itemarr = itemarr + "#" + $(parents[a]).attr("data-value");

                    }
                    if (a == 0) {
                        var checkboxtext = $("label[for='marketcatalogueitem" + $(parents[a]).attr("data-value") + "']").text().trim();
                        itemarr = itemarr + "#" + checkboxtext;
                        opendate=$(parents[a]).attr("data-marketopentime");
                        //   var ulid = $("ul[id='selectionitemsfor" + $(parents[a]).attr("data-value") + "']");
                        $("ul[id='selectionitemsfor" + $(parents[a]).attr("data-value") + "'] li").each(function () {

                            var selectitem = "";
                            selectitem = $(this).attr("data-value") + "|" + $(this).html().trim()+"|"+$(this).attr("data-jockeyname")+"|"+$(this).attr("data-wearingdesc")+"|"+$(this).attr("data-wearing")+"|"+$(this).attr("data-clothnumber");
                            selectionItems = selectionItems + "=" + selectitem;
                        });

                    }
                    if (a == 1) {
                        var checkboxtext = $("label[for='eventitem" + $(parents[a]).attr("data-value") + "']").text().trim();
                        debugger;
                        //  opendate = $(parents[a]).attr("data-opendate");
                        itemarr = itemarr + "#" + checkboxtext;
                    }
                    if (a == 2) {
                        var checkboxtext = $("label[for='competitionitem" + $(parents[a]).attr("data-value") + "']").text().trim();
                        itemarr = itemarr + "#" + checkboxtext;
                    }
                    if (a == 3) {
                        var checkboxtext = $("label[for='eventypeitem" + $(parents[a]).attr("data-value") + "']").text().trim();
                        itemarr = itemarr + "#" + checkboxtext;
                    }

                }

                itemarr = itemarr.substr(1);
            }
            selectionItems = selectionItems.substr(1);
            debugger;
            if (itemarr != "") {
                allitemsarr.push(itemarr+"#"+selectionItems+"#"+opendate);
            }

        }

        debugger;
        $.ajax({
            url: '/DashBoard/UpdateUserMarket',

            type: 'POST',
 async:false,
            data: { 'allitemsarr': allitemsarr, 'userID': userID,'DeleteOldMarket':$("#chkDeleteoldmarkets").prop('checked') },

            complete: function () { },
            success: function (data) {

                if (data == "True") {



                }
                else {
                    HideLoader();
                    ShowErrorMsg(data);
                }

            }
        });

    }
    //function AssignMarketToUser(userID) {

    //    var selected = [];
    //    $("#MarketTreeView label input[type=checkbox]:checked").each(function () {
    //        selected.push($(this).attr("id"));
    //    });

    //    var allitemsarr = [];
    //    for (i = 0; i <= selected.length - 1; i++) {
    //        var itemarr = "";
    //        var selecteditem = $("input[id='" + selected[i] + "']").val();

    //        var parents = $("input[id='" + selected[i] + "']").parents("li");
    //        var parentdata = "";
    //        var selectionItems = "";
    //        var sheetname="";
    //        if (parents.length == 4) {

    //            var opendate="";
    //            for (a = parents.length - 1; a >= 0 ; a--) {
    //                if (parents[a] != "#") {

    //                    itemarr = itemarr + "+" + $(parents[a]).attr("data-id") + "+" +$(parents[a]).attr("data-value");

    //                }
    //                //if (a == 0) {
    //                //       var checkboxtext = $("label[for='marketcatalogueitem" + $(parents[a]).attr("data-value") + "']").text().trim();
    //                //       itemarr = itemarr + "+" + checkboxtext;


    //                //  }
    //                if (a == 0) {
    //                    //var checkboxtext = $("label[for='marketcatalogueitem" + $(parents[a]).attr("data-value") + "']").text().trim();
    //                    //   itemarr = itemarr + "+" + checkboxtext;
    //                    //   var ulid = $("ul[id='selectionitemsfor" + $(parents[a]).attr("data-value") + "']");
    //                    $("ul[id='selectionitemsfor" + $(parents[a]).attr("data-id") + "'] li").each(function () {

    //                        var selectitem = "";
    //                        selectitem = $(this).attr("data-value") + "|" + $(this).html().trim();
    //                        selectionItems = selectionItems + "=" + selectitem;
    //                    });
    //                  //  sheetname=$(parents[a]).attr("data-sheetname")

    //                }
    //                //if (a == 1) {
    //                //    var checkboxtext = $("label[for='eventitem" + $(parents[a]).attr("data-value") + "']").text().trim();

    //                //    itemarr = itemarr + "+" + checkboxtext;
    //                //}
    //                //if (a == 2) {
    //                //    var checkboxtext = $("label[for='competitionitem" + $(parents[a]).attr("data-value") + "']").text().trim();
    //                //    itemarr = itemarr + "+" + checkboxtext;
    //                //}
    //                //if (a == 3) {
    //                //    var checkboxtext = $("label[for='eventypeitem" + $(parents[a]).attr("data-value") + "']").text().trim();
    //                //    itemarr = itemarr + "+" + checkboxtext;
    //                //}

    //            }

    //            itemarr = itemarr.substr(1);

    //        }
    //       selectionItems = selectionItems.substr(1);
    //        debugger;
    //        if (itemarr != "") {
    //              allitemsarr.push(itemarr+"+"+selectionItems+"+"+sheetname);
    //            //allitemsarr.push(itemarr);
    //        }

    //    }

    //    debugger;
    //    $.ajax({
    //        url: '/DashBoard/UpdateUserMarket',

    //        type: 'POST',

    //        data: { 'allitemsarr': allitemsarr, 'userID': userID },

    //        complete: function () { },
    //        success: function (data) {

    //            if (data == "True") {



    //            }
    //            else {
    //                HideLoader();
    //                ShowErrorMsg(data);
    //            }

    //        }
    //    });

    //}
    function LoadUserDetails() {
        debugger;
        ShowLoader();
        $.ajax({
            url: '/DashBoard/UserDetails',
            async: true,
            type: 'POST',
            data: { 'UserID': $("#ddlUsers").val() },

            complete: function () {
                if ($("#callerfunction").val() == "updatemarket") {
                    $("label:not([for]) input[type=checkbox]").each(function () {
                        $(this).prop("checked", false);
                        $(this).prop("indeterminate", false);
                    });
                    if ($("#assignedIDs").val() != undefined) {
                        var assignedMarket = $("#assignedIDs").val().split(",");
                        var eventtypeIDs = [];
                        for (i = 0; i <= assignedMarket.length - 1; i++) {
                            if (assignedMarket[i].indexOf("eventypeitem") >= 0) {
                                eventtypeIDs.push(assignedMarket[i]);
                            }

                        }

                        for (i = 0; i <= eventtypeIDs.length - 1; i++) {
                            var eventtypeID = eventtypeIDs[i].split("|");
                            CheckSelectedMarket();
                            // LoadCompetitions(eventtypeID[1]);
                        }
                    }
                }
            },
            success: function (data) {
                HideLoader();
                $("#UserDetails").html(data);


            }
        });
    }
    function checkstatechange(checkboxid) {
        debugger;
        var
            checkbox = checkboxid,
            nestedList = checkbox.parent().next().next(),
            selectNestedListCheckbox = nestedList.find("label:not([for]) input:checkbox");

        if (checkbox.is(":checked")) {

            selectNestedListCheckbox.prop("indeterminate", false);
            selectNestedListCheckbox.prop("checked", true);
            var parents = $(checkbox).parents("li");
            for (a = 0; a <= parents.length - 1  ; a++) {
                $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('indeterminate', false);
                $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('checked', true);
                var allchildlength = $(parents[a]).children('ul').first().children('li').children('label').children('input[type = "checkbox"]').length;
                var selectedchildlength = $(parents[a]).children('ul').first().children('li').children('label').children('input[type = "checkbox"]:checked').length;
                $(parents[a]).children('ul').first().children('li').children('label').children('input[type = "checkbox"]').each(function () {
                    if ($(this).prop("indeterminate") == true) {
                        selectedchildlength += 1;
                    }
                });
                // var selectedchildlength = $(parents[a]).children('ul').first().children("label:not([for]) input:checkbox").prop("checked").length;
                if (selectedchildlength == allchildlength) {
                    $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('indeterminate', false);
                    $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('checked', true);
                }
                else {
                    if (selectedchildlength == 0) {
                        $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('checked', false);
                        $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('indeterminate', false);
                    }
                    else {
                        $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('checked', false);
                        $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('indeterminate', true);
                    }


                }

            }
            return
        }
        else {
            selectNestedListCheckbox.prop("checked", false);
            selectNestedListCheckbox.prop("indeterminate", false);
            var parents = $(checkbox).parents("li");
            for (a = 1; a <= parents.length - 1  ; a++) {

                var allchildlength = $(parents[a]).children('ul').first().children('li').children('label').children('input[type = "checkbox"]').length;
                var selectedchildlength = $(parents[a]).children('ul').first().children('li').children('label').children('input[type = "checkbox"]:checked').length;
                $(parents[a]).children('ul').first().children('li').children('label').children('input[type = "checkbox"]').each(function () {
                    if ($(this).prop("indeterminate") == true) {
                        selectedchildlength += 1;
                    }
                });

                // var selectedchildlength = $(parents[a]).children('ul').first().children("label:not([for]) input:checkbox").prop("checked").length;
                if (selectedchildlength == allchildlength) {
                    $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('indeterminate', false);
                    $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('checked', true);
                }
                else {
                    if (selectedchildlength == 0) {
                        $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('checked', false);
                        $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('indeterminate', false);
                    }
                    else {
                        $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('checked', false);
                        $(parents[a]).children('label').first().children("input[type='checkbox']:first").prop('indeterminate', true);
                    }

                }


            }

        }
    }
    function CheckSelectedMarket() {

        if ($("#assignedIDs").val() != undefined) {
            ShowLoader();
            $("label:not([for]) input[type=checkbox]").each(function () {
                $(this).prop("checked", false);
                $(this).prop("indeterminate", false);
            });

            var assignedMarket = $("#assignedIDs").val().split(",");
            if (assignedMarket.length > 0) {



                for (i = 0; i <= assignedMarket.length - 1; i++) {

                    if (assignedMarket[i].indexOf("marketcatalogueitem") >= 0) {
                        $("label:not([for]) input[id='" + assignedMarket[i] + "']").prop("checked", true);
                    }


                }


                $("label:not([for]) input[type=checkbox]:checked").each(function () {
                    checkstatechange($(this));
                });

                HideLoader();
            }
        }
    }
    function CalculateAverageRate(){
        var marketbookID=$("#lastloadedmarket").val().toString().replace(".","");
        var runner1profit=parseInt($("#marketbook"+marketbookID+" #lblprofitandloss"+$("#ddlRunners1"+$("#lastloadedmarket").val().toString().replace(".","")).val()).text());
        var runner2profit=parseInt($("#marketbook"+marketbookID+" #lblprofitandloss"+$("#ddlRunners2"+$("#lastloadedmarket").val().toString().replace(".","")).val()).text());
        if((runner1profit > 0 && runner2profit > 0) || (runner1profit < 0 && runner2profit < 0)){
            $("#averageamt1"+$("#lastloadedmarket").val().toString().replace(".","")).val("0.00");
            $("#averageamt2"+$("#lastloadedmarket").val().toString().replace(".","")).val("0.00");
            return;
        }
        if(runner1profit > 0){
            $(".averageLateover1").text("L");
            $(".averageLateover1").addClass("greenclass");
            $(".averageLateover1").removeClass("redclass");
            $(".averageLateover2").text("K");
            $(".averageLateover2").addClass("redclass");
            $(".averageLateover2").removeClass("greenclass");
        }
        else{

            if(runner2profit > 0){
                $(".averageLateover1").text("K");
                $(".averageLateover1").addClass("redclass");
                $(".averageLateover1").removeClass("greenclass");
                $(".averageLateover2").text("L");
                $(".averageLateover2").addClass("greenclass");
                $(".averageLateover2").removeClass("redclass");
            }
        }
        if (runner1profit < 0) {runner1profit=runner1profit * -1; }
        if (runner2profit < 0) {runner2profit=runner2profit * -1; }
        if(runner1profit > 0 && runner2profit >0){
            var result=runner1profit/runner2profit;
            var result2=runner2profit/runner1profit;
            $("#averageamt1"+$("#lastloadedmarket").val().toString().replace(".","")).val(parseFloat(result).toFixed(2));
            $("#averageamt2"+$("#lastloadedmarket").val().toString().replace(".","")).val(parseFloat(result2).toFixed(2));
        }

    }
    function LoadPartialViewCreateUser(partialviewid) {
        $('.mainheaderdiv').nextAll('div').remove();
		debugger;
        ShowLoader();
        var partialviewname = "/DashBoard/" + partialviewid;
        $("#partialviews").load(partialviewname, function () {
            HideLoader();
			  togglemainsportsmenu(3,"");
            $("#btnCreateUser").click(function () {
                if ($("#ddlUserType").val() == 0) {
                    ShowErrorMsg("Please select user type.");
                    return;
                }
                var BetLowerLimitC = 2000;
                var BetUpperLimitC=25000;
                var BetLowerLimitCHorsePlace = 2000;
                var BetUpperLimitCHorsePlace=25000;
                var BetLowerLimitCGrayHoundWin = 2000;
                var BetUpperLimitCGrayHoundWin=25000;
                var BetLowerLimitCGrayHoundPlace = 2000;
                var BetUpperLimitCGrayHoundPlace=25000;
                var BetLowerLimitCMatchOdds = 2000;
                var BetUpperLimitCMatchOdds=500000;
                var BetLowerLimitCMatchOddsSoccer = 2000;
                var BetUpperLimitCMatchOddsSoccer=25000;
                var BetLowerLimitCMatchOddsTennis = 2000;
                var BetUpperLimitCMatchOddsTennis=25000;
                var BetLowerLimitCInningsRunns = 2000;
                var BetUpperLimitCInningsRunns=500000;
                var BetLowerLimitCCompletedMatch = 2000;
                var BetUpperLimitCCompletedMatch=500000;
                var BetLowerLimitCTiedMatch = 2000;
                var BetUpperLimitCTiedMatch=500000;
                var BetLowerLimitCWinner = 2000;
                var BetUpperLimitCWinner=500000;
                if (@LoggedinUserDetail.GetUserTypeID() == 1)
                {
                    BetLowerLimitC=$("#BetLowerLimit").val();
                    BetUpperLimitC=$("#BetUpperLimit").val();
                    BetLowerLimitCHorsePlace=$("#BetLowerLimitHorsePlace").val();
                    BetUpperLimitCHorsePlace=$("#BetUpperLimitHorsePlace").val();
                    BetLowerLimitCGrayHoundWin=$("#BetLowerLimitGrayHoundWin").val();
                    BetUpperLimitCGrayHoundWin=$("#BetUpperLimitGrayHoundWin").val();
                    BetLowerLimitCGrayHoundPlace=$("#BetLowerLimitGrayHoundPlace").val();
                    BetUpperLimitCGrayHoundPlace=$("#BetUpperLimitGrayHoundPlace").val();
                    BetLowerLimitCMatchOdds = $("#BetLowerLimitMatchOdds").val();
                    BetUpperLimitCMatchOdds=$("#BetUpperLimitMatchOdds").val();
                    BetLowerLimitCMatchOddsSoccer = $("#BetLowerLimitMatchOddsSoccer").val();
                    BetUpperLimitCMatchOddsSoccer=$("#BetUpperLimitMatchOddsSoccer").val();
                    BetLowerLimitCMatchOddsTennis = $("#BetLowerLimitMatchOddsTennis").val();
                    BetUpperLimitCMatchOddsTennis=$("#BetUpperLimitMatchOddsTennis").val();
                    BetLowerLimitCInningsRunns = $("#BetLowerLimitInningRuns").val();
                    BetUpperLimitCInningsRunns=$("#BetUpperLimitInningRuns").val();
                    BetLowerLimitCCompletedMatch = $("#BetLowerLimitCompletedMatch").val();
                    BetUpperLimitCCompletedMatch=$("#BetUpperLimitCompletedMatch").val();
                    BetLowerLimitCTiedMatch = $("#BetLowerLimitTiedMatch").val();
                    BetUpperLimitCTiedMatch=$("#BetUpperLimitTiedMatch").val();
                    BetLowerLimitCWinner = $("#BetLowerLimitWinner").val();
                    BetUpperLimitCWinner=$("#BetUpperLimitWinner").val();
                }
                var CreateUser = {
                    Name: $("#Name").val(), PhoneNumber: $("#PhoneNumber").val(), EmailAddress: $("#EmailAddress").val(), UserName: $("#UserName").val(), Password: $("#Password").val(), Location: $("#Location").val(), AccountBalance: $("#AccountBalance").val(), UserTypeID: $("#ddlUserType").val(), AgentRateC: $("#AgentRateC").val(),BetLowerLimit:BetLowerLimitC,BetUpperLimit:BetUpperLimitC,BetLowerLimitHorsePlace:BetLowerLimitCHorsePlace,BetUpperLimitHorsePlace:BetUpperLimitCHorsePlace,BetLowerLimitGrayHoundWin:BetLowerLimitCGrayHoundWin,BetUpperLimitGrayHoundWin:BetUpperLimitCGrayHoundWin,BetLowerLimitGrayHoundPlace:BetLowerLimitCGrayHoundPlace,BetUpperLimitGrayHoundPlace:BetUpperLimitCGrayHoundPlace,BetLowerLimitInningsRunns:BetLowerLimitCInningsRunns,BetUpperLimitInningsRunns:BetUpperLimitCInningsRunns,BetLowerLimitMatchOdds:BetLowerLimitCMatchOdds,BetUpperLimitMatchOdds:BetUpperLimitCMatchOdds,BetLowerLimitCompletedMatch:BetLowerLimitCCompletedMatch,BetUpperLimitCompletedMatch:BetUpperLimitCCompletedMatch,BetLowerLimitMatchOddsSoccer:BetLowerLimitCMatchOddsSoccer,BetUpperLimitMatchOddsSoccer:BetUpperLimitCMatchOddsSoccer,BetLowerLimitMatchOddsTennis:BetLowerLimitCMatchOddsTennis,BetUpperLimitMatchOddsTennis:BetUpperLimitCMatchOddsTennis,BetLowerLimitTiedMatch:BetLowerLimitCTiedMatch,BetUpperLimitTiedMatch:BetUpperLimitCTiedMatch,BetLowerLimitWinner:BetLowerLimitCWinner,BetUpperLimitWinner:BetUpperLimitCWinner
                };
                ShowLoader();
                $.ajax({
                    url: '/DashBoard/GetUser',

                    type: 'POST',
                    data: CreateUser,
                    complete: function () { },
                    success: function (data) {
                        if (data.indexOf("True") >= 0) {
                            debugger;
                            var userid = data.split("|");
                            AssignMarketToUser(userid[1]);
                            ShowCurrentBalance($("#AccountBalance").val());
                            $("#ManageUser").load("/DashBoard/ManageUser");
                            $("#CreateUserForm :input[type='text']").each(function () {
                                $(this).val('');
                            });
                            // LoadPartialViewbyid("CreateUser");
                            HideLoader();
                            ShowErrorMsg("User added Successfully");

                        }
                        else {
                            HideLoader();
                            ShowErrorMsg(data);
                        }
                        //// $form.html(data);
                        // $form.removeData('validator');
                        // $form.removeData('unobtrusiveValidation');
                        // $.validator.unobtrusive.parse($form);
                    }
                });
            });

            //var $form = $("#CreateUserForm");
            //$.validator.unobtrusive.parse($form);

            //$form.submit(function () {
            //    var $form = $(this);
            //    if ($form.valid()) {
            //        var CreateUser = {
            //            Name: $("#Name").val(), PhoneNumber: $("#PhoneNumber").val(), EmailAddress: $("#EmailAddress").val(), UserName: $("#UserName").val(), Password: $("#Password").val(), Location: $("#Location").val(), AccountBalance: $("#AccountBalance").val(), UserTypeID: $("#ddlUserType").val()
            //        }
            //        ShowLoader();
            //        $.ajax({
            //            url: '/DashBoard/GetUser',
            //            async: true,
            //            type: 'POST',
            //            data: CreateUser,
            //            beforeSend: function (xhr, opts) {
            //            },

            //            complete: function () { },
            //            success: function (data) {
            //                if (data.indexOf("True") >= 0) {
            //                    debugger;
            //                    var userid = data.split("|");
            //                    AssignMarketToUser(userid[1]);
            //                    ShowCurrentBalance($("#AccountBalance").val());
            //                    LoadPartialViewbyid("CreateUser");
            //                    HideLoader();
            //                    ShowErrorMsg("User added Successfully");

            //                }
            //                else {
            //                    HideLoader();
            //                    ShowErrorMsg(data);
            //                }
            //                //// $form.html(data);
            //                // $form.removeData('validator');
            //                // $form.removeData('unobtrusiveValidation');
            //                // $.validator.unobtrusive.parse($form);
            //            }
            //        });
            //    }

            //    return false;
            //});
        });

    }

    function printContent(el){
        var restorepage = document.body.innerHTML;
        var printcontent = document.getElementById(el).innerHTML;
        document.body.innerHTML = printcontent;
        window.print();
        document.body.innerHTML = restorepage;
    }

    function ShowCurrentBalance(addedbalance) {
        if ($("#CurrentUserBalance").text() != "") {
            var number = $("#CurrentUserBalance").text().split(":");
            var newbalance = parseFloat(number[1]) - parseFloat(addedbalance);
            $("#CurrentUserBalance").text('Balance: ' + parseFloat(newbalance).toFixed(2).toString());
        }
    }
    function LoadPartialViewAddCredit(partialviewid) {
         $('.mainheaderdiv').nextAll('div').remove();
		 debugger;
        ShowLoader();
		
        var partialviewname = "/DashBoard/" + partialviewid;
        $("#partialviews").load(partialviewname, function () {
HideLoader();
			  togglemainsportsmenu(3,"");           
		   var $form = $("#AddCreditForm");
            $.ajax({
                url: '/DashBoard/AllUsers',
                async: true,
                type: 'POST',


                complete: function () {
                    $('.selectpicker').selectpicker();
                    $("#ddlUsers").change(function () {
                        LoadUserDetails();
                    });
                    HideLoader();
                },
                success: function (data) {
                    $("#allusers").html(data);

                    //// $form.html(data);
                    // $form.removeData('validator');
                    // $form.removeData('unobtrusiveValidation');
                    // $.validator.unobtrusive.parse($form);
                }
            });


            $("#ddlUsers").change(function () {
                LoadUserDetails();
            });
            $("#btnAddCredit").click(function () {
                if ($("#AccountsTitle").val()==""){
                    ShowErrorMsg("Please enter Accounts Title.");
                    return false;
                }
                if ($("#AccountBalance").val() > 0 && $("#ddlUsers").val() > 0) {
                    $("#callerfunction").val("addcredit");
                    $("#myModalPassword").modal('show');
                    $("#txtAdminPassword").focus();

                }


            });
         
            $("#btnRemoveCredit").click(function () {
                if ($("#AccountsTitle").val() == "") {
                    ShowErrorMsg("Please enter Accounts Title.");
                    return false;
                }
                if ($("#AccountBalance").val() > 0 && $("#ddlUsers").val() > 0) {

                    $("#callerfunction").val("removecredit");
                    $("#myModalPassword").modal('show');
                    $("#txtAdminPassword").focus();
                }

            });
            HideLoader();
        });

    }

</script>
