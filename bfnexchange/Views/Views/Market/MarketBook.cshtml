@model IEnumerable<ExternalAPI.TO.MarketBook>
@if (Model.Count() > 0)
{
    <input type="hidden" id="totalmarketsopened" value="@Model.FirstOrDefault().marketsopened" />
}
else
{
    <input type="hidden" id="totalmarketsopened" value="0" />
}
<input type="hidden" id="lblallLiabalityNew" value="@ViewBag.totliabalityNew">
<ul class="nav nav-tabs marketbooksul">


    @foreach (var item in Model)
    {
    <li id="marketbook@(item.MarketId.ToString().Replace(".", ""))li" onclick="SetLastLoadedMarket('@item.MarketId')" data-value="@item.MarketId">

        <a href="#marketbook@(item.MarketId.ToString().Replace(".", ""))" data-toggle="tab">@item.MarketBookName </a>
        <span class="close" onclick="deletetab('@(item.MarketId.ToString())')">x</span>
        <input type="hidden" id="selectedrunners@(item.MarketId.ToString().Replace(".", ""))" value="" />
		        <input type="hidden" id="selectedrunnersforavg@(item.MarketId.ToString().Replace(".", ""))" value="" />
        <input type="hidden" id="selectedrunnersclothnumber@(item.MarketId.ToString().Replace(".", ""))" value="" />
        <input type="hidden" id="marketbookCategory@(item.MarketId.ToString().Replace(".", ""))" value="@item.MainSportsname" />
        <input type="hidden" id="marketbookorignalopendate@(item.MarketId.ToString().Replace(".", ""))" value="@item.OrignalOpenDate" />
        <input type="hidden" id="marketbookname@(item.MarketId.ToString().Replace(".", ""))" value="@item.MarketBookName" />
        <input type="hidden" id="marketbookrunners@(item.MarketId.ToString().Replace(".", ""))" value="@item.Runners.Count.ToString()" />
        <input type="hidden" id="marketbookAllowedBetting@(item.MarketId.ToString().Replace(".", ""))" value="@Convert.ToInt32(item.BettingAllowed).ToString()" />
        <input type="hidden" id="marketbookAllowedBettingOverAll@(item.MarketId.ToString().Replace(".", ""))" value="@Convert.ToInt32(item.BettingAllowedOverAll).ToString()" />
        <input type="hidden" id="marketbookTotalMatched@(item.MarketId.ToString().Replace(".", ""))" value="@item.TotalMatched.ToString()" />
        <input type="hidden" id="currentteamforSelection@(item.MarketId.ToString().Replace(".", ""))" value="A" />
        <input type="hidden" id="currentview@(item.MarketId.ToString().Replace(".", ""))" value="0" />
		 <input type="hidden" id="getmatchupdatesfrom@(item.MarketId.ToString().Replace(".", ""))" value="@item.GetMatchUpdatesFrom" />
        <input type="hidden" id="eventidfor@(item.MarketId.ToString().Replace(".", ""))" value="@item.EventID" />
        @if (item.LineVMarkets != null)
            {


            <input type="hidden" id="marketbookFancyIDs@(item.MarketId.ToString().Replace(".", ""))" value="true" />
            @*<input type="hidden" id="marketbookFancyMarket@(item.MarketId.ToString().Replace(".", ""))" value="@LoggedinUserDetail.ConverttoJSONString(@item.LineVMarkets)" />*@
            }
            else
            {
            <input type="hidden" id="marketbookFancyIDs@(item.MarketId.ToString().Replace(".", ""))" value="false" />
            }

        <input type="hidden" id="marketbookFancyShown@(item.MarketId.ToString().Replace(".", ""))" value="true" />
        @if (item.MainSportsname == "Cricket" && item.MarketBookName.Contains("Match Odds"))
            {
            <input type="hidden" id="marketbookgetscores@(item.MarketId.ToString().Replace(".", ""))" value="true" />
            <input type="hidden" id="marketbookcricketkey@(item.MarketId.ToString().Replace(".", ""))" value="@item.CricketMatchKey" />
            }
            else
            {
            <input type="hidden" id="marketbookgetscores@(item.MarketId.ToString().Replace(".", ""))" value="false" />
            }
    </li>
    }
</ul>



<div class="tab-content" >

    @{
        foreach (var item in Model)
        {
            int valueid = 0;
            <div id="marketbook@(item.MarketId.ToString().Replace(".", ""))" class="tab-pane" data-marketid="@item.MarketId">
                <input type="hidden" id="totalmarketsopened@(item.MarketId.ToString().Replace(".", ""))" value="@item.marketsopened" />
                <input type="hidden" id="marketbooksheet@(item.MarketId.ToString().Replace(".", ""))" value="@item.SheetName" />

                <div class="col-md-12 no-padding marketinfo">
                    <div>
                        @if (item.MainSportsname == "Cricket")
                        {
                        <img class="timerimg" src="~/Content/Images/ws4.png" />
                        }
                        else
                        {
                            if (item.MainSportsname == "Soccer")
                            {
                        <img class="timerimg" src="~/Content/Images/ws1.png" />
                            }
                            else
                            {
                                if (item.MainSportsname == "Tennis")
                                {
                        <img class="timerimg" src="~/Content/Images/ws2.png" />
                                }
                                else
                                {
                                    if (item.MainSportsname == "Horse Racing")
                                    {
                        <img class="timerimg" src="~/Content/Images/ws7.png" />
                                    }
                                    else
                                    {
                        <img class="timerimg" src="~/Content/Images/ws4339.png" />
                                    }
                                }
                            }
                        }
                       @{
                            var marketnameandtype = item.MarketBookName.Split('/');
                            <label class="marketname">@marketnameandtype[1].ToUpper()</label>
                        }
                    </div>
					
					
					
                    <div class="marketstatustimerrules">

                        <img class="timerimg" src="~/Content/Images/clock_white.png" style="height:15px;margin-top-3px;" />
                        <label class="markettime" id="lbltimer@(item.MarketId.ToString().Replace(".", ""))">@item.OpenDate</label>

                        @if (item.MarketStatusstr == "In Play")
                        {
                        <label id="marketbookstatus@(item.MarketId.ToString().Replace(".", ""))" class="marketstatus inplay">IN-PLAY</label>
                        }
                        else
                        {
                            if (item.MarketStatusstr == "Suspended")
                            {
                        <label id="marketbookstatus@(item.MarketId.ToString().Replace(".", ""))" class="marketstatus suspended">SUSPENDED</label>
                            }
                            else
                            {
                                if (item.MarketStatusstr == "Closed")
                                {
                        <label id="marketbookstatus@(item.MarketId.ToString().Replace(".", ""))" class="marketstatus completed">CLOSED</label>
                                }
                                else
                                {
                        <label id="marketbookstatus@(item.MarketId.ToString().Replace(".", ""))" class="marketstatus active1">GOING LIVE</label>
                                }

                            }
                        }
						  <label class="markettype">@marketnameandtype[0].ToUpper()</label>
                        @if (LoggedinUserDetail.GetUserTypeID() == 3)
                        {
                            if (item.BettingAllowed == false || item.BettingAllowedOverAll == false)
                            {
                        <label id="marketbookbettingaloowed@(item.MarketId.ToString().Replace(".", ""))" class="marketbettingallowed" style="display:none">BETTING CLOSED</label>
                            }

                        }
                    </div>






                </div>

                @if (item.MainSportsname == "Cricket" && item.MarketBookName.Contains("Match Odds"))
                {

                    <div id="matchscores">

                    </div>

                }
                <div id="marketbookdataforshow">
                    <div id="favoriteselectionfixed@(item.MarketId.ToString().Replace(".", ""))" class="favoriteselection">

                        <div class="favoriteselectionname">
                            @if (item.FavoriteSelectionName != "")
                            {
                                <label id="lblfavoritename@(item.MarketId.ToString().Replace(".", ""))">@item.FavoriteSelectionName</label>
                            }
                            else
                            {
                                <label id="lblfavoritename@(item.MarketId.ToString().Replace(".", ""))"></label>
                            }
                            @{
                                try
                                {
                                    string favID = item.FavoriteID;
                                    <label id="lblfavoriteselection@(item.MarketId.ToString().Replace(".", ""))" style="display:none">@favID</label>
                                }
                                catch (System.Exception ex)
                                {
                                    var err = ex.Message;
                                }


                            }

                        </div>

                        <div class="favoritepricebackandlay matchcolors">
                            <div class="favoritebackprice">
                                <label id="lblfavoritebackprice@(item.MarketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','back',' @(Convert.ToDecimal(item.FavoriteBack) + 1)','4000','0','@item.MarketId','@item.MarketBookName','@item.FavoriteBackSize','0')">@item.FavoriteBack</label>
                            </div>
                            <div class="favoritelayprice">
                                <label id="lblfavoritelayprice@(item.MarketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','lay',' @(Convert.ToDecimal(item.FavoriteLay) + 1)','4000','0','@item.MarketId','@item.MarketBookName','@item.FavoriteLaySize','0')">@item.FavoriteLay</label>
                            </div>
                        </div>
                        <div class="favoritesizebackandlay">
                            <div class="favoritebacksize">
                                <label id="lblfavoritebacksize@(item.MarketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','back',' @(Convert.ToDecimal(item.FavoriteBack) + 1)','4000','0','@item.MarketId','@item.MarketBookName','@item.FavoriteBackSize','0')">@item.FavoriteBackSize</label>
                            </div>
                            <div class="favoritelaysize">
                                <label id="lblfavoritelaysize@(item.MarketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','lay',' @(Convert.ToDecimal(item.FavoriteLay) + 1)','4000','0','@item.MarketId','@item.MarketBookName','@item.FavoriteLaySize','0')">@item.FavoriteLaySize</label>
                            </div>
                        </div>

                    </div>
                    @if (item.MarketBookName.ToString().Contains("To Be Placed"))
                {
                        <div class="tobeplacedcount">
                            <label id="lblTobePlaced">@item.NumberOfWinners.ToString() - To be Placed </label>
                        </div>
                    }

                    <label class="marketrules" onclick="showmarketrules('@item.MainSportsname','@item.MarketBookName','@item.Runners.Count.ToString()')">RULES</label>
                    <div class="col-md-12 col-sm-12 pull-left no-padding runnerswrapper runnerwrapperhead">
                        <div class="col-md-2 col-sm-8 no-padding runnernamediv ">
                            <label class="runnersname">

                            </label>



                        </div>
                        <div class="col-md-1 col-sm-1 no-padding runnerlastpricediv">
                            <label class="runnerslastprice">
                                Price
                            </label>
                        </div>
                        <div class="col-md-2 col-sm-2 no-padding runnerprofitandlossdiv">
                            <label class="runnersprofitloss">
                                P/L
                            </label>
                        </div>
                        <div class="col-md-7 col-sm-4 no-padding  runnerbackandlaydiv">
                            <div class="col-md-12 col-sm-12 no-padding">
                                <div class="col-md-6 col-sm-12 no-padding backhead">
                                    <div class="col-md-12 col-sm-12 no-padding">
                                        <div class="col-md-4 col-sm-4 no-padding">

                                        </div>
                                        <div class="col-md-4 no-padding">

                                        </div>
                                        <div class="col-md-12 col-sm-12 no-padding">
                                            <label>BACK</label>
                                        </div>

                                    </div>

                                </div>
                                <div class="col-md-6 col-sm-12 no-padding layhead">
                                    <div class="col-md-12 col-sm-12 no-padding">
                                        <div class="col-md-12 col-sm-12 no-padding">
                                            <label>LAY</label>
                                        </div>
                                        <div class="col-md-4 no-padding">

                                        </div>
                                        <div class="col-md-4 no-padding">

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>


                    <div class="backgroundimageforSuspended">


                    </div>
                    @foreach (var runner in item.Runners)
                {
                        <div id="selection@(runner.SelectionId.Replace(" ",""))" class="col-md-12 pull-left col-sm-12 no-padding runnerswrapper">

                            <div id="runnernamediv@(runner.SelectionId)" class="col-md-2 col-sm-8 no-padding runnernamediv">
                                <label style="display:none">
                                    @runner.SelectionId
                                </label>
                                @if (item.MainSportsname == "Horse Racing" && runner.JockeyName != "Not")
                                {<input type="checkbox" id="chkselection@(runner.SelectionId)" class="checkboxrunnername" onchange="AddRunnersformultiplebets('@runner.SelectionId')" />
                                <div class="clothnumstalldrawimg" id="clothnumstalldrawimg@(runner.SelectionId)" onclick="triggerchangemethod('@runner.SelectionId','@item.MarketId.Replace(".", "")')">


                                    <label data-value="@runner.SelectionId" class="runners runnersclothnumber" id="lblSelectionClothnumber@(runner.SelectionId)" title="Cloth number">
                                        @runner.Clothnumber
                                    </label>
                                    <label data-value="@runner.StallDraw" class="runners runnersStallDraw" id="lblSelectionStallDraw@(runner.SelectionId)" title="Stall Draw">
                                        (@runner.StallDraw)
                                    </label>
                                    @{
                                        runner.WearingURL = runner.WearingURL.ToString().Replace(".betfair.com", ".cdnbf.net");
                                    }
                                    <div class="wearingdiv"> <img class="runnerwearing" src="@runner.WearingURL" title="@runner.WearingDesc" onerror="this.onerror = null; this.src = '../Content/images/not-found.png';" /></div>
                                </div>

                                <label for="chkselection@(runner.SelectionId)" data-value="@runner.SelectionId" class="runners runnersnameHorse" id="lblSelectionName@(runner.SelectionId)">
                                    @runner.RunnerName
                                </label>

                                <label id="lbljockey@(runner.SelectionId)" class="jockeyname" title="Jockey name">@runner.JockeyName</label>
                                <div class="no-padding runnerprofitandlossdivMobile">
                                    @if (runner.ProfitandLoss >= 0)
                                    {
                                        <label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossgreen">
                                            @runner.ProfitandLoss
                                        </label>


                                    }
                                    else
                                    {
                                        <label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossred">
                                            @runner.ProfitandLoss
                                        </label>

                                    }
                                    @if (item.MarketBookName.Contains("To Be Placed"))
                                    {
                                        if (runner.Loss >= 0)
                                        {
                                            <label id="lblloss@(runner.SelectionId)" class="runnersprofitlossgreen">
                                                @runner.Loss
                                            </label>
                                        }
                                        else
                                        {
                                            <label id="lblloss@(runner.SelectionId)" class="runnersprofitlossred">
                                                @runner.Loss
                                            </label>
                                        }
                                    }


                                </div>
                                        }
                                        else
                                        {
                                            if (item.MainSportsname.Contains("Racing"))
                                            {
                                                <input type="checkbox" id="chkselection@(runner.SelectionId)" class="checkboxrunnername" onchange="AddRunnersformultiplebets('@runner.SelectionId')" />
                                                <div class="clothnumstalldrawimgempty" id="clothnumstalldrawimg@(runner.SelectionId)" onclick="triggerchangemethod('@runner.SelectionId','@item.MarketId.Replace(".","")')"></div>
                                                <label for="chkselection@(runner.SelectionId)" data-value="@runner.SelectionId" class="runners runnersname" id="lblSelectionName@(runner.SelectionId)">
                                                    @runner.RunnerName
                                                </label>
                                                <div class="no-padding runnerprofitandlossdivMobile">
                                                    @if (runner.ProfitandLoss >= 0)
                                                    {
                                                        <label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossgreen">
                                                            @runner.ProfitandLoss
                                                        </label>
                                                    }
                                                    else
                                                    {
                                                        <label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossred">
                                                            @runner.ProfitandLoss
                                                        </label>
                                                    }
                                                    @if (item.MarketBookName.Contains("To Be Placed"))
                                                    {
                                                        if (runner.Loss >= 0)
                                                        {
                                                            <label id="lblloss@(runner.SelectionId)" class="runnersprofitlossgreen">
                                                                @runner.Loss
                                                            </label>
                                                        }
                                                        else
                                                        {
                                                            <label id="lblloss@(runner.SelectionId)" class="runnersprofitlossred">
                                                                @runner.Loss
                                                            </label>
                                                        }
                                                    }


                                                </div>
                                            }
                                            else
                                            {
											 if (item.MainSportsname == "Cricket" && item.MarketBookName.Contains("Match Odds"))
                                                {
                                                    <input type="checkbox" id="chkselectionforaverage@(runner.SelectionId)" class="checkboxrunnernameavg" onchange="AddRunnersforaveragecal('@runner.SelectionId')" data-value="@runner.SelectionId"  />
                                                }
                                                <input type="checkbox" id="chkselection@(runner.SelectionId)" class="checkboxrunnername" onchange="AddRunnersformultiplebets('@runner.SelectionId')" />
                                                <div class="clothnumstalldrawimgemptynotshow" id="clothnumstalldrawimg@(runner.SelectionId)" onclick="triggerchangemethod('@runner.SelectionId','@item.MarketId.Replace(".","")')"></div>
                                                <label for="chkselection@(runner.SelectionId)" data-value="@runner.SelectionId" class="runners runnersnamenotrace" id="lblSelectionName@(runner.SelectionId)">
                                                    @runner.RunnerName
                                                </label>
                                                <div class="no-padding runnerprofitandlossdivMobile">
                                                    @if (runner.ProfitandLoss >= 0)
                                                    {
                                                        <label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossgreen">
                                                            @runner.ProfitandLoss
                                                        </label>
                                                        <label id="lblaverage@(runner.SelectionId)" class="runnersaveragegreen">
                                                            @runner.Average
                                                        </label>
                                                    }
                                                    else
                                                    {
                                                        <label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossred">
                                                            @runner.ProfitandLoss
                                                        </label>
                                                        <label id="lblaverage@(runner.SelectionId)" class="runnersaveragered">
                                                            @runner.Average
                                                        </label>
                                                    }
                                                    @if (item.MarketBookName.Contains("To Be Placed"))
                                                    {
                                                        if (runner.Loss >= 0)
                                                        {
                                                            <label id="lblloss@(runner.SelectionId)" class="runnersprofitlossgreen">
                                                                @runner.Loss
                                                            </label>
                                                        }
                                                        else
                                                        {
                                                            <label id="lblloss@(runner.SelectionId)" class="runnersprofitlossred">
                                                                @runner.Loss
                                                            </label>
                                                        }
                                                    }


                                                </div>
                                            }

                                        }


                            </div>
                            <div class="col-md-1 no-padding col-sm-1 runnerlastpricediv">
                                <label id="lblrunnerlastprice@(runner.SelectionId)" class="runnerslastprice">
                                    @runner.LastPriceTraded
                                </label>

                            </div>
                            <div class="col-md-1 col-sm-1 no-padding runnerprofitandlossdiv">
                                @if (runner.ProfitandLoss >= 0)
                    {
                                    <label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossgreen">
                                        @runner.ProfitandLoss
                                    </label>
                                }
                                else
                                {
                                    <label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossred">
                                        @runner.ProfitandLoss
                                    </label>
                                }
                                @if (item.MarketBookName.Contains("To Be Placed"))
                                {
                                    if (runner.Loss >= 0)
                                    {
                                        <label id="lblloss@(runner.SelectionId)" class="runnersprofitlossgreen">
                                            @runner.Loss
                                        </label>
                                    }
                                    else
                                    {
                                        <label id="lblloss@(runner.SelectionId)" class="runnersprofitlossred">
                                            @runner.Loss
                                        </label>
                                    }
                                }


                            </div>
                            <div class="col-md-8 col-sm-4 no-padding priceandsize matchcolors runnerbackandlaydiv">
                                <div class="col-md-12 col-sm-12 no-padding">
                                    <div class="col-md-6 col-sm-12 no-padding">

                                        @for (int i = 2; i >= 0; i--)
                                        {
                                            if (runner.ExchangePrices.AvailableToBack.Count - 1 >= i && runner.ExchangePrices.AvailableToBack.Count > 0 && runner.ExchangePrices.AvailableToBack[i].Price > 0)
                                            {
                                                <div class="col-md-4 col-sm-12 no-padding backitem">
                                                    <label id="lblbackprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionprice" onclick="showbetslip('@runner.SelectionId.Replace(" ","")','back',' @runner.ExchangePrices.AvailableToBack[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToBack[i].Size','@i','0')">
                                                        @runner.ExchangePrices.AvailableToBack[i].Price
                                                    </label><br />
                                                    <label id="lblbacksize@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionsize" onclick="showbetslip('@runner.SelectionId.Replace(" ","")','back',' @runner.ExchangePrices.AvailableToBack[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToBack[i].Size','@i','0')">
                                                        @runner.ExchangePrices.AvailableToBack[i].Size
                                                    </label>

                                                </div>
                                            }
                                            else
                                            {
                                                <div class="col-md-4 col-sm-12 no-padding backitem">
                                                    <label id="lblbackprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionprice">

                                                    </label><br />
                                                    <label id="lblbacksize@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionsize">

                                                    </label>
                                                </div>
                                            }
                                        }

                                    </div>

                                    <div class="col-md-6 col-sm-12 no-padding">
                                        @for (int i = 0; i < 3; i++)
                                        {
                                            if (runner.ExchangePrices.AvailableToLay.Count > i && runner.ExchangePrices.AvailableToLay.Count > 0 && runner.ExchangePrices.AvailableToLay[i].Price > 0)
                                            {
                                                <div class="col-md-4 col-sm-12 no-padding layitem">

                                                    <label id="lbllayprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionprice" onclick="showbetslip('@runner.SelectionId.Replace(" ","")','lay',' @runner.ExchangePrices.AvailableToLay[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToLay[i].Size','@i','0')">
                                                        @runner.ExchangePrices.AvailableToLay[i].Price
                                                    </label><br />
                                                    <label id="lbllaysize@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionsize" onclick="showbetslip('@runner.SelectionId.Replace(" ","")','lay',' @runner.ExchangePrices.AvailableToLay[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToLay[i].Size','@i','0')">
                                                        @runner.ExchangePrices.AvailableToLay[i].Size
                                                    </label>


                                                </div>
                                            }
                                            else
                                            {
                                                <div class="col-md-4 col-sm-12 no-padding layitem">
                                                    <label id="lbllayprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionprice">

                                                    </label><br />
                                                    <label id="lbllaysize@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionsize">

                                                    </label>
                                                </div>
                                            }

                                        }
                                    </div>

                                </div>
                            </div>

                        </div>
                                            valueid = valueid + 1;
                                        }


                </div>

            </div>



                                        }

    }
</div>



<script type="text/javascript">

    $(document).ready(function () {

        //$.ajax({
        //    url: '/DashBoard/CuttingUsers',
        //    async: false,
        //    type: 'POST',


        //    complete: function () {
        //        $('.selectpicker').selectpicker();


        //        HideLoader();
        //    },
        //    success: function (data) {

        //        $("#allusersCuttingUsers").html(data);

        //        //// $form.html(data);
        //        // $form.removeData('validator');
        //        // $form.removeData('unobtrusiveValidation');
        //        // $.validator.unobtrusive.parse($form);
        //    }
        //});
        $(".runners").each(function () {

            var id = $(this).attr("data-value");
            //LoadRunnername(id);

            if ($("#openedbetslipid").val() == id) {

                SetBackandlayonbetslip(id);
            }

        });

    });

</script>
