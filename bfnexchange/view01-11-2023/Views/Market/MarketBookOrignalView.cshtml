@model IEnumerable<MarketNode>

@if (LoggedinUserDetail.GetUserTypeID() == 1)
{

    <input type="button" value="Show Average Section" onclick="ShowAverageSection()" />
    <div class="averagecalculations">

    </div>
    <input type="hidden" id="averagerunner1" />
    <input type="hidden" id="averagerunner2" />
}
<ul class="nav nav-tabs marketbooksul">


    @foreach (var item in Model)
    {
        <li id="marketbook@(item.marketId.ToString().Replace(".", ""))li" onclick="SetLastLoadedMarket('@item.marketId')" data-value="@item.marketId">

            <a href="#marketbook@(item.marketId.ToString().Replace(".", ""))" data-toggle="tab">@item.MarketBookName </a>
            <span class="close" onclick="deletetab('@(item.marketId.ToString())')">x</span>
            <input type="hidden" id="selectedrunners@(item.marketId.ToString().Replace(".", ""))" value="" />
            <input type="hidden" id="selectedrunnersclothnumber@(item.marketId.ToString().Replace(".", ""))" value="" />
            <input type="hidden" id="marketbookCategory@(item.marketId.ToString().Replace(".", ""))" value="@item.MainSportsname" />
            <input type="hidden" id="marketbookorignalopendate@(item.marketId.ToString().Replace(".", ""))" value="@item.OrignalOpenDate" />
            <input type="hidden" id="marketbookname@(item.marketId.ToString().Replace(".", ""))" value="@item.MarketBookName" />
        </li>
    }
</ul>

<div class="tab-content">

    @{
        foreach (var item in Model)
        {
            if (LoggedinUserDetail.GetUserTypeID() == 1)
            {


                <div id="averagecalculationDynamic@(item.marketId.ToString().Replace(".", ""))" class="col-md-12 no-padding" style="display:none">
                    <div class="col-md-2">

                        <div class="col-md-12">


                            @Html.DropDownListFor(item1 => item.runners,
   new SelectList(item.runners, "selectionId", "runner.description.runnerName"),
   new { @id = "ddlRunners1" + (item.marketId.ToString().Replace(".", "")), @class = "ddlaveragerunners" })
                        </div>
                        <div class="col-md-12">
                            <input type="text" class="averagerates" id="averageamt1@(item.marketId.ToString().Replace(".", ""))" />
                        </div>
                        <div class="col-md-12">
                            <label class="averageLateover1" id="averageamt1@(item.marketId.ToString().Replace(".", ""))">L</label>
                        </div>
                    </div>
                    <div class="col-md-2">

                        <div class="col-md-12">
                            @Html.DropDownListFor(item1 => item.runners,
   new SelectList(item.runners, "selectionId", "runner.description.runnerName"),
   new { @id = "ddlRunners2" + (item.marketId.ToString().Replace(".", "")), @class = "ddlaveragerunners" })
                        </div>
                        <div class="col-md-12">
                            <input type="text" class="averagerates" id="averageamt2@(item.marketId.ToString().Replace(".", ""))" />
                        </div>
                        <div class="col-md-12">
                            <label class="averageLateover2" id="averageamt2@(item.marketId.ToString().Replace(".", ""))">L</label>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="col-md-12 no-padding">
                            <div class="col-md-12 no-padding">
                                <div class="col-md-12">


                                    @Html.DropDownListFor(item1 => item.runners,
   new SelectList(item.runners, "selectionId", "runner.description.runnerName"),
   new { @id = "ddlRunnersBetAdmin" + (item.marketId.ToString().Replace(".", "")), @class = "ddlaveragerunners" })
                                </div>
                            </div>
                            <div class="col-md-6 no-padding">
                                <div class="col-md-3">
                                    <label class="control-label">Odd</label>
                                </div>
                                <div class="col-md-9">
                                    <input type="text" id="txtAdminOdd@(item.marketId.ToString().Replace(".", ""))" class="form-control" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="col-md-3">
                                    <label class="control-label">Amount</label>
                                </div>
                                <div class="col-md-9">
                                    <input type="text" id="txtAdminAmount@(item.marketId.ToString().Replace(".", ""))" class="form-control" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="col-md-12">
                                    <select id="ddladminbettype@(item.marketId.ToString().Replace(".", ""))">
                                        <option value="back">Back</option>
                                        <option value="lay">Lay</option>

                                    </select>
                                </div>
                                <div class="col-md-6">
                                    <input type="button" id="btnAdminBet" class="btn-default" onclick="insertbetslipSimple()" value="Add" />
                                </div>
                            </div>

                        </div>
                    </div>


                </div>
            }



            @*<input type="hidden" id="inplaystatus" value="@(item.IsInplay.ToString())" />
                <input type="hidden" id="marketstatus" value="@(item.Status.ToString())" />*@
    int valueid = 0;
    <div id="marketbook@(item.marketId.ToString().Replace(".", ""))" class="tab-pane" data-marketId="@item.marketId">

        <input type="hidden" id="marketbooksheet@(item.marketId.ToString().Replace(".", ""))" value="@item.SheetName" />

        <div class="col-md-12 no-padding marketinfo">
            <label class="marketname">@item.MarketBookName</label>
            <label class="markettime" id="lbltimer@(item.marketId.ToString().Replace(".", ""))">@item.OpenDate</label>

            @if (item.state.inplay == true && item.state.status == "OPEN")
                {
                <label id="marketbookstatus@(item.marketId.ToString().Replace(".", ""))" class="marketstatus inplay">In-Play</label>
            }
            else
            {
                if (item.state.status == "Suspended")
                {
                    <label id="marketbookstatus@(item.marketId.ToString().Replace(".", ""))" class="marketstatus suspended">Suspended</label>
                }
                else
                {
                    if (item.state.status == "Closed")
                    {
                        <label id="marketbookstatus@(item.marketId.ToString().Replace(".", ""))" class="marketstatus completed">Closed</label>
                    }
                    else
                    {
                        <label id="marketbookstatus@(item.marketId.ToString().Replace(".", ""))" class="marketstatus active">Active</label>
                    }

                }
            }

           

        </div>
        <div class="col-md-12 no-padding">

            <div id="favoriteselectionfixed@(item.marketId.ToString().Replace(".", ""))" class="favoriteselection">

                <div class="favoriteselectionname">
                    @if (item.FavoriteSelectionName != "")
                    {
                        <label id="lblfavoritename@(item.marketId.ToString().Replace(".", ""))">@item.FavoriteSelectionName</label>
                    }
                    else
                    {
                        <label id="lblfavoritename@(item.marketId.ToString().Replace(".", ""))"></label>
                    }

                </div>
                <div class="favoritepricebackandlay matchcolors">
                    <div class="favoritebackprice">
                        <label id="lblfavoritebackprice@(item.marketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','back',' @(Convert.ToDecimal(item.FavoriteBack) + 1)','4000','0','@item.marketId','@item.MarketBookName','@item.FavoriteBackSize','0')">@item.FavoriteBack</label>
                    </div>
                    <div class="favoritelayprice">
                        <label id="lblfavoritelayprice@(item.marketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','lay',' @(Convert.ToDecimal(item.FavoriteLay) + 1)','4000','0','@item.marketId','@item.MarketBookName','@item.FavoriteLaySize','0')">@item.FavoriteLay</label>
                    </div>
                </div>
                <div class="favoritesizebackandlay">
                    <div class="favoritebacksize">
                        <label id="lblfavoritebacksize@(item.marketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','back',' @(Convert.ToDecimal(item.FavoriteBack) + 1)','4000','0','@item.marketId','@item.MarketBookName','@item.FavoriteBackSize','0')">@item.FavoriteBackSize</label>
                    </div>
                    <div class="favoritelaysize">
                        <label id="lblfavoritelaysize@(item.marketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','lay',' @(Convert.ToDecimal(item.FavoriteLay) + 1)','4000','0','@item.marketId','@item.MarketBookName','@item.FavoriteLaySize','0')">@item.FavoriteLaySize</label>
                    </div>
                </div>

            </div>

        </div>

        <div class="col-md-12 pull-left no-padding runnerswrapper">
            <div class="col-md-2 no-padding runnernamediv">
                <label class="runnersname">
                    Selection
                </label>



            </div>
            <div class="col-md-1 no-padding runnerlastpricediv">
                <label class="runnerslastprice">
                    Price
                </label>
            </div>
            <div class="col-md-2 no-padding runnerprofitandlossdiv">
                <label class="runnersprofitloss">
                    P/L
                </label>
            </div>
            <div class="col-md-7 no-padding  runnerbackandlaydiv">
                <div class="col-md-12 no-padding">
                    <div class="col-md-6 no-padding backhead">
                        <div class="col-md-12 no-padding">
                            <div class="col-md-4 no-padding">

                            </div>
                            <div class="col-md-4 no-padding">

                            </div>
                            <div class="col-md-4 no-padding">
                                <label>Back</label>
                            </div>

                        </div>

                    </div>
                    <div class="col-md-6 no-padding layhead">
                        <div class="col-md-12 no-padding">
                            <div class="col-md-4 no-padding">
                                <label>Lay</label>
                            </div>
                            <div class="col-md-4 no-padding">

                            </div>
                            <div class="col-md-4 no-padding">

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>


        <div class="backgroundimageforSuspended">
            @foreach (var runner in item.runners)
                {
                <div id="selection@(runner.selectionId)" class="col-md-12 pull-left no-padding runnerswrapper">

                    <div id="runnernamediv@(runner.selectionId)" class="col-md-2 no-padding runnernamediv">
                        <label style="display:none">
                            @runner.selectionId
                        </label>
                        @if (item.MainSportsname == "Horse Racing" && runner.description.metadata.JOCKEY_NAME != "Not")
                    {<input type="checkbox" id="chkselection@(runner.selectionId)" class="checkboxrunnername" onchange="AddRunnersformultiplebets('@runner.selectionId')" />
                            <label data-value="@runner.selectionId" class="runners runnersclothnumber" id="lblSelectionClothnumber@(runner.selectionId)">
                                @runner.description.metadata.CLOTH_NUMBER
                            </label>
                            <img class="runnerwearing" src="@runner.description.metadata.COLOURS_FILENAME" title="@runner.description.metadata.COLOURS_DESCRIPTION" onerror="this.onerror = null; this.src = '../Content/images/not-found.png';" />
                            <label for="chkselection@(runner.selectionId)" data-value="@runner.selectionId" class="runners runnersnameHorse" id="lblSelectionName@(runner.selectionId)">
                                @runner.description.runnerName
                            </label>
                            <label id="lbljockey@(runner.selectionId)" class="jockeyname">@runner.description.metadata.JOCKEY_NAME</label>
                        }
                        else
                        {
                            <input type="checkbox" id="chkselection@(runner.selectionId)" class="checkboxrunnername" onchange="AddRunnersformultiplebets('@runner.selectionId')" />
                            <label for="chkselection@(runner.selectionId)" data-value="@runner.selectionId" class="runners runnersname" id="lblSelectionName@(runner.selectionId)">
                                @runner.description.runnerName
                            </label>
                        }
                        @*<input type="checkbox" id="chkselection@(runner.selectionId)" class="checkboxrunnername" onchange="AddRunnersformultiplebets('@runner.selectionId')" />
                            <label for="chkselection@(runner.selectionId)" data-value="@runner.selectionId" class="runners runnersname" id="lblSelectionName@(runner.selectionId)">
                                @runner.RunnerName
                            </label>*@

                    </div>
                    <div class="col-md-1 no-padding runnerlastpricediv">
                        <label id="lblrunnerlastprice@(runner.selectionId)" class="runnerslastprice">
                            @runner.state.lastPriceTraded
                        </label>

                    </div>
                    <div class="col-md-1 no-padding runnerprofitandlossdiv">
                        @if (runner.ProfitandLoss >= 0)
                    {
                            <label id="lblprofitandloss@(runner.selectionId)" class="runnersprofitlossgreen">
                                @runner.ProfitandLoss
                            </label>
                        }
                        else
                        {
                            <label id="lblprofitandloss@(runner.selectionId)" class="runnersprofitlossred">
                                @runner.ProfitandLoss
                            </label>
                        }

                    </div>
                    <div class="col-md-8 no-padding priceandsize matchcolors runnerbackandlaydiv">
                        <div class="col-md-12 no-padding">
                            <div class="col-md-6 no-padding">

                                @for (int i = 2; i >= 0; i--)
                                {
                                    if (runner.exchange.availableToBack.Count - 1 >= i && runner.exchange.availableToBack.Count > 0 && runner.exchange.availableToBack[i].price > 0)
                                    {
                                        <div class="col-md-4 no-padding backitem">
                                            <label id="lblbackprice@(i.ToString() + runner.selectionId.ToString().Replace(" ",""))" class="selectionprice" onclick="showbetslip('@runner.selectionId','back',' @runner.exchange.availableToBack[i].price','2000','0','@item.marketId','@item.MarketBookName','@runner.exchange.availableToBack[i].size','@i','0')">
                                                @runner.exchange.availableToBack[i].price
                                            </label><br />
                                            <label id="lblbacksize@(i.ToString() + runner.selectionId.ToString().Replace(" ",""))" class="selectionsize" onclick="showbetslip('@runner.selectionId','back',' @runner.exchange.availableToBack[i].price','2000','0','@item.marketId','@item.MarketBookName','@runner.exchange.availableToBack[i].size','@i','0')">
                                                @runner.exchange.availableToBack[i].size
                                            </label>

                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-md-4 no-padding backitem">
                                            <label id="lblbackprice@(i.ToString() + runner.selectionId.ToString().Replace(" ",""))" class="selectionprice">
                                                0
                                            </label><br />
                                            <label id="lblbacksize@(i.ToString() + runner.selectionId.ToString().Replace(" ",""))" class="selectionsize">
                                                0
                                            </label>
                                        </div>
                                    }
                                }

                            </div>

                            <div class="col-md-6 no-padding">
                                @for (int i = 0; i < 3; i++)
                                {
                                    if (runner.exchange.availableToLay.Count > i && runner.exchange.availableToLay.Count > 0 && runner.exchange.availableToLay[i].price > 0)
                                    {
                                        <div class="col-md-4 no-padding layitem">

                                            <label id="lbllayprice@(i.ToString() + runner.selectionId.ToString().Replace(" ",""))" class="selectionprice" onclick="showbetslip('@runner.selectionId','lay',' @runner.exchange.availableToLay[i].price','2000','0','@item.marketId','@item.MarketBookName','@runner.exchange.availableToLay[i].size','@i','0')">
                                                @runner.exchange.availableToLay[i].price
                                            </label><br />
                                            <label id="lbllaysize@(i.ToString() + runner.selectionId.ToString().Replace(" ",""))" class="selectionsize" onclick="showbetslip('@runner.selectionId','lay',' @runner.exchange.availableToLay[i].price','2000','0','@item.marketId','@item.MarketBookName','@runner.exchange.availableToLay[i].size','@i','0')">
                                                @runner.exchange.availableToLay[i].size
                                            </label>


                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-md-4 no-padding layitem">
                                            <label id="lbllayprice@(i.ToString() + runner.selectionId.ToString().Replace(" ",""))" class="selectionprice">
                                                0
                                            </label><br />
                                            <label id="lbllaysize@(i.ToString() + runner.selectionId.ToString().Replace(" ",""))" class="selectionsize">
                                                0
                                            </label>
                                        </div>
                                    }

                                }
                            </div>

                        </div>
                    </div>

                </div>
                valueid = valueid + 1;
            }
        </div>



    </div>



        }

    }
</div>


<script type="text/javascript">
    $(document).ready(function () {

        $(".runners").each(function () {

            var id = $(this).attr("data-value");
            //LoadRunnername(id);

            if ($("#openedbetslipid").val() == id) {

                SetBackandlayonbetslip(id);
            }

        });

    });

</script>

