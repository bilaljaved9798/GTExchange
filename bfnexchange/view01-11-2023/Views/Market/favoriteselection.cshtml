@model IEnumerable<ExternalAPI.TO.MarketBook>
@if (Model.Count() > 0)
{
    <input type="hidden" id="totalmarketsopened" value="@Model.FirstOrDefault().marketsopened" />
}
else
{
    <input type="hidden" id="totalmarketsopened" value="0" />
}
<input type="hidden" id="lblallLiabalityNew" value="@ViewBag.totliabalityNew">
<ul class="nav nav-tabs marketbooksul">


    @foreach (var item in Model)
    {
    <li id="marketbook@(item.MarketId.ToString().Replace(".", ""))li" onclick="SetLastLoadedMarket('@item.MarketId')" data-value="@item.MarketId">

        <a href="#marketbook@(item.MarketId.ToString().Replace(".", ""))" data-toggle="tab">@item.MarketBookName </a>
        <span class="close" onclick="deletetab('@(item.MarketId.ToString())')">x</span>
        <input type="hidden" id="selectedrunners@(item.MarketId.ToString().Replace(".", ""))" value="" />
		        <input type="hidden" id="selectedrunnersforavg@(item.MarketId.ToString().Replace(".", ""))" value="" />
        <input type="hidden" id="selectedrunnersclothnumber@(item.MarketId.ToString().Replace(".", ""))" value="" />
        <input type="hidden" id="marketbookCategory@(item.MarketId.ToString().Replace(".", ""))" value="@item.MainSportsname" />
        <input type="hidden" id="marketbookorignalopendate@(item.MarketId.ToString().Replace(".", ""))" value="@item.OrignalOpenDate" />
        <input type="hidden" id="marketbookname@(item.MarketId.ToString().Replace(".", ""))" value="@item.MarketBookName" />
        <input type="hidden" id="marketbookrunners@(item.MarketId.ToString().Replace(".", ""))" value="@item.Runners.Count.ToString()" />
        <input type="hidden" id="marketbookAllowedBetting@(item.MarketId.ToString().Replace(".", ""))" value="@Convert.ToInt32(item.BettingAllowed).ToString()" />
        <input type="hidden" id="marketbookAllowedBettingOverAll@(item.MarketId.ToString().Replace(".", ""))" value="@Convert.ToInt32(item.BettingAllowedOverAll).ToString()" />
        <input type="hidden" id="marketbookTotalMatched@(item.MarketId.ToString().Replace(".", ""))" value="@item.TotalMatched.ToString()" />
        <input type="hidden" id="currentteamforSelection@(item.MarketId.ToString().Replace(".", ""))" value="A" />
        <input type="hidden" id="currentview@(item.MarketId.ToString().Replace(".", ""))" value="0" />
		 <input type="hidden" id="getmatchupdatesfrom@(item.MarketId.ToString().Replace(".", ""))" value="@item.GetMatchUpdatesFrom" />
        <input type="hidden" id="eventidfor@(item.MarketId.ToString().Replace(".", ""))" value="@item.EventID" />
        @if (item.LineVMarkets != null)
            {


            <input type="hidden" id="marketbookFancyIDs@(item.MarketId.ToString().Replace(".", ""))" value="true" />
            @*<input type="hidden" id="marketbookFancyMarket@(item.MarketId.ToString().Replace(".", ""))" value="@LoggedinUserDetail.ConverttoJSONString(@item.LineVMarkets)" />*@
            }
            else
            {
            <input type="hidden" id="marketbookFancyIDs@(item.MarketId.ToString().Replace(".", ""))" value="false" />
            }

        <input type="hidden" id="marketbookFancyShown@(item.MarketId.ToString().Replace(".", ""))" value="true" />
        @if (item.MainSportsname == "Cricket" && item.MarketBookName.Contains("Match Odds"))
            {
            <input type="hidden" id="marketbookgetscores@(item.MarketId.ToString().Replace(".", ""))" value="true" />
            <input type="hidden" id="marketbookcricketkey@(item.MarketId.ToString().Replace(".", ""))" value="@item.CricketMatchKey" />
            }
            else
            {
            <input type="hidden" id="marketbookgetscores@(item.MarketId.ToString().Replace(".", ""))" value="false" />
            }
    </li>
    }
</ul>

<div class="tab-content">

    @{
        foreach (var item in Model)
        {
            int valueid = 0;
            <div id="marketbook@(item.MarketId.ToString().Replace(".", ""))" class="tab-pane" data-marketid="@item.MarketId">
                <input type="hidden" id="totalmarketsopened@(item.MarketId.ToString().Replace(".", ""))" value="@item.marketsopened" />
                <input type="hidden" id="marketbooksheet@(item.MarketId.ToString().Replace(".", ""))" value="@item.SheetName" />


                <div id="favoriteselectionfixed@(item.MarketId.ToString().Replace(".", ""))" class="favoriteselection">

                    <div class="favoriteselectionname">
                        @if (item.FavoriteSelectionName != "")
                        {
                            <label id="lblfavoritename@(item.MarketId.ToString().Replace(".", ""))">@item.FavoriteSelectionName</label>
                        }
                        else
                        {
                            <label id="lblfavoritename@(item.MarketId.ToString().Replace(".", ""))"></label>
                        }
                        @{
                            try
                            {
                                string favID = item.FavoriteID;
                                <label id="lblfavoriteselection@(item.MarketId.ToString().Replace(".", ""))" style="display:none">@favID</label>
                            }
                            catch (System.Exception ex)
                            {
                                var err = ex.Message;
                            }


                        }

                    </div>

                    <div class="favoritepricebackandlay matchcolors">
                        <div class="favoritebackprice">
                            <label id="lblfavoritebackprice@(item.MarketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','back',' @(Convert.ToDecimal(item.FavoriteBack) + 1)','4000','0','@item.MarketId','@item.MarketBookName','@item.FavoriteBackSize','0')">@item.FavoriteBack</label>
                        </div>
                        <div class="favoritelayprice">
                            <label id="lblfavoritelayprice@(item.MarketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','lay',' @(Convert.ToDecimal(item.FavoriteLay) + 1)','4000','0','@item.MarketId','@item.MarketBookName','@item.FavoriteLaySize','0')">@item.FavoriteLay</label>
                        </div>
                    </div>
                    <div class="favoritesizebackandlay">
                        <div class="favoritebacksize">
                            <label id="lblfavoritebacksize@(item.MarketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','back',' @(Convert.ToDecimal(item.FavoriteBack) + 1)','4000','0','@item.MarketId','@item.MarketBookName','@item.FavoriteBackSize','0')">@item.FavoriteBackSize</label>
                        </div>
                        <div class="favoritelaysize">
                            <label id="lblfavoritelaysize@(item.MarketId.ToString().Replace(".", ""))" onclick="showbetslipmultiple('@(item.FavoriteID)','lay',' @(Convert.ToDecimal(item.FavoriteLay) + 1)','4000','0','@item.MarketId','@item.MarketBookName','@item.FavoriteLaySize','0')">@item.FavoriteLaySize</label>
                        </div>
                    </div>

                </div>
                

            </div>



                                        }

    }
</div>



<script type="text/javascript">

    $(document).ready(function () {

        //$.ajax({
        //    url: '/DashBoard/CuttingUsers',
        //    async: false,
        //    type: 'POST',


        //    complete: function () {
        //        $('.selectpicker').selectpicker();


        //        HideLoader();
        //    },
        //    success: function (data) {

        //        $("#allusersCuttingUsers").html(data);

        //        //// $form.html(data);
        //        // $form.removeData('validator');
        //        // $form.removeData('unobtrusiveValidation');
        //        // $.validator.unobtrusive.parse($form);
        //    }
        //});
        $(".runners").each(function () {

            var id = $(this).attr("data-value");
            //LoadRunnername(id);

            if ($("#openedbetslipid").val() == id) {

                SetBackandlayonbetslip(id);
            }

        });

    });

</script>
