@model IEnumerable<ExternalAPI.TO.MarketBook>



<div class="tab-content fancybackandlaydiv">

    @{
        foreach (var item in Model)
        { <input type="hidden" id="marketbookCategory@(item.MarketId.ToString().Replace(".", ""))" value="@item.MainSportsname" />
        <input type="hidden" id="marketbookorignalopendate@(item.MarketId.ToString().Replace(".", ""))" value="@item.OrignalOpenDate" />
        <input type="hidden" id="marketbookname@(item.MarketId.ToString().Replace(".", ""))" value="@item.MarketBookName" />
        <input type="hidden" id="marketbookstatus@(item.MarketId.ToString().Replace(".", ""))" value="@item.MarketStatusstr" />
        <input type="hidden" id="marketbookAllowedBetting@(item.MarketId.ToString().Replace(".", ""))" value="@Convert.ToInt32(item.BettingAllowed).ToString()" />
        <input type="hidden" id="marketbookAllowedBettingOverAll@(item.MarketId.ToString().Replace(".", ""))" value="@Convert.ToInt32(item.BettingAllowedOverAll).ToString()" />
        <input type="hidden" id="marketbookrunners@(item.MarketId.ToString().Replace(".", ""))" value="@item.Runners.Count.ToString()" />
        <input type="hidden" id="marketbookTotalMatched@(item.MarketId.ToString().Replace(".", ""))" value="@item.TotalMatched.ToString()" />
            int valueid = 0;
            <div id="marketbook@(item.MarketId.ToString().Replace(".", ""))" class="tab-pane" data-marketid="@item.MarketId">
                <input type="hidden" id="totalmarketsopened@(item.MarketId.ToString().Replace(".", ""))" value="@item.marketsopened" />
                <input type="hidden" id="marketbooksheet@(item.MarketId.ToString().Replace(".", ""))" value="@item.SheetName" />


                <div class="widget flat" id="fancyWrapperParent">

                    

                    <div id="fancyclose" class="widget-header" style="display:none">
                        <span class="widget-caption">
                            You have Closed Fancy Market Area.! &nbsp; &nbsp;
                            <span id="undobutton" class="btn btn-sm btn-primary">
                                <i  class="fa fa-undo"></i>
                                Undo
                            </span>
                        </span>
                        <div class="widget-buttons">

                            <a href="#" data-toggle="dispose" style="display: none;">
                                <i class="fa fa-times danger"></i>
                            </a>
                        </div>
                    </div>

                    <div id="marketbookdataforshowFancy">

                        <div id="fancyopen" class="widget-header">
                            <span class="widget-caption"></span>
                            <div class="widget-buttons">

                                <a href="#" id="closebutton" data-toggle="dispose">
                                    <i class="fa fa-times danger"></i>
                                </a>
                            </div>
                        </div>

                        <div class="marketstatusrulesandmarkettype">


                            <label class="markettype">LINE/FANCY MARKET</label>



                            <label class="marketrules" onclick="showmarketrules('@item.MainSportsname','@item.MarketBookName','@item.Runners.Count.ToString()')">Rules</label>


                        </div>
                        <div class="col-md-12 col-sm-12 pull-left no-padding runnerswrapper runnerwrapperhead">
                            <div class="col-md-2 col-sm-8 no-padding runnernamediv ">
                                <label class="markettotalmatched" id="lblmarketbookTotalMatched@(item.MarketId.ToString().Replace(".", ""))">

                                </label>



                            </div>
                            <div class="col-md-1 col-sm-1 no-padding runnerlastpricediv">
                                <label class="runnerslastprice" style="font-size:9px">

                                </label><br />
                                <label class="runnerstotalmatched" style="font-size:9px">

                                </label>
                            </div>
                            <div class="col-md-1 col-sm-1">
                                &nbsp;
                            </div>
                            @*<div class="col-md-2 col-sm-2 no-padding runnerprofitandlossdiv">
                                    <label class="runnersprofitloss">
                                        P/L
                                    </label>
                                </div>*@
                            <div class="col-md-7 col-sm-4 no-padding  runnerbackandlaydiv" style="display: inline-flex;">
                                <div class="col-md-12 col-sm-12 no-padding">
                                    <div class="col-md-6 col-sm-12 no-padding backhead">
                                        <div class="col-md-12 col-sm-12 no-padding">
                                            <div class="col-md-4 col-sm-4 no-padding">
                                                <label></label>
                                            </div>
                                            <div class="col-md-4 no-padding">
                                                <label></label>
                                            </div>
                                            <div class="col-md-4 col-sm-12 no-padding">
                                                <label>Back</label><br />
                                                <i class="backcircle fa fa-arrow-circle-down"></i>
                                            </div>

                                        </div>

                                    </div>
                                    <div class="col-md-6 col-sm-12 no-padding layhead">
                                        <div class="col-md-12 col-sm-12 no-padding">
                                            <div class="col-md-4 col-sm-12 no-padding">
                                                <label>Lay</label><br />
                                                <i class="laycircle fa fa-arrow-circle-down"></i>
                                            </div>
                                            <div class="col-md-4 no-padding">
                                                <label></label>
                                            </div>
                                            <div class="col-md-4 no-padding">
                                                <label></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>



                        @foreach (var runner in item.Runners)
                {
                        <div id="selection@(runner.SelectionId.Replace(" ",""))" class="col-md-12 pull-left col-sm-12 no-padding runnerswrapper">

                            <div id="runnernamediv@(runner.SelectionId)" class="col-md-2 col-sm-8 no-padding runnernamediv">
                                <label style="display:none">
                                    @runner.SelectionId
                                </label>



                                <label for="chkselection@(runner.SelectionId)" data-value="@runner.SelectionId" class="runners runnersname" id="lblSelectionName@(runner.SelectionId)">
                                    @item.MarketBookName
                                </label>
                                <div class="no-padding runnerprofitandlossdivMobile">
                                    @if (runner.ProfitandLoss >= 0)
                                    {
                                <label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossgreen">
                                    @runner.ProfitandLoss
                                </label>
                                    }
                                    else
                                    {
                                <label id="lblprofitandloss@(runner.SelectionId)" class="runnersprofitlossred">
                                    @runner.ProfitandLoss
                                </label>
                                    }

                                    @if (runner.Loss >= 0)
                                    {
                                <label id="lblloss@(runner.SelectionId)" class="runnersprofitlossgreen">
                                    @runner.Loss
                                </label>
                                    }
                                    else
                                    {
                                <label id="lblloss@(runner.SelectionId)" class="runnersprofitlossred">
                                    @runner.Loss
                                </label>
                                    }



                                </div>



                            </div>
                            <div class="col-md-1 col-sm-1" style="border-top: 1px solid; color:#ccc">
                                &nbsp;
                            </div>
                            <div class="bookbutton col-md-1 no-padding col-sm-1" style="border-top: 1px solid; color:#ccc" onclick="showcompleteduserbetsFacny('@item.MarketId')">
                                Book
                            </div>




                            <div class="col-md-8 col-sm-4 no-padding priceandsize matchcolors runnerbackandlaydiv">
                                <div class="col-md-12 col-sm-12 no-padding">
                                    <div class="col-md-6 col-sm-12 no-padding">

                                        @for (int i = 2; i >= 0; i--)
                                        {
                                            if (runner.ExchangePrices.AvailableToBack.Count - 1 >= i && runner.ExchangePrices.AvailableToBack.Count > 0 && runner.ExchangePrices.AvailableToBack[i].Price > 0)
                                            {
                                    <div class="col-md-4 col-sm-12 no-padding backitem">
                                        <label id="lblbackprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionprice" onclick="showbetslip('@runner.SelectionId.Replace(" ","")','back',' @runner.ExchangePrices.AvailableToBack[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToBack[i].Size','@i','0')">
                                            @runner.ExchangePrices.AvailableToBack[i].Price
                                        </label><br />
                                        <label id="lblbacksize@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionsize" onclick="showbetslip('@runner.SelectionId.Replace(" ","")','back',' @runner.ExchangePrices.AvailableToBack[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToBack[i].Size','@i','0')">
                                            @runner.ExchangePrices.AvailableToBack[i].Size
                                        </label>

                                    </div>
                                            }
                                            else
                                            {
                                    <div class="col-md-4 col-sm-12 no-padding backitem">
                                        <label id="lblbackprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionprice">

                                        </label><br />
                                        <label id="lblbacksize@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionsize">

                                        </label>
                                    </div>
                                            }
                                        }

                                    </div>

                                    <div class="col-md-6 col-sm-12 no-padding">
                                        @for (int i = 0; i < 3; i++)
                                        {
                                            if (runner.ExchangePrices.AvailableToLay.Count > i && runner.ExchangePrices.AvailableToLay.Count > 0 && runner.ExchangePrices.AvailableToLay[i].Price > 0)
                                            {
                                    <div class="col-md-4 col-sm-12 no-padding layitem">

                                        <label id="lbllayprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionprice" onclick="showbetslip('@runner.SelectionId.Replace(" ","")','lay',' @runner.ExchangePrices.AvailableToLay[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToLay[i].Size','@i','0')">
                                            @runner.ExchangePrices.AvailableToLay[i].Price
                                        </label><br />
                                        <label id="lbllaysize@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionsize" onclick="showbetslip('@runner.SelectionId.Replace(" ","")','lay',' @runner.ExchangePrices.AvailableToLay[i].Price','2000','0','@item.MarketId','@item.MarketBookName','@runner.ExchangePrices.AvailableToLay[i].Size','@i','0')">
                                            @runner.ExchangePrices.AvailableToLay[i].Size
                                        </label>


                                    </div>
                                            }
                                            else
                                            {
                                    <div class="col-md-4 col-sm-12 no-padding layitem">
                                        <label id="lbllayprice@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionprice">

                                        </label><br />
                                        <label id="lbllaysize@(i.ToString() + runner.SelectionId.ToString().Replace(" ",""))" class="selectionsize">

                                        </label>
                                    </div>
                                            }

                                        }
                                    </div>

                                </div>
                            </div>

                        </div>
                                            valueid = valueid + 1;
                                        }


                    </div>
                </div>

            </div>



        }

    }
</div>



<script type="text/javascript">

    $("#closebutton").click(function () {
        $("#marketbookdataforshowFancy").hide();
        $("#fancyclose").show();
    });

    $("#undobutton").click(function () {
        $("#marketbookdataforshowFancy").show();
        $("#fancyclose").hide();
    });

    $(document).ready(function () {

        //$.ajax({
        //    url: '/DashBoard/CuttingUsers',
        //    async: false,
        //    type: 'POST',


        //    complete: function () {
        //        $('.selectpicker').selectpicker();


        //        HideLoader();
        //    },
        //    success: function (data) {

        //        $("#allusersCuttingUsers").html(data);

        //        //// $form.html(data);
        //        // $form.removeData('validator');
        //        // $form.removeData('unobtrusiveValidation');
        //        // $.validator.unobtrusive.parse($form);
        //    }
        //});
        $(".runners").each(function () {

            var id = $(this).attr("data-value");
            //LoadRunnername(id);

            if ($("#openedbetslipid").val() == id) {

                SetBackandlayonbetslip(id);
            }

        });

    });

</script>
