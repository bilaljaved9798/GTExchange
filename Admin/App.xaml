<Application x:Class="globaltraders.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:globaltraders"
             xmlns:wpfTool="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             StartupUri="LoginWindow.xaml">
    <Application.Resources>
       
        <Style TargetType="Window">
            <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        </Style>
        <Style TargetType="UserControl">
            <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        </Style>
       
        <Style TargetType="{x:Type TreeView}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#CBE8F6" />
              
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
            </Style.Resources>
        </Style>
        <Style TargetType="TabItem" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Gainsboro" CornerRadius="4,4,0,0" Margin="2,0">
                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1"  StartPoint="0,0.5">
                                            <GradientStop Color="#FF000000" Offset="1"/>
                                            <GradientStop Color="#FF243875" Offset="-1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>

                                
                                <Setter  Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                                <Setter  Property="Foreground" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                      
                       
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="local:ClosableTab" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:ClosableTab">
                        <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Gainsboro" CornerRadius="4,4,0,0" Margin="2,0">
                            <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FF243875" />
                                <Setter  Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                                <Setter  Property="Foreground" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TreeViewItem">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="2"></Setter>
            <Setter Property="Margin" Value="1"></Setter>
            <Setter Property="Foreground" Value="#FF243875"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
        
           
        </Style>
      
       
       
       
        
        <Style TargetType="Border" x:Key="HideBorer">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="REMOVED">
                    <Setter Property="Visibility" Value="Hidden"/>

                </DataTrigger>
              
            </Style.Triggers>
        </Style>
        
        
        <Style x:Key="size" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="Margin" Value="0,1" />
            <Setter Property="FontWeight" Value="Normal"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
        </Style>

        <Style x:Key="Price" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="FontWeight" Value="Black"></Setter>
            <Setter Property="Margin" Value="0,0" />
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"></Setter>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"></Setter>
        </Style>
        <Style TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <SolidColorBrush Color="Transparent"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground"
                            Value="Black"/>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="Transparent"/>
                        </Setter.Value>
                    </Setter>

                </Trigger>
              
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" >
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1"  StartPoint="0,0.5">
                        <GradientStop Color="#FF000000" Offset="1"/>
                        <GradientStop Color="#FF243875" Offset="-1"/>



                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"></Setter>
           
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>



        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="FontWeight" Value="Black"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
            <Setter Property="Padding" Value="0,8"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center" />

        </Style>
        <Style TargetType="DataGridColumnHeader" x:Key="headerwithlines">
            <Setter Property="Background" Value=" #5b7d8f"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="FontWeight" Value="Black"></Setter>
            <Setter Property="FontSize" Value="13"></Setter>
            <Setter Property="Padding" Value="0,5"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="1,1, 1,2"/>
        </Style>

        <Style x:Key="DGSelection" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="FontWeight" Value="Black"></Setter>
            <Setter Property="FontSize" Value="19"></Setter>
            <Setter Property="Padding" Value="0,0"></Setter>
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>

        <Style x:Key="txtLoss" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Loss}" Value="0">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                    <Setter Property="FontSize" Value="18"></Setter>
                    <Setter Property="FontWeight" Value="Regular"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="txtProfit" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,0,10,0"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="FontWeight" Value="Regular"></Setter>
            <Setter Property="TextAlignment" Value="Left"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=PL}" Value="0">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="txtStatusMainGrid" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=MarketStatus}" Value="In Play">
                    <Setter Property="Foreground" Value="DarkGreen"/>
                   
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=MarketStatus}" Value="Closed">
                    <Setter Property="Foreground" Value="DarkRed"/>
                
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=MarketStatus}" Value="Suspended">
                    <Setter Property="Foreground" Value="Red"/>

                </DataTrigger>

                <DataTrigger Binding="{Binding Path=MarketStatus}" Value="Active">
                    <Setter Property="Foreground" Value="#FF243875"/>

                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Image" x:Key="marketstatusimg">
            <Style.Triggers>
                <DataTrigger Binding="{Binding NotFound}" Value="false">
                    <Setter Property="Source" Value="Image\TabFile.PNG"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding NotFound}" Value="true">
                    <Setter Property="Source" Value="Image\ErrorTabFile.PNG"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock" x:Key="GridBlueMouseHover1and2">
           
            <Setter Property= "Background" Value="Transparent"/>
            <Style.Triggers>
              
               
                </Style.Triggers>
           
        </Style>
        <Style x:Key="txtStatusMarketWindow" TargetType="Label">
            <Style.Triggers>
                <Trigger Property="Content" Value="IN-PLAY">
                    <Setter Property="Foreground"  Value="DarkGreen" />
                </Trigger>
                <Trigger Property="Content" Value="CLOSED">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="Content" Value="SUSPENDED">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
                <Trigger Property="Content" Value="GOING LIVE">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>

            </Style.Triggers>
        </Style>
        <Style x:Key="txtSelectionName" TargetType="TextBlock">
            <!--<Setter Property="FontFamily" Value="Times New Roman" ></Setter>-->
            <Setter Property="FontWeight" Value="SemiBold"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Padding" Value="0,0,0,0"></Setter>
            <Setter Property="Margin" Value="0,3,0,0"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="VerticalAlignment" Value="Top"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="TextAlignment" Value="Left"></Setter>

            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=isFav}" Value="False">
                    <Setter Property="Foreground" Value="#FF141b31"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="WINNER">
                    <Setter Property="Foreground" Value="White"/>

                </DataTrigger>

                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="ACTIVE">
                    <Setter Property="Foreground" Value="#FF141b31"/>

                </DataTrigger>

                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="LOSER">
                    <Setter Property="Foreground" Value="#FF141b31"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="REMOVED_VACANT">
                    <Setter Property="Foreground" Value="#FF141b31"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="REMOVED">
                    <Setter Property="Foreground" Value="#FF141b31"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding Path=isFav}" Value="True">
                    <Setter Property="Foreground" Value="Red"/>

                </DataTrigger>

            </Style.Triggers>
        </Style>
        <Style x:Key="txtJockeyname" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=JockeyName}" Value="Not">
                    <Setter Property="Visibility" Value="Hidden"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding Path=JockeyName}" Value="">
                    <Setter Property="Visibility" Value="Hidden"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="WINNER">
                    <Setter Property="Foreground" Value="White"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="ACTIVE">
                    <Setter Property="Foreground" Value="#FF243875"/>

                </DataTrigger>
              
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="LOSER">
                    <Setter Property="Foreground" Value="#FF243875"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="REMOVED_VACANT">
                    <Setter Property="Foreground" Value="#FF243875"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="REMOVED">
                    <Setter Property="Foreground" Value="#FF243875"/>

                </DataTrigger>

            </Style.Triggers>
        </Style>
        <Style x:Key="txtRunnerStatus" TargetType="TextBlock">
           
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="ACTIVE">
                    <Setter Property="Visibility" Value="Hidden"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="WINNER">
                    <Setter Property="Visibility" Value="Hidden"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="LOSER">
                    <Setter Property="Visibility" Value="Hidden"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="REMOVED_VACANT">
                    <Setter Property="Visibility" Value="Visible"/>

                </DataTrigger>
                <DataTrigger Binding="{Binding Path=RunnerStatusstr}" Value="REMOVED">
                    <Setter Property="Visibility" Value="Visible"/>

                </DataTrigger>

            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type wpfTool:MessageBox}">
            <Setter Property="Background" >
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1"  StartPoint="0,0.5">
                        <GradientStop Color="#FF000000" Offset="1"/>
                        <GradientStop Color="#FF243875" Offset="-1"/>



                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" >
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1"  StartPoint="0,0.5">
                        <GradientStop Color="#FF000000" Offset="1"/>
                        <GradientStop Color="#FF243875" Offset="-1"/>



                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="CaptionForeground" Value="White" />
            <Setter Property="WindowBorderBrush" Value="#FF243875" />
            <Setter Property="Background" >
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1"  StartPoint="0,0.5">
                        <GradientStop Color="#FF000000" Offset="1"/>
                        <GradientStop Color="#FF243875" Offset="-1"/>



                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="WindowOpacity" Value="1" />
            <Setter Property="Foreground" Value="White"/>
            

        </Style>
     
       
    </Application.Resources>
</Application>
